STATIC VAR.	swData           of SYSTEM          0       1       
STATIC VAR.	swData2          of SYSTEM          1       1       
STATIC VAR.	swData3          of SYSTEM          2       1       
STATIC VAR.	swData4          of SYSTEM          3       1       
STATIC VAR.	swWidth          of SYSTEM          4       1       
STATIC VAR.	swHeight         of SYSTEM          5       1       
STATIC VAR.	swFrame          of SYSTEM          6       1       
STATIC VAR.	swFrame2         of SYSTEM          7       1       
STATIC VAR.	swFrame3         of SYSTEM          8       1       
STATIC VAR.	swFrame6         of SYSTEM          9       1       
STATIC VAR.	swVMver          of SYSTEM          10      3       0       
STATIC VAR.	swModel          of SYSTEM          11      8       0       
STATIC VAR.	swSmsRcvBuf      of SYSTEM          12      41      0       
STATIC VAR.	swRsRcvBuf       of SYSTEM          13      128     0       
STATIC VAR.	swRcvBuf         of SYSTEM          14      256     0       
STATIC VAR.	swReserved1      of SYSTEM          15      1       
STATIC VAR.	swReserved2      of SYSTEM          16      1       
STATIC VAR.	swReserved3      of SYSTEM          17      1       
STATIC VAR.	swReserved4      of SYSTEM          18      1       
STATIC VAR.	swSbuf           of SYSTEM          19      1       
STATIC VAR.	LABEL_TITLE      of SYSTEM          20      0       1       
STATIC VAR.	LABEL_MENU       of SYSTEM          21      3       
 1           2           3          
STATIC VAR.	currentMode      of SYSTEM          22      0       0       
STATIC VAR.	currentMenu      of SYSTEM          23      0       0       
STATIC VAR.	chance           of SYSTEM          24      1       
STATIC VAR.	gamePoint        of SYSTEM          25      1       
STATIC VAR.	questNumber      of SYSTEM          26      1       
STATIC VAR.	answeredNumber   of SYSTEM          27      1       
STATIC VAR.	historyNumber    of SYSTEM          28      5       0       
STATIC VAR.	lastHistoryIndex of SYSTEM          29      0       0       
STATIC VAR.	gameRank         of SYSTEM          30      1       
STATIC VAR.	gameTurn         of SYSTEM          31      1       
STATIC VAR.	playCount        of SYSTEM          32      1       
STATIC VAR.	currentPlayMode  of SYSTEM          33      1       
STATIC VAR.	prevPlayMode     of SYSTEM          34      1       
STATIC VAR.	inputedString    of SYSTEM          35      41      1       
STATIC VAR.	timeValue        of SYSTEM          36      0       0       
STATIC VAR.	numberSize       of SYSTEM          37      2       0       
STATIC VAR.	selectedValue    of SYSTEM          38      1       
STATIC VAR.	errorType        of SYSTEM          39      0       0       
STATIC VAR.	rank             of SYSTEM          40      10      0       
STATIC VAR.	NVROM            of SYSTEM          41      12      0       
STATIC VAR.	gOutStr          of SYSTEM          42      42      1       
STATIC VAR.	delayTime        of SYSTEM          43      1       
STATIC VAR.	delayKey         of SYSTEM          44      1       
STATIC VAR.	testString       of SYSTEM          45      43      1       
STATIC VAR.	x                of DrawInt                         46      1       
STATIC VAR.	y                of DrawInt                         47      1       
STATIC VAR.	value            of DrawInt                         48      1       
STATIC VAR.	str              of DrawInt                         49      44      1       
STATIC VAR.	n                of Power                           50      1       
STATIC VAR.	exp              of Power                           51      1       
STATIC VAR.	i                of Power                           52      1       
STATIC VAR.	result           of Power                           53      1       
STATIC VAR.	sourceDate       of DateToInt                       54      1       
STATIC VAR.	result           of DateToInt                       55      1       
STATIC VAR.	result           of IntToDate                       56      1       
STATIC VAR.	sourceDate       of IntToDate                       57      1       
STATIC VAR.	tempDate         of GetDateToInt                    58      3       0       
STATIC VAR.	x1               of DrawBlueBox                     59      1       
STATIC VAR.	y1               of DrawBlueBox                     60      1       
STATIC VAR.	x2               of DrawBlueBox                     61      1       
STATIC VAR.	y2               of DrawBlueBox                     62      1       
STATIC VAR.	x1               of DrawPinkBox                     63      1       
STATIC VAR.	y1               of DrawPinkBox                     64      1       
STATIC VAR.	x2               of DrawPinkBox                     65      1       
STATIC VAR.	y2               of DrawPinkBox                     66      1       
STATIC VAR.	rowIndex         of DrawHistory                     67      1       
STATIC VAR.	historyNum       of DrawHistory                     68      1       
STATIC VAR.	value            of AddHistory                      69      1       
STATIC VAR.	error            of error                           70      1       
STATIC VAR.	bonus            of GetBonusPoint                   71      1       
STATIC VAR.	point            of AddRank                         72      1       
STATIC VAR.	rankNumber       of AddRank                         73      1       
STATIC VAR.	i                of AddRank                         74      1       
STATIC VAR.	i                of LoadROM                         75      1       
STATIC VAR.	j                of LoadROM                         76      1       
STATIC VAR.	i                of SaveRank                        77      1       
STATIC VAR.	j                of SaveRank                        78      1       
STATIC VAR.	mode             of ChangeMode                      79      1       
STATIC VAR.	prevMode         of ChangeMode                      80      1       
STATIC VAR.	mode             of ChangePlayMode                  81      1       
STATIC VAR.	key              of ControlPlayReady                82      1       
STATIC VAR.	key              of ControlPlayInput                83      1       
STATIC VAR.	key              of ControlPlayCompared             84      1       
STATIC VAR.	key              of ControlPlayOver                 85      1       
STATIC VAR.	key              of ControlPlayRecord               86      1       
STATIC VAR.	key              of ControlPlayGiveup               87      1       
STATIC VAR.	key              of ControlPlayNextquest            88      1       
STATIC VAR.	tempString       of DrawPlayBase                    89      45      1       
STATIC VAR.	rowIndex         of DrawPlayBase                    90      1       
STATIC VAR.	i                of DrawPlayBase                    91      1       
STATIC VAR.	tempString       of DrawPlayReady                   92      46      1       
STATIC VAR.	key              of ControlIndex                    93      1       
STATIC VAR.	key              of ControlMain                     94      1       
STATIC VAR.	key              of ControlPlay                     95      1       
STATIC VAR.	key              of ControlRank                     96      1       
STATIC VAR.	key              of ControlOption                   97      1       
STATIC VAR.	i                of DrawRank                        98      1       
STATIC VAR.	rankTime         of DrawRank                        99      3       0       
STATIC VAR.	printFormat      of DrawRank                        100     47      1       
FUNCTION	DrawInt          has 3     args.
FUNCTION	Power            has 2     args.
FUNCTION	DateToInt        has 1     args.
FUNCTION	IntToDate        has 2     args.
FUNCTION	GetDateToInt     has 0     args.
FUNCTION	DrawBlueBox      has 4     args.
FUNCTION	DrawPinkBox      has 4     args.
FUNCTION	DrawNoticeBox    has 0     args.
FUNCTION	DrawBack1        has 0     args.
FUNCTION	DrawBack2        has 0     args.
FUNCTION	DrawBack3        has 0     args.
FUNCTION	DrawQuestion     has 0     args.
FUNCTION	DrawHistory      has 2     args.
FUNCTION	InitTimer        has 0     args.
FUNCTION	PauseTimer       has 0     args.
FUNCTION	PlayTimer        has 0     args.
FUNCTION	AddHistory       has 1     args.
FUNCTION	InitHistory      has 0     args.
FUNCTION	error            has 1     args.
FUNCTION	PointUp          has 0     args.
FUNCTION	GetBonusPoint    has 0     args.
FUNCTION	GetAidChance     has 0     args.
FUNCTION	AddRank          has 1     args.
FUNCTION	LoadROM          has 0     args.
FUNCTION	SaveRank         has 0     args.
FUNCTION	SaveOption       has 0     args.
FUNCTION	ChangeMode       has 1     args.
FUNCTION	InitMode         has 0     args.
FUNCTION	ChangePlayMode   has 1     args.
FUNCTION	InitPlayMode     has 0     args.
FUNCTION	ControlPlayReady has 1     args.
FUNCTION	ControlPlayInput has 1     args.
FUNCTION	ControlPlayCompared has 1     args.
FUNCTION	ControlPlayOver  has 1     args.
FUNCTION	ControlPlayRecord has 1     args.
FUNCTION	ControlPlayGiveup has 1     args.
FUNCTION	ControlPlayNextquest has 1     args.
FUNCTION	DrawPlayBase     has 0     args.
FUNCTION	DrawPlayReady    has 0     args.
FUNCTION	DrawPlayInput    has 0     args.
FUNCTION	DrawPlayCompared has 0     args.
FUNCTION	DrawPlayOver     has 0     args.
FUNCTION	DrawPlayRecord   has 0     args.
FUNCTION	DrawPlayGiveup   has 0     args.
FUNCTION	DrawPlayNextquest has 0     args.
FUNCTION	ControlIndex     has 1     args.
FUNCTION	ControlMain      has 1     args.
FUNCTION	ControlPlay      has 1     args.
FUNCTION	ControlRank      has 1     args.
FUNCTION	ControlOption    has 1     args.
FUNCTION	DrawGame         has 0     args.
FUNCTION	DrawIndex        has 0     args.
FUNCTION	DrawMain         has 0     args.
FUNCTION	DrawPlay         has 0     args.
FUNCTION	DrawRank         has 0     args.
FUNCTION	DrawOption       has 0     args.
FUNCTION	TEST             has 0     args.
FUNCTION	EVENT_START      has 0     args.
FUNCTION	EVENT_TIMEOUT    has 0     args.
FUNCTION	EVENT_KEYPRESS   has 0     args.
FUNCTION	EVENT_RESULT     has 0     args.
MEDIA		%%0     has [ 0 0 0 13 ].
MEDIA		%%1     has [ 1 1 0 9 ].
MEDIA		%%2     has [ 2 2 0 9 ].
MEDIA		%%3     has [ 3 3 0 9 ].
MEDIA		%%4     has [ 4 4 0 22 ].
MEDIA		%%5     has [ 5 5 0 3 ].
MEDIA		%%6     has [ 6 6 0 7 ].
MEDIA		%%7     has [ 7 7 0 3 ].
MEDIA		%%8     has [ 8 8 0 7 ].
MEDIA		%%9     has [ 9 9 0 2 ].
MEDIA		%%10    has [ 10 10 0 2 ].
MEDIA		%%11    has [ 11 11 0 16 ].
MEDIA		%%12    has [ 12 12 0 21 ].
MEDIA		%%13    has [ 13 13 0 5 ].
MEDIA		%%14    has [ 14 14 0 5 ].
MEDIA		%%15    has [ 15 15 0 10 ].
MEDIA		%%16    has [ 16 16 0 5 ].
MEDIA		%%17    has [ 17 17 0 5 ].
MEDIA		%%18    has [ 18 18 0 18 ].
MEDIA		%%19    has [ 19 19 0 25 ].
MEDIA		%%20    has [ 20 20 0 26 ].
MEDIA		%%21    has [ 21 21 0 18 ].
MEDIA		%%22    has [ 22 22 0 11 ].
MEDIA		%%23    has [ 23 23 0 18 ].
MEDIA		%%24    has [ 24 24 0 20 ].
MEDIA		%%25    has [ 25 25 0 13 ].
MEDIA		%%26    has [ 26 26 0 18 ].
MEDIA		%%27    has [ 27 27 0 31 ].
MEDIA		%%28    has [ 28 28 0 31 ].
MEDIA		%%29    has [ 29 29 0 6 ].
MEDIA		%%30    has [ 30 30 0 20 ].
MEDIA		%%31    has [ 31 31 0 16 ].
MEDIA		%%32    has [ 32 32 0 5 ].
MEDIA		%%33    has [ 33 33 0 12 ].
MEDIA		%%34    has [ 34 34 0 3 ].
MEDIA		%%35    has [ 35 35 0 3 ].
MEDIA		%%36    has [ 36 36 0 3 ].
MEDIA		%%37    has [ 37 37 0 3 ].
MEDIA		%%38    has [ 38 38 0 7 ].
MEDIA		%%39    has [ 39 39 0 7 ].
MEDIA		%%40    has [ 40 40 0 2 ].
MEDIA		%%41    has [ 41 41 0 0 ].
MEDIA		%%42    has [ 42 42 0 0 ].
MEDIA		%%43    has [ 43 43 0 0 ].
MEDIA		%%44    has [ 44 44 0 0 ].
MEDIA		%%45    has [ 45 45 0 0 ].
MEDIA		%%46    has [ 46 46 0 0 ].
MEDIA		%%47    has [ 47 47 0 0 ].
CODESIZE	44       Bytes in DrawInt         
LABEL		$$0              of Power           
LABEL		$$1              of Power           
CODESIZE	84       Bytes in Power           
CODESIZE	98       Bytes in DateToInt       
CODESIZE	84       Bytes in IntToDate       
CODESIZE	22       Bytes in GetDateToInt    
CODESIZE	100      Bytes in DrawBlueBox     
CODESIZE	100      Bytes in DrawPinkBox     
CODESIZE	60       Bytes in DrawNoticeBox   
CODESIZE	92       Bytes in DrawBack1       
CODESIZE	52       Bytes in DrawBack2       
CODESIZE	52       Bytes in DrawBack3       
LABEL		$$3              of DrawQuestion    
LABEL		$$4              of DrawQuestion    
CODESIZE	124      Bytes in DrawQuestion    
LABEL		$$5              of DrawHistory     
LABEL		$$6              of DrawHistory     
CODESIZE	124      Bytes in DrawHistory     
CODESIZE	16       Bytes in InitTimer       
CODESIZE	8        Bytes in PauseTimer      
CODESIZE	16       Bytes in PlayTimer       
LABEL		$$7              of AddHistory      
LABEL		$$8              of AddHistory      
CODESIZE	78       Bytes in AddHistory      
CODESIZE	26       Bytes in InitHistory     
CODESIZE	16       Bytes in error           
CODESIZE	40       Bytes in PointUp         
LABEL		$$9              of GetBonusPoint   
CODESIZE	98       Bytes in GetBonusPoint   
CODESIZE	20       Bytes in GetAidChance    
LABEL		$$10             of AddRank         
LABEL		$$13             of AddRank         
LABEL		$$11             of AddRank         
LABEL		$$15             of AddRank         
LABEL		$$16             of AddRank         
LABEL		$$14             of AddRank         
CODESIZE	360      Bytes in AddRank         
LABEL		$$18             of LoadROM         
LABEL		$$19             of LoadROM         
LABEL		$$20             of LoadROM         
CODESIZE	268      Bytes in LoadROM         
LABEL		$$22             of SaveRank        
LABEL		$$23             of SaveRank        
CODESIZE	162      Bytes in SaveRank        
CODESIZE	32       Bytes in SaveOption      
LABEL		$$26             of ChangeMode      
LABEL		$$27             of ChangeMode      
LABEL		$$28             of ChangeMode      
LABEL		$$29             of ChangeMode      
LABEL		$$30             of ChangeMode      
LABEL		$$25             of ChangeMode      
CODESIZE	192      Bytes in ChangeMode      
LABEL		$$32             of InitMode        
LABEL		$$33             of InitMode        
LABEL		$$34             of InitMode        
LABEL		$$35             of InitMode        
LABEL		$$36             of InitMode        
LABEL		$$31             of InitMode        
CODESIZE	210      Bytes in InitMode        
LABEL		$$38             of ChangePlayMode  
LABEL		$$39             of ChangePlayMode  
LABEL		$$40             of ChangePlayMode  
LABEL		$$41             of ChangePlayMode  
LABEL		$$42             of ChangePlayMode  
LABEL		$$43             of ChangePlayMode  
LABEL		$$44             of ChangePlayMode  
LABEL		$$37             of ChangePlayMode  
CODESIZE	298      Bytes in ChangePlayMode  
LABEL		$$46             of InitPlayMode    
LABEL		$$47             of InitPlayMode    
LABEL		$$48             of InitPlayMode    
LABEL		$$49             of InitPlayMode    
LABEL		$$50             of InitPlayMode    
LABEL		$$51             of InitPlayMode    
LABEL		$$52             of InitPlayMode    
LABEL		$$45             of InitPlayMode    
CODESIZE	264      Bytes in InitPlayMode    
LABEL		$$54             of ControlPlayReady
LABEL		$$53             of ControlPlayReady
CODESIZE	66       Bytes in ControlPlayReady
LABEL		$$56             of ControlPlayInput
LABEL		$$59             of ControlPlayInput
LABEL		$$60             of ControlPlayInput
LABEL		$$57             of ControlPlayInput
LABEL		$$62             of ControlPlayInput
LABEL		$$63             of ControlPlayInput
LABEL		$$64             of ControlPlayInput
LABEL		$$65             of ControlPlayInput
LABEL		$$61             of ControlPlayInput
LABEL		$$58             of ControlPlayInput
LABEL		$$55             of ControlPlayInput
CODESIZE	302      Bytes in ControlPlayInput
LABEL		$$67             of ControlPlayCompared
LABEL		$$68             of ControlPlayCompared
LABEL		$$70             of ControlPlayCompared
LABEL		$$71             of ControlPlayCompared
LABEL		$$69             of ControlPlayCompared
LABEL		$$66             of ControlPlayCompared
CODESIZE	134      Bytes in ControlPlayCompared
LABEL		$$73             of ControlPlayOver 
LABEL		$$72             of ControlPlayOver 
CODESIZE	52       Bytes in ControlPlayOver 
LABEL		$$75             of ControlPlayRecord
LABEL		$$74             of ControlPlayRecord
CODESIZE	52       Bytes in ControlPlayRecord
LABEL		$$77             of ControlPlayGiveup
LABEL		$$79             of ControlPlayGiveup
LABEL		$$80             of ControlPlayGiveup
LABEL		$$78             of ControlPlayGiveup
LABEL		$$82             of ControlPlayGiveup
LABEL		$$83             of ControlPlayGiveup
LABEL		$$81             of ControlPlayGiveup
LABEL		$$76             of ControlPlayGiveup
CODESIZE	228      Bytes in ControlPlayGiveup
LABEL		$$85             of ControlPlayNextquest
LABEL		$$87             of ControlPlayNextquest
LABEL		$$88             of ControlPlayNextquest
LABEL		$$86             of ControlPlayNextquest
LABEL		$$90             of ControlPlayNextquest
LABEL		$$91             of ControlPlayNextquest
LABEL		$$89             of ControlPlayNextquest
LABEL		$$84             of ControlPlayNextquest
CODESIZE	228      Bytes in ControlPlayNextquest
LABEL		$$92             of DrawPlayBase    
LABEL		$$93             of DrawPlayBase    
LABEL		$$94             of DrawPlayBase    
LABEL		$$97             of DrawPlayBase    
LABEL		$$96             of DrawPlayBase    
LABEL		$$95             of DrawPlayBase    
LABEL		$$98             of DrawPlayBase    
LABEL		$$101            of DrawPlayBase    
LABEL		$$100            of DrawPlayBase    
LABEL		$$99             of DrawPlayBase    
LABEL		$$103            of DrawPlayBase    
LABEL		$$104            of DrawPlayBase    
LABEL		$$105            of DrawPlayBase    
LABEL		$$102            of DrawPlayBase    
CODESIZE	816      Bytes in DrawPlayBase    
CODESIZE	78       Bytes in DrawPlayReady   
CODESIZE	10       Bytes in DrawPlayInput   
LABEL		$$106            of DrawPlayCompared
LABEL		$$108            of DrawPlayCompared
LABEL		$$109            of DrawPlayCompared
LABEL		$$107            of DrawPlayCompared
CODESIZE	124      Bytes in DrawPlayCompared
CODESIZE	34       Bytes in DrawPlayOver    
LABEL		$$110            of DrawPlayRecord  
LABEL		$$111            of DrawPlayRecord  
CODESIZE	150      Bytes in DrawPlayRecord  
CODESIZE	16       Bytes in DrawPlayGiveup  
CODESIZE	16       Bytes in DrawPlayNextquest
LABEL		$$113            of ControlIndex    
LABEL		$$112            of ControlIndex    
CODESIZE	52       Bytes in ControlIndex    
LABEL		$$115            of ControlMain     
LABEL		$$118            of ControlMain     
LABEL		$$119            of ControlMain     
LABEL		$$116            of ControlMain     
LABEL		$$120            of ControlMain     
LABEL		$$121            of ControlMain     
LABEL		$$117            of ControlMain     
LABEL		$$123            of ControlMain     
LABEL		$$124            of ControlMain     
LABEL		$$125            of ControlMain     
LABEL		$$122            of ControlMain     
LABEL		$$114            of ControlMain     
CODESIZE	326      Bytes in ControlMain     
LABEL		$$127            of ControlPlay     
LABEL		$$128            of ControlPlay     
LABEL		$$129            of ControlPlay     
LABEL		$$130            of ControlPlay     
LABEL		$$131            of ControlPlay     
LABEL		$$132            of ControlPlay     
LABEL		$$133            of ControlPlay     
LABEL		$$126            of ControlPlay     
CODESIZE	256      Bytes in ControlPlay     
LABEL		$$135            of ControlRank     
LABEL		$$134            of ControlRank     
CODESIZE	66       Bytes in ControlRank     
LABEL		$$137            of ControlOption   
LABEL		$$141            of ControlOption   
LABEL		$$142            of ControlOption   
LABEL		$$138            of ControlOption   
LABEL		$$143            of ControlOption   
LABEL		$$144            of ControlOption   
LABEL		$$139            of ControlOption   
LABEL		$$140            of ControlOption   
LABEL		$$136            of ControlOption   
CODESIZE	288      Bytes in ControlOption   
LABEL		$$146            of DrawGame        
LABEL		$$147            of DrawGame        
LABEL		$$148            of DrawGame        
LABEL		$$149            of DrawGame        
LABEL		$$150            of DrawGame        
LABEL		$$151            of DrawGame        
LABEL		$$145            of DrawGame        
CODESIZE	182      Bytes in DrawGame        
CODESIZE	34       Bytes in DrawIndex       
CODESIZE	150      Bytes in DrawMain        
LABEL		$$153            of DrawPlay        
LABEL		$$154            of DrawPlay        
LABEL		$$155            of DrawPlay        
LABEL		$$156            of DrawPlay        
LABEL		$$157            of DrawPlay        
LABEL		$$158            of DrawPlay        
LABEL		$$159            of DrawPlay        
LABEL		$$152            of DrawPlay        
CODESIZE	218      Bytes in DrawPlay        
LABEL		$$160            of DrawRank        
LABEL		$$163            of DrawRank        
LABEL		$$164            of DrawRank        
LABEL		$$161            of DrawRank        
CODESIZE	322      Bytes in DrawRank        
LABEL		$$167            of DrawOption      
LABEL		$$168            of DrawOption      
LABEL		$$166            of DrawOption      
LABEL		$$165            of DrawOption      
CODESIZE	218      Bytes in DrawOption      
CODESIZE	80       Bytes in TEST            
CODESIZE	22       Bytes in EVENT_START     
LABEL		$$170            of EVENT_TIMEOUT   
LABEL		$$171            of EVENT_TIMEOUT   
LABEL		$$169            of EVENT_TIMEOUT   
CODESIZE	88       Bytes in EVENT_TIMEOUT   
LABEL		$$173            of EVENT_KEYPRESS  
LABEL		$$174            of EVENT_KEYPRESS  
LABEL		$$175            of EVENT_KEYPRESS  
LABEL		$$176            of EVENT_KEYPRESS  
LABEL		$$177            of EVENT_KEYPRESS  
LABEL		$$172            of EVENT_KEYPRESS  
CODESIZE	202      Bytes in EVENT_KEYPRESS  
LABEL		$$179            of EVENT_RESULT    
LABEL		$$181            of EVENT_RESULT    
LABEL		$$183            of EVENT_RESULT    
LABEL		$$184            of EVENT_RESULT    
LABEL		$$186            of EVENT_RESULT    
LABEL		$$188            of EVENT_RESULT    
LABEL		$$189            of EVENT_RESULT    
LABEL		$$187            of EVENT_RESULT    
LABEL		$$185            of EVENT_RESULT    
LABEL		$$182            of EVENT_RESULT    
LABEL		$$180            of EVENT_RESULT    
LABEL		$$178            of EVENT_RESULT    
CODESIZE	248      Bytes in EVENT_RESULT    
000th Func is 'AddHistory'
001th Func is 'AddRank'
002th Func is 'ChangeMode'
003th Func is 'ChangePlayMode'
004th Func is 'ControlIndex'
005th Func is 'ControlMain'
006th Func is 'ControlOption'
007th Func is 'ControlPlay'
008th Func is 'ControlPlayCompared'
009th Func is 'ControlPlayGiveup'
010th Func is 'ControlPlayInput'
011th Func is 'ControlPlayNextquest'
012th Func is 'ControlPlayOver'
013th Func is 'ControlPlayReady'
014th Func is 'ControlPlayRecord'
015th Func is 'ControlRank'
016th Func is 'DateToInt'
017th Func is 'DrawBack1'
018th Func is 'DrawBack2'
019th Func is 'DrawBack3'
020th Func is 'DrawBlueBox'
021th Func is 'DrawGame'
022th Func is 'DrawHistory'
023th Func is 'DrawIndex'
024th Func is 'DrawInt'
025th Func is 'DrawMain'
026th Func is 'DrawNoticeBox'
027th Func is 'DrawOption'
028th Func is 'DrawPinkBox'
029th Func is 'DrawPlay'
030th Func is 'DrawPlayBase'
031th Func is 'DrawPlayCompared'
032th Func is 'DrawPlayGiveup'
033th Func is 'DrawPlayInput'
034th Func is 'DrawPlayNextquest'
035th Func is 'DrawPlayOver'
036th Func is 'DrawPlayReady'
037th Func is 'DrawPlayRecord'
038th Func is 'DrawQuestion'
039th Func is 'DrawRank'
040th Func is 'EVENT_KEYPRESS'
041th Func is 'EVENT_RESULT'
042th Func is 'EVENT_START'
043th Func is 'EVENT_TIMEOUT'
044th Func is 'GetAidChance'
045th Func is 'GetBonusPoint'
046th Func is 'GetDateToInt'
047th Func is 'InitHistory'
048th Func is 'InitMode'
049th Func is 'InitPlayMode'
050th Func is 'InitTimer'
051th Func is 'IntToDate'
052th Func is 'LoadROM'
053th Func is 'PauseTimer'
054th Func is 'PlayTimer'
055th Func is 'PointUp'
056th Func is 'Power'
057th Func is 'SaveOption'
058th Func is 'SaveRank'
059th Func is 'TEST'
060th Func is 'error'
-------------------------------------------------
Optimize Function 'DrawInt()'
		Code Length : 44 Byte(s).
		Final Optimized Code Length : 44 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'Power()'
		Code Length : 84 Byte(s).
		Final Optimized Code Length : 84 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'DateToInt()'
		Code Length : 98 Byte(s).
		Final Optimized Code Length : 98 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'IntToDate()'
		Code Length : 84 Byte(s).
		Final Optimized Code Length : 84 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'GetDateToInt()'
		Code Length : 22 Byte(s).
		Final Optimized Code Length : 22 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'DrawBlueBox()'
		Code Length : 100 Byte(s).
		Final Optimized Code Length : 100 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'DrawPinkBox()'
		Code Length : 100 Byte(s).
		Final Optimized Code Length : 100 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'DrawNoticeBox()'
		Code Length : 60 Byte(s).
		Final Optimized Code Length : 60 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'DrawBack1()'
		Code Length : 92 Byte(s).
		Final Optimized Code Length : 92 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'DrawBack2()'
		Code Length : 52 Byte(s).
		Final Optimized Code Length : 52 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'DrawBack3()'
		Code Length : 52 Byte(s).
		Final Optimized Code Length : 52 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'DrawQuestion()'
		Code Length : 124 Byte(s).
		Final Optimized Code Length : 124 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'DrawHistory()'
		Code Length : 124 Byte(s).
		Final Optimized Code Length : 124 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'InitTimer()'
		Code Length : 16 Byte(s).
		Final Optimized Code Length : 16 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'PauseTimer()'
		Code Length : 8 Byte(s).
		Final Optimized Code Length : 8 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'PlayTimer()'
		Code Length : 16 Byte(s).
		Final Optimized Code Length : 16 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'AddHistory()'
		Code Length : 78 Byte(s).
		Final Optimized Code Length : 78 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'InitHistory()'
		Code Length : 26 Byte(s).
		Final Optimized Code Length : 26 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'error()'
		Code Length : 16 Byte(s).
		Final Optimized Code Length : 16 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'PointUp()'
		Code Length : 40 Byte(s).
		Final Optimized Code Length : 40 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'GetBonusPoint()'
		Code Length : 98 Byte(s).
		Final Optimized Code Length : 98 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'GetAidChance()'
		Code Length : 20 Byte(s).
		Final Optimized Code Length : 20 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'AddRank()'
		Code Length : 360 Byte(s).
		Final Optimized Code Length : 360 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'LoadROM()'
		Code Length : 268 Byte(s).
		Final Optimized Code Length : 268 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'SaveRank()'
		Code Length : 162 Byte(s).
		Final Optimized Code Length : 162 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'SaveOption()'
		Code Length : 32 Byte(s).
		Final Optimized Code Length : 32 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'ChangeMode()'
		Code Length : 192 Byte(s).
		Final Optimized Code Length : 192 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'InitMode()'
		Code Length : 210 Byte(s).
		Final Optimized Code Length : 210 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'ChangePlayMode()'
		Code Length : 298 Byte(s).
		Final Optimized Code Length : 298 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'InitPlayMode()'
		Code Length : 264 Byte(s).
		Final Optimized Code Length : 264 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'ControlPlayReady()'
		Code Length : 66 Byte(s).
		Final Optimized Code Length : 66 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'ControlPlayInput()'
		Code Length : 302 Byte(s).
		Final Optimized Code Length : 302 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'ControlPlayCompared()'
		Code Length : 134 Byte(s).
		Final Optimized Code Length : 134 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'ControlPlayOver()'
		Code Length : 52 Byte(s).
		Final Optimized Code Length : 52 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'ControlPlayRecord()'
		Code Length : 52 Byte(s).
		Final Optimized Code Length : 52 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'ControlPlayGiveup()'
		Code Length : 228 Byte(s).
		Final Optimized Code Length : 228 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'ControlPlayNextquest()'
		Code Length : 228 Byte(s).
		Final Optimized Code Length : 228 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'DrawPlayBase()'
		Code Length : 816 Byte(s).
		Final Optimized Code Length : 816 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'DrawPlayReady()'
		Code Length : 78 Byte(s).
		Final Optimized Code Length : 78 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'DrawPlayInput()'
		Code Length : 10 Byte(s).
		Final Optimized Code Length : 10 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'DrawPlayCompared()'
		Code Length : 124 Byte(s).
		Final Optimized Code Length : 124 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'DrawPlayOver()'
		Code Length : 34 Byte(s).
		Final Optimized Code Length : 34 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'DrawPlayRecord()'
		Code Length : 150 Byte(s).
		Final Optimized Code Length : 150 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'DrawPlayGiveup()'
		Code Length : 16 Byte(s).
		Final Optimized Code Length : 16 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'DrawPlayNextquest()'
		Code Length : 16 Byte(s).
		Final Optimized Code Length : 16 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'ControlIndex()'
		Code Length : 52 Byte(s).
		Final Optimized Code Length : 52 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'ControlMain()'
		Code Length : 326 Byte(s).
		Final Optimized Code Length : 326 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'ControlPlay()'
		Code Length : 256 Byte(s).
		Final Optimized Code Length : 256 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'ControlRank()'
		Code Length : 66 Byte(s).
		Final Optimized Code Length : 66 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'ControlOption()'
		Code Length : 288 Byte(s).
		Final Optimized Code Length : 288 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'DrawGame()'
		Code Length : 182 Byte(s).
		Final Optimized Code Length : 182 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'DrawIndex()'
		Code Length : 34 Byte(s).
		Final Optimized Code Length : 34 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'DrawMain()'
		Code Length : 150 Byte(s).
		Final Optimized Code Length : 150 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'DrawPlay()'
		Code Length : 218 Byte(s).
		Final Optimized Code Length : 218 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'DrawRank()'
		Code Length : 322 Byte(s).
		Final Optimized Code Length : 322 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'DrawOption()'
		Code Length : 218 Byte(s).
		Final Optimized Code Length : 218 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'TEST()'
		Code Length : 80 Byte(s).
		Final Optimized Code Length : 80 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'EVENT_START()'
		Code Length : 22 Byte(s).
		Final Optimized Code Length : 22 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'EVENT_TIMEOUT()'
		Code Length : 88 Byte(s).
		Final Optimized Code Length : 88 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'EVENT_KEYPRESS()'
		Code Length : 202 Byte(s).
		Final Optimized Code Length : 202 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'EVENT_RESULT()'
		Code Length : 248 Byte(s).
		Final Optimized Code Length : 248 Byte(s).
-------------------------------------------------
FUNC COUNT: 61
Set FUNC ADDRESS : AddHistory [0x00000080]
Set FUNC ADDRESS : AddRank [0x000000CE]
Set FUNC ADDRESS : ChangeMode [0x00000236]
Set FUNC ADDRESS : ChangePlayMode [0x000002F6]
Set FUNC ADDRESS : ControlIndex [0x00000420]
Set FUNC ADDRESS : ControlMain [0x00000454]
Set FUNC ADDRESS : ControlOption [0x0000059A]
Set FUNC ADDRESS : ControlPlay [0x000006BA]
Set FUNC ADDRESS : ControlPlayCompared [0x000007BA]
Set FUNC ADDRESS : ControlPlayGiveup [0x00000840]
Set FUNC ADDRESS : ControlPlayInput [0x00000924]
Set FUNC ADDRESS : ControlPlayNextquest [0x00000A52]
Set FUNC ADDRESS : ControlPlayOver [0x00000B36]
Set FUNC ADDRESS : ControlPlayReady [0x00000B6A]
Set FUNC ADDRESS : ControlPlayRecord [0x00000BAC]
Set FUNC ADDRESS : ControlRank [0x00000BE0]
Set FUNC ADDRESS : DateToInt [0x00000C22]
Set FUNC ADDRESS : DrawBack1 [0x00000C84]
Set FUNC ADDRESS : DrawBack2 [0x00000CE0]
Set FUNC ADDRESS : DrawBack3 [0x00000D14]
Set FUNC ADDRESS : DrawBlueBox [0x00000D48]
Set FUNC ADDRESS : DrawGame [0x00000DAC]
Set FUNC ADDRESS : DrawHistory [0x00000E62]
Set FUNC ADDRESS : DrawIndex [0x00000EDE]
Set FUNC ADDRESS : DrawInt [0x00000F00]
Set FUNC ADDRESS : DrawMain [0x00000F2C]
Set FUNC ADDRESS : DrawNoticeBox [0x00000FC2]
Set FUNC ADDRESS : DrawOption [0x00000FFE]
Set FUNC ADDRESS : DrawPinkBox [0x000010D8]
Set FUNC ADDRESS : DrawPlay [0x0000113C]
Set FUNC ADDRESS : DrawPlayBase [0x00001216]
Set FUNC ADDRESS : DrawPlayCompared [0x00001546]
Set FUNC ADDRESS : DrawPlayGiveup [0x000015C2]
Set FUNC ADDRESS : DrawPlayInput [0x000015D2]
Set FUNC ADDRESS : DrawPlayNextquest [0x000015DC]
Set FUNC ADDRESS : DrawPlayOver [0x000015EC]
Set FUNC ADDRESS : DrawPlayReady [0x0000160E]
Set FUNC ADDRESS : DrawPlayRecord [0x0000165C]
Set FUNC ADDRESS : DrawQuestion [0x000016F2]
Set FUNC ADDRESS : DrawRank [0x0000176E]
Set FUNC ADDRESS : EVENT_KEYPRESS [0x000018B0]
Set FUNC ADDRESS : EVENT_RESULT [0x0000197A]
Set FUNC ADDRESS : EVENT_START [0x00001A72]
Set FUNC ADDRESS : EVENT_TIMEOUT [0x00001A88]
Set FUNC ADDRESS : GetAidChance [0x00001AE0]
Set FUNC ADDRESS : GetBonusPoint [0x00001AF4]
Set FUNC ADDRESS : GetDateToInt [0x00001B56]
Set FUNC ADDRESS : InitHistory [0x00001B6C]
Set FUNC ADDRESS : InitMode [0x00001B86]
Set FUNC ADDRESS : InitPlayMode [0x00001C58]
Set FUNC ADDRESS : InitTimer [0x00001D60]
Set FUNC ADDRESS : IntToDate [0x00001D70]
Set FUNC ADDRESS : LoadROM [0x00001DC4]
Set FUNC ADDRESS : PauseTimer [0x00001ED0]
Set FUNC ADDRESS : PlayTimer [0x00001ED8]
Set FUNC ADDRESS : PointUp [0x00001EE8]
Set FUNC ADDRESS : Power [0x00001F10]
Set FUNC ADDRESS : SaveOption [0x00001F64]
Set FUNC ADDRESS : SaveRank [0x00001F84]
Set FUNC ADDRESS : TEST [0x00002026]
Set FUNC ADDRESS : error [0x00002076]

FUNCTION : AddHistory()
{
	0x00000080 : nop	// .\States.h, AddHistory, 44 - SAL : 743
	0x00000082 : popz		69 ( value of Function AddHistory )	// .\States.h, AddHistory, 44 - SAL : 744
	0x00000086 : pushz		29 ( lastHistoryIndex )	// .\States.h, AddHistory, 46 - SAL : 746
	0x0000008A : pushc		5	// .\States.h, AddHistory, 46 - SAL : 747
	0x0000008E : pushc		1	// .\States.h, AddHistory, 46 - SAL : 748
	0x00000092 : sub	// .\States.h, AddHistory, 46 - SAL : 749
	0x00000094 : lt	// .\States.h, AddHistory, 46 - SAL : 750
	0x00000096 : fjp		0x000000B0	// .\States.h, AddHistory, 46 - SAL : 751
	0x0000009C : pushz		29 ( lastHistoryIndex )	// .\States.h, AddHistory, 47 - SAL : 753
	0x000000A0 : pushc		1	// .\States.h, AddHistory, 47 - SAL : 754
	0x000000A4 : add	// .\States.h, AddHistory, 47 - SAL : 755
	0x000000A6 : popz		29 ( lastHistoryIndex )	// .\States.h, AddHistory, 47 - SAL : 756
	0x000000AA : ujp		0x000000BA	// .\States.h, AddHistory, 47 - SAL : 757
	0x000000B0 : nop	// .\States.h, AddHistory, 47 - SAL : 758
	0x000000B2 : pushc		0	// .\States.h, AddHistory, 49 - SAL : 761
	0x000000B6 : popz		29 ( lastHistoryIndex )	// .\States.h, AddHistory, 49 - SAL : 762
	0x000000BA : nop	// .\States.h, AddHistory, 50 - SAL : 764
	0x000000BC : pushz		29 ( lastHistoryIndex )	// .\States.h, AddHistory, 53 - SAL : 766
	0x000000C0 : ldrz		28 ( historyNumber )	// .\States.h, AddHistory, 53 - SAL : 767
	0x000000C4 : add	// .\States.h, AddHistory, 53 - SAL : 768
	0x000000C6 : pushz		69 ( value of Function AddHistory )	// .\States.h, AddHistory, 53 - SAL : 769
	0x000000CA : sta	// .\States.h, AddHistory, 53 - SAL : 770
	0x000000CC : ret	// .\States.h, AddHistory, 54 - SAL : 772
}


FUNCTION : AddRank()
{
	0x000000CE : nop	// .\States.h, AddRank, 109 - SAL : 861
	0x000000D0 : popz		72 ( point of Function AddRank )	// .\States.h, AddRank, 109 - SAL : 862
	0x000000D4 : pushc		5	// .\States.h, AddRank, 110 - SAL : 864
	0x000000D8 : popz		73 ( rankNumber of Function AddRank )	// .\States.h, AddRank, 110 - SAL : 865
	0x000000DC : pushc		0	// .\States.h, AddRank, 114 - SAL : 868
	0x000000E0 : popz		74 ( i of Function AddRank )	// .\States.h, AddRank, 114 - SAL : 869
	0x000000E4 : nop	// .\States.h, AddRank, 114 - SAL : 870
	0x000000E6 : pushz		74 ( i of Function AddRank )	// .\States.h, AddRank, 114 - SAL : 871
	0x000000EA : pushc		5	// .\States.h, AddRank, 114 - SAL : 872
	0x000000EE : lt	// .\States.h, AddRank, 114 - SAL : 873
	0x000000F0 : fjp		0x0000013C	// .\States.h, AddRank, 114 - SAL : 874
	0x000000F6 : pushz		74 ( i of Function AddRank )	// .\States.h, AddRank, 115 - SAL : 876
	0x000000FA : pushc		2	// .\States.h, AddRank, 115 - SAL : 877
	0x000000FE : mult	// .\States.h, AddRank, 115 - SAL : 878
	0x00000100 : ldrz		40 ( rank )	// .\States.h, AddRank, 115 - SAL : 879
	0x00000104 : add	// .\States.h, AddRank, 115 - SAL : 880
	0x00000106 : pushc		0	// .\States.h, AddRank, 115 - SAL : 881
	0x0000010A : add	// .\States.h, AddRank, 115 - SAL : 882
	0x0000010C : ixa	// .\States.h, AddRank, 115 - SAL : 883
	0x0000010E : pushz		72 ( point of Function AddRank )	// .\States.h, AddRank, 115 - SAL : 884
	0x00000112 : lt	// .\States.h, AddRank, 115 - SAL : 885
	0x00000114 : fjp		0x00000128	// .\States.h, AddRank, 115 - SAL : 886
	0x0000011A : pushz		74 ( i of Function AddRank )	// .\States.h, AddRank, 116 - SAL : 888
	0x0000011E : popz		73 ( rankNumber of Function AddRank )	// .\States.h, AddRank, 116 - SAL : 889
	0x00000122 : ujp		0x0000013C	// .\States.h, AddRank, 116 - SAL : 890
	0x00000128 : nop	// .\States.h, AddRank, 118 - SAL : 893
	0x0000012A : nop	// .\States.h, AddRank, 118 - SAL : 894
	0x0000012C : pushz		74 ( i of Function AddRank )	// .\States.h, AddRank, 118 - SAL : 895
	0x00000130 : inc	// .\States.h, AddRank, 118 - SAL : 896
	0x00000132 : popz		74 ( i of Function AddRank )	// .\States.h, AddRank, 118 - SAL : 897
	0x00000136 : ujp		0x000000E4	// .\States.h, AddRank, 118 - SAL : 898
	0x0000013C : nop	// .\States.h, AddRank, 119 - SAL : 900
	0x0000013E : pushz		73 ( rankNumber of Function AddRank )	// .\States.h, AddRank, 122 - SAL : 902
	0x00000142 : pushc		5	// .\States.h, AddRank, 122 - SAL : 903
	0x00000146 : lt	// .\States.h, AddRank, 122 - SAL : 904
	0x00000148 : fjp		0x0000022E	// .\States.h, AddRank, 122 - SAL : 905
	0x0000014E : pushc		5	// .\States.h, AddRank, 124 - SAL : 907
	0x00000152 : pushc		1	// .\States.h, AddRank, 124 - SAL : 908
	0x00000156 : sub	// .\States.h, AddRank, 124 - SAL : 909
	0x00000158 : popz		74 ( i of Function AddRank )	// .\States.h, AddRank, 124 - SAL : 910
	0x0000015C : nop	// .\States.h, AddRank, 124 - SAL : 911
	0x0000015E : pushz		74 ( i of Function AddRank )	// .\States.h, AddRank, 124 - SAL : 912
	0x00000162 : pushz		73 ( rankNumber of Function AddRank )	// .\States.h, AddRank, 124 - SAL : 913
	0x00000166 : gt	// .\States.h, AddRank, 124 - SAL : 914
	0x00000168 : fjp		0x000001EC	// .\States.h, AddRank, 124 - SAL : 915
	0x0000016E : pushz		74 ( i of Function AddRank )	// .\States.h, AddRank, 125 - SAL : 917
	0x00000172 : pushc		2	// .\States.h, AddRank, 125 - SAL : 918
	0x00000176 : mult	// .\States.h, AddRank, 125 - SAL : 919
	0x00000178 : ldrz		40 ( rank )	// .\States.h, AddRank, 125 - SAL : 920
	0x0000017C : add	// .\States.h, AddRank, 125 - SAL : 921
	0x0000017E : pushc		0	// .\States.h, AddRank, 125 - SAL : 922
	0x00000182 : add	// .\States.h, AddRank, 125 - SAL : 923
	0x00000184 : pushz		74 ( i of Function AddRank )	// .\States.h, AddRank, 125 - SAL : 924
	0x00000188 : pushc		1	// .\States.h, AddRank, 125 - SAL : 925
	0x0000018C : sub	// .\States.h, AddRank, 125 - SAL : 926
	0x0000018E : pushc		2	// .\States.h, AddRank, 125 - SAL : 927
	0x00000192 : mult	// .\States.h, AddRank, 125 - SAL : 928
	0x00000194 : ldrz		40 ( rank )	// .\States.h, AddRank, 125 - SAL : 929
	0x00000198 : add	// .\States.h, AddRank, 125 - SAL : 930
	0x0000019A : pushc		0	// .\States.h, AddRank, 125 - SAL : 931
	0x0000019E : add	// .\States.h, AddRank, 125 - SAL : 932
	0x000001A0 : ixa	// .\States.h, AddRank, 125 - SAL : 933
	0x000001A2 : sta	// .\States.h, AddRank, 125 - SAL : 934
	0x000001A4 : pushz		74 ( i of Function AddRank )	// .\States.h, AddRank, 126 - SAL : 936
	0x000001A8 : pushc		2	// .\States.h, AddRank, 126 - SAL : 937
	0x000001AC : mult	// .\States.h, AddRank, 126 - SAL : 938
	0x000001AE : ldrz		40 ( rank )	// .\States.h, AddRank, 126 - SAL : 939
	0x000001B2 : add	// .\States.h, AddRank, 126 - SAL : 940
	0x000001B4 : pushc		1	// .\States.h, AddRank, 126 - SAL : 941
	0x000001B8 : add	// .\States.h, AddRank, 126 - SAL : 942
	0x000001BA : pushz		74 ( i of Function AddRank )	// .\States.h, AddRank, 126 - SAL : 943
	0x000001BE : pushc		1	// .\States.h, AddRank, 126 - SAL : 944
	0x000001C2 : sub	// .\States.h, AddRank, 126 - SAL : 945
	0x000001C4 : pushc		2	// .\States.h, AddRank, 126 - SAL : 946
	0x000001C8 : mult	// .\States.h, AddRank, 126 - SAL : 947
	0x000001CA : ldrz		40 ( rank )	// .\States.h, AddRank, 126 - SAL : 948
	0x000001CE : add	// .\States.h, AddRank, 126 - SAL : 949
	0x000001D0 : pushc		1	// .\States.h, AddRank, 126 - SAL : 950
	0x000001D4 : add	// .\States.h, AddRank, 126 - SAL : 951
	0x000001D6 : ixa	// .\States.h, AddRank, 126 - SAL : 952
	0x000001D8 : sta	// .\States.h, AddRank, 126 - SAL : 953
	0x000001DA : nop	// .\States.h, AddRank, 126 - SAL : 954
	0x000001DC : pushz		74 ( i of Function AddRank )	// .\States.h, AddRank, 126 - SAL : 955
	0x000001E0 : dec	// .\States.h, AddRank, 126 - SAL : 956
	0x000001E2 : popz		74 ( i of Function AddRank )	// .\States.h, AddRank, 126 - SAL : 957
	0x000001E6 : ujp		0x0000015C	// .\States.h, AddRank, 126 - SAL : 958
	0x000001EC : nop	// .\States.h, AddRank, 127 - SAL : 960
	0x000001EE : pushz		73 ( rankNumber of Function AddRank )	// .\States.h, AddRank, 130 - SAL : 962
	0x000001F2 : pushc		2	// .\States.h, AddRank, 130 - SAL : 963
	0x000001F6 : mult	// .\States.h, AddRank, 130 - SAL : 964
	0x000001F8 : ldrz		40 ( rank )	// .\States.h, AddRank, 130 - SAL : 965
	0x000001FC : add	// .\States.h, AddRank, 130 - SAL : 966
	0x000001FE : pushc		0	// .\States.h, AddRank, 130 - SAL : 967
	0x00000202 : add	// .\States.h, AddRank, 130 - SAL : 968
	0x00000204 : pushz		72 ( point of Function AddRank )	// .\States.h, AddRank, 130 - SAL : 969
	0x00000208 : sta	// .\States.h, AddRank, 130 - SAL : 970
	0x0000020A : pushz		73 ( rankNumber of Function AddRank )	// .\States.h, AddRank, 131 - SAL : 972
	0x0000020E : pushc		2	// .\States.h, AddRank, 131 - SAL : 973
	0x00000212 : mult	// .\States.h, AddRank, 131 - SAL : 974
	0x00000214 : ldrz		40 ( rank )	// .\States.h, AddRank, 131 - SAL : 975
	0x00000218 : add	// .\States.h, AddRank, 131 - SAL : 976
	0x0000021A : pushc		1	// .\States.h, AddRank, 131 - SAL : 977
	0x0000021E : add	// .\States.h, AddRank, 131 - SAL : 978
	0x00000220 : call		0x00001B56	// .\States.h, AddRank, 131 - SAL : 979
	0x00000226 : sta	// .\States.h, AddRank, 131 - SAL : 980
	0x00000228 : call		0x00001F84	// .\States.h, AddRank, 134 - SAL : 982
	0x0000022E : nop	// .\States.h, AddRank, 135 - SAL : 984
	0x00000230 : pushz		73 ( rankNumber of Function AddRank )	// .\States.h, AddRank, 137 - SAL : 986
	0x00000234 : ret	// .\States.h, AddRank, 137 - SAL : 987
}


FUNCTION : ChangeMode()
{
	0x00000236 : nop	// .\ModeManager.h, ChangeMode, 3 - SAL : 1161
	0x00000238 : popz		79 ( mode of Function ChangeMode )	// .\ModeManager.h, ChangeMode, 3 - SAL : 1162
	0x0000023C : pushz		22 ( currentMode )	// .\ModeManager.h, ChangeMode, 4 - SAL : 1165
	0x00000240 : popz		80 ( prevMode of Function ChangeMode )	// .\ModeManager.h, ChangeMode, 4 - SAL : 1166
	0x00000244 : pushz		79 ( mode of Function ChangeMode )	// .\ModeManager.h, ChangeMode, 5 - SAL : 1168
	0x00000248 : popz		22 ( currentMode )	// .\ModeManager.h, ChangeMode, 5 - SAL : 1169
	0x0000024C : ssp	// .\ModeManager.h, ChangeMode, 8 - SAL : 1171
	0x0000024E : pushz		80 ( prevMode of Function ChangeMode )	// .\ModeManager.h, ChangeMode, 8 - SAL : 1172
	0x00000252 : dup	// .\ModeManager.h, ChangeMode, 8 - SAL : 1173
	0x00000254 : pushc		1	// .\ModeManager.h, ChangeMode, 8 - SAL : 1174
	0x00000258 : eq	// .\ModeManager.h, ChangeMode, 8 - SAL : 1175
	0x0000025A : tjp		0x000002A0	// .\ModeManager.h, ChangeMode, 8 - SAL : 1176
	0x00000260 : dup	// .\ModeManager.h, ChangeMode, 8 - SAL : 1177
	0x00000262 : pushc		2	// .\ModeManager.h, ChangeMode, 8 - SAL : 1178
	0x00000266 : eq	// .\ModeManager.h, ChangeMode, 8 - SAL : 1179
	0x00000268 : tjp		0x000002AA	// .\ModeManager.h, ChangeMode, 8 - SAL : 1180
	0x0000026E : dup	// .\ModeManager.h, ChangeMode, 8 - SAL : 1181
	0x00000270 : pushc		30	// .\ModeManager.h, ChangeMode, 8 - SAL : 1182
	0x00000274 : eq	// .\ModeManager.h, ChangeMode, 8 - SAL : 1183
	0x00000276 : tjp		0x000002B4	// .\ModeManager.h, ChangeMode, 8 - SAL : 1184
	0x0000027C : dup	// .\ModeManager.h, ChangeMode, 8 - SAL : 1185
	0x0000027E : pushc		31	// .\ModeManager.h, ChangeMode, 8 - SAL : 1186
	0x00000282 : eq	// .\ModeManager.h, ChangeMode, 8 - SAL : 1187
	0x00000284 : tjp		0x000002BE	// .\ModeManager.h, ChangeMode, 8 - SAL : 1188
	0x0000028A : dup	// .\ModeManager.h, ChangeMode, 8 - SAL : 1189
	0x0000028C : pushc		32	// .\ModeManager.h, ChangeMode, 8 - SAL : 1190
	0x00000290 : eq	// .\ModeManager.h, ChangeMode, 8 - SAL : 1191
	0x00000292 : tjp		0x000002C8	// .\ModeManager.h, ChangeMode, 8 - SAL : 1192
	0x00000298 : rsp	// .\ModeManager.h, ChangeMode, 8 - SAL : 1193
	0x0000029A : ujp		0x000002EC	// .\ModeManager.h, ChangeMode, 8 - SAL : 1194
	0x000002A0 : nop	// .\ModeManager.h, ChangeMode, 8 - SAL : 1195
	0x000002A2 : rsp	// .\ModeManager.h, ChangeMode, 8 - SAL : 1196
	0x000002A4 : ujp		0x000002EC	// .\ModeManager.h, ChangeMode, 8 - SAL : 1197
	0x000002AA : nop	// .\ModeManager.h, ChangeMode, 8 - SAL : 1198
	0x000002AC : rsp	// .\ModeManager.h, ChangeMode, 8 - SAL : 1199
	0x000002AE : ujp		0x000002EC	// .\ModeManager.h, ChangeMode, 8 - SAL : 1200
	0x000002B4 : nop	// .\ModeManager.h, ChangeMode, 8 - SAL : 1201
	0x000002B6 : rsp	// .\ModeManager.h, ChangeMode, 8 - SAL : 1202
	0x000002B8 : ujp		0x000002EC	// .\ModeManager.h, ChangeMode, 8 - SAL : 1203
	0x000002BE : nop	// .\ModeManager.h, ChangeMode, 8 - SAL : 1204
	0x000002C0 : rsp	// .\ModeManager.h, ChangeMode, 8 - SAL : 1205
	0x000002C2 : ujp		0x000002EC	// .\ModeManager.h, ChangeMode, 8 - SAL : 1206
	0x000002C8 : nop	// .\ModeManager.h, ChangeMode, 8 - SAL : 1207
	0x000002CA : rsp	// .\ModeManager.h, ChangeMode, 8 - SAL : 1208
	0x000002CC : pushc		1	// .\ModeManager.h, ChangeMode, 18 - SAL : 1219
	0x000002D0 : ldrz		13 ( swRsRcvBuf )	// .\ModeManager.h, ChangeMode, 18 - SAL : 1220
	0x000002D4 : add	// .\ModeManager.h, ChangeMode, 18 - SAL : 1221
	0x000002D6 : pushz		37 ( numberSize )	// .\ModeManager.h, ChangeMode, 18 - SAL : 1222
	0x000002DA : sta	// .\ModeManager.h, ChangeMode, 18 - SAL : 1223
	0x000002DC : pushc		1	// .\ModeManager.h, ChangeMode, 19 - SAL : 1225
	0x000002E0 : ldrz		41 ( NVROM )	// .\ModeManager.h, ChangeMode, 19 - SAL : 1226
	0x000002E4 : add	// .\ModeManager.h, ChangeMode, 19 - SAL : 1227
	0x000002E6 : pushz		37 ( numberSize )	// .\ModeManager.h, ChangeMode, 19 - SAL : 1228
	0x000002EA : sta	// .\ModeManager.h, ChangeMode, 19 - SAL : 1229
	0x000002EC : nop	// .\ModeManager.h, ChangeMode, 19 - SAL : 1230
	0x000002EE : call		0x00001B86	// .\ModeManager.h, ChangeMode, 22 - SAL : 1234
	0x000002F4 : ret	// .\ModeManager.h, ChangeMode, 23 - SAL : 1236
}


FUNCTION : ChangePlayMode()
{
	0x000002F6 : nop	// .\ControlPlay.h, ChangePlayMode, 3 - SAL : 1318
	0x000002F8 : popz		81 ( mode of Function ChangePlayMode )	// .\ControlPlay.h, ChangePlayMode, 3 - SAL : 1319
	0x000002FC : pushz		33 ( currentPlayMode )	// .\ControlPlay.h, ChangePlayMode, 4 - SAL : 1322
	0x00000300 : popz		34 ( prevPlayMode )	// .\ControlPlay.h, ChangePlayMode, 4 - SAL : 1323
	0x00000304 : pushz		81 ( mode of Function ChangePlayMode )	// .\ControlPlay.h, ChangePlayMode, 5 - SAL : 1325
	0x00000308 : popz		33 ( currentPlayMode )	// .\ControlPlay.h, ChangePlayMode, 5 - SAL : 1326
	0x0000030C : ssp	// .\ControlPlay.h, ChangePlayMode, 7 - SAL : 1328
	0x0000030E : pushz		34 ( prevPlayMode )	// .\ControlPlay.h, ChangePlayMode, 7 - SAL : 1329
	0x00000312 : dup	// .\ControlPlay.h, ChangePlayMode, 7 - SAL : 1330
	0x00000314 : pushc		0	// .\ControlPlay.h, ChangePlayMode, 7 - SAL : 1331
	0x00000318 : eq	// .\ControlPlay.h, ChangePlayMode, 7 - SAL : 1332
	0x0000031A : tjp		0x0000037C	// .\ControlPlay.h, ChangePlayMode, 7 - SAL : 1333
	0x00000320 : dup	// .\ControlPlay.h, ChangePlayMode, 7 - SAL : 1334
	0x00000322 : pushc		1	// .\ControlPlay.h, ChangePlayMode, 7 - SAL : 1335
	0x00000326 : eq	// .\ControlPlay.h, ChangePlayMode, 7 - SAL : 1336
	0x00000328 : tjp		0x000003A0	// .\ControlPlay.h, ChangePlayMode, 7 - SAL : 1337
	0x0000032E : dup	// .\ControlPlay.h, ChangePlayMode, 7 - SAL : 1338
	0x00000330 : pushc		2	// .\ControlPlay.h, ChangePlayMode, 7 - SAL : 1339
	0x00000334 : eq	// .\ControlPlay.h, ChangePlayMode, 7 - SAL : 1340
	0x00000336 : tjp		0x000003AA	// .\ControlPlay.h, ChangePlayMode, 7 - SAL : 1341
	0x0000033C : dup	// .\ControlPlay.h, ChangePlayMode, 7 - SAL : 1342
	0x0000033E : pushc		3	// .\ControlPlay.h, ChangePlayMode, 7 - SAL : 1343
	0x00000342 : eq	// .\ControlPlay.h, ChangePlayMode, 7 - SAL : 1344
	0x00000344 : tjp		0x000003B4	// .\ControlPlay.h, ChangePlayMode, 7 - SAL : 1345
	0x0000034A : dup	// .\ControlPlay.h, ChangePlayMode, 7 - SAL : 1346
	0x0000034C : pushc		4	// .\ControlPlay.h, ChangePlayMode, 7 - SAL : 1347
	0x00000350 : eq	// .\ControlPlay.h, ChangePlayMode, 7 - SAL : 1348
	0x00000352 : tjp		0x000003CC	// .\ControlPlay.h, ChangePlayMode, 7 - SAL : 1349
	0x00000358 : dup	// .\ControlPlay.h, ChangePlayMode, 7 - SAL : 1350
	0x0000035A : pushc		5	// .\ControlPlay.h, ChangePlayMode, 7 - SAL : 1351
	0x0000035E : eq	// .\ControlPlay.h, ChangePlayMode, 7 - SAL : 1352
	0x00000360 : tjp		0x000003D6	// .\ControlPlay.h, ChangePlayMode, 7 - SAL : 1353
	0x00000366 : dup	// .\ControlPlay.h, ChangePlayMode, 7 - SAL : 1354
	0x00000368 : pushc		6	// .\ControlPlay.h, ChangePlayMode, 7 - SAL : 1355
	0x0000036C : eq	// .\ControlPlay.h, ChangePlayMode, 7 - SAL : 1356
	0x0000036E : tjp		0x000003E0	// .\ControlPlay.h, ChangePlayMode, 7 - SAL : 1357
	0x00000374 : rsp	// .\ControlPlay.h, ChangePlayMode, 7 - SAL : 1358
	0x00000376 : ujp		0x00000416	// .\ControlPlay.h, ChangePlayMode, 7 - SAL : 1359
	0x0000037C : nop	// .\ControlPlay.h, ChangePlayMode, 7 - SAL : 1360
	0x0000037E : rsp	// .\ControlPlay.h, ChangePlayMode, 7 - SAL : 1361
	0x00000380 : pushc		0	// .\ControlPlay.h, ChangePlayMode, 10 - SAL : 1364
	0x00000384 : pushc		10	// .\ControlPlay.h, ChangePlayMode, 10 - SAL : 1365
	0x00000388 : pushz		37 ( numberSize )	// .\ControlPlay.h, ChangePlayMode, 10 - SAL : 1366
	0x0000038C : call		0x00001F10	// .\ControlPlay.h, ChangePlayMode, 10 - SAL : 1367
	0x00000392 : calls		Rand(201)	// .\ControlPlay.h, ChangePlayMode, 10 - SAL : 1368
	0x00000396 : popz		26 ( questNumber )	// .\ControlPlay.h, ChangePlayMode, 10 - SAL : 1369
	0x0000039A : ujp		0x00000416	// .\ControlPlay.h, ChangePlayMode, 10 - SAL : 1370
	0x000003A0 : nop	// .\ControlPlay.h, ChangePlayMode, 10 - SAL : 1371
	0x000003A2 : rsp	// .\ControlPlay.h, ChangePlayMode, 10 - SAL : 1372
	0x000003A4 : ujp		0x00000416	// .\ControlPlay.h, ChangePlayMode, 10 - SAL : 1373
	0x000003AA : nop	// .\ControlPlay.h, ChangePlayMode, 10 - SAL : 1374
	0x000003AC : rsp	// .\ControlPlay.h, ChangePlayMode, 10 - SAL : 1375
	0x000003AE : ujp		0x00000416	// .\ControlPlay.h, ChangePlayMode, 10 - SAL : 1376
	0x000003B4 : nop	// .\ControlPlay.h, ChangePlayMode, 10 - SAL : 1377
	0x000003B6 : rsp	// .\ControlPlay.h, ChangePlayMode, 10 - SAL : 1378
	0x000003B8 : pushz		25 ( gamePoint )	// .\ControlPlay.h, ChangePlayMode, 17 - SAL : 1386
	0x000003BC : call		0x000000CE	// .\ControlPlay.h, ChangePlayMode, 17 - SAL : 1387
	0x000003C2 : popz		30 ( gameRank )	// .\ControlPlay.h, ChangePlayMode, 17 - SAL : 1388
	0x000003C6 : ujp		0x00000416	// .\ControlPlay.h, ChangePlayMode, 17 - SAL : 1389
	0x000003CC : nop	// .\ControlPlay.h, ChangePlayMode, 17 - SAL : 1390
	0x000003CE : rsp	// .\ControlPlay.h, ChangePlayMode, 17 - SAL : 1391
	0x000003D0 : ujp		0x00000416	// .\ControlPlay.h, ChangePlayMode, 17 - SAL : 1392
	0x000003D6 : nop	// .\ControlPlay.h, ChangePlayMode, 17 - SAL : 1393
	0x000003D8 : rsp	// .\ControlPlay.h, ChangePlayMode, 17 - SAL : 1394
	0x000003DA : ujp		0x00000416	// .\ControlPlay.h, ChangePlayMode, 17 - SAL : 1395
	0x000003E0 : nop	// .\ControlPlay.h, ChangePlayMode, 17 - SAL : 1396
	0x000003E2 : rsp	// .\ControlPlay.h, ChangePlayMode, 17 - SAL : 1397
	0x000003E4 : pushz		32 ( playCount )	// .\ControlPlay.h, ChangePlayMode, 24 - SAL : 1405
	0x000003E8 : pushc		1	// .\ControlPlay.h, ChangePlayMode, 24 - SAL : 1406
	0x000003EC : add	// .\ControlPlay.h, ChangePlayMode, 24 - SAL : 1407
	0x000003EE : popz		32 ( playCount )	// .\ControlPlay.h, ChangePlayMode, 24 - SAL : 1408
	0x000003F2 : call		0x00001EE8	// .\ControlPlay.h, ChangePlayMode, 25 - SAL : 1410
	0x000003F8 : pushz		24 ( chance )	// .\ControlPlay.h, ChangePlayMode, 26 - SAL : 1412
	0x000003FC : call		0x00001AE0	// .\ControlPlay.h, ChangePlayMode, 26 - SAL : 1413
	0x00000402 : pushc		7	// .\ControlPlay.h, ChangePlayMode, 26 - SAL : 1414
	0x00000406 : add	// .\ControlPlay.h, ChangePlayMode, 26 - SAL : 1415
	0x00000408 : add	// .\ControlPlay.h, ChangePlayMode, 26 - SAL : 1416
	0x0000040A : popz		24 ( chance )	// .\ControlPlay.h, ChangePlayMode, 26 - SAL : 1417
	0x0000040E : pushc		0	// .\ControlPlay.h, ChangePlayMode, 27 - SAL : 1419
	0x00000412 : popz		27 ( answeredNumber )	// .\ControlPlay.h, ChangePlayMode, 27 - SAL : 1420
	0x00000416 : nop	// .\ControlPlay.h, ChangePlayMode, 27 - SAL : 1421
	0x00000418 : call		0x00001C58	// .\ControlPlay.h, ChangePlayMode, 30 - SAL : 1425
	0x0000041E : ret	// .\ControlPlay.h, ChangePlayMode, 32 - SAL : 1427
}


FUNCTION : ControlIndex()
{
	0x00000420 : nop	// .\ControlNumberGuess.h, ControlIndex, 3 - SAL : 2365
	0x00000422 : popz		93 ( key of Function ControlIndex )	// .\ControlNumberGuess.h, ControlIndex, 3 - SAL : 2366
	0x00000426 : ssp	// .\ControlNumberGuess.h, ControlIndex, 4 - SAL : 2369
	0x00000428 : pushz		93 ( key of Function ControlIndex )	// .\ControlNumberGuess.h, ControlIndex, 4 - SAL : 2370
	0x0000042C : dup	// .\ControlNumberGuess.h, ControlIndex, 4 - SAL : 2371
	0x0000042E : pushc		20	// .\ControlNumberGuess.h, ControlIndex, 4 - SAL : 2372
	0x00000432 : eq	// .\ControlNumberGuess.h, ControlIndex, 4 - SAL : 2373
	0x00000434 : tjp		0x00000442	// .\ControlNumberGuess.h, ControlIndex, 4 - SAL : 2374
	0x0000043A : rsp	// .\ControlNumberGuess.h, ControlIndex, 4 - SAL : 2375
	0x0000043C : ujp		0x00000450	// .\ControlNumberGuess.h, ControlIndex, 4 - SAL : 2376
	0x00000442 : nop	// .\ControlNumberGuess.h, ControlIndex, 4 - SAL : 2377
	0x00000444 : rsp	// .\ControlNumberGuess.h, ControlIndex, 4 - SAL : 2378
	0x00000446 : pushc		2	// .\ControlNumberGuess.h, ControlIndex, 6 - SAL : 2381
	0x0000044A : call		0x00000236	// .\ControlNumberGuess.h, ControlIndex, 6 - SAL : 2382
	0x00000450 : nop	// .\ControlNumberGuess.h, ControlIndex, 6 - SAL : 2383
	0x00000452 : ret	// .\ControlNumberGuess.h, ControlIndex, 8 - SAL : 2386
}


FUNCTION : ControlMain()
{
	0x00000454 : nop	// .\ControlNumberGuess.h, ControlMain, 10 - SAL : 2388
	0x00000456 : popz		94 ( key of Function ControlMain )	// .\ControlNumberGuess.h, ControlMain, 10 - SAL : 2389
	0x0000045A : ssp	// .\ControlNumberGuess.h, ControlMain, 11 - SAL : 2391
	0x0000045C : pushz		94 ( key of Function ControlMain )	// .\ControlNumberGuess.h, ControlMain, 11 - SAL : 2392
	0x00000460 : dup	// .\ControlNumberGuess.h, ControlMain, 11 - SAL : 2393
	0x00000462 : pushc		16	// .\ControlNumberGuess.h, ControlMain, 11 - SAL : 2394
	0x00000466 : eq	// .\ControlNumberGuess.h, ControlMain, 11 - SAL : 2395
	0x00000468 : tjp		0x000004AE	// .\ControlNumberGuess.h, ControlMain, 11 - SAL : 2396
	0x0000046E : dup	// .\ControlNumberGuess.h, ControlMain, 11 - SAL : 2397
	0x00000470 : pushc		18	// .\ControlNumberGuess.h, ControlMain, 11 - SAL : 2398
	0x00000474 : eq	// .\ControlNumberGuess.h, ControlMain, 11 - SAL : 2399
	0x00000476 : tjp		0x000004AE	// .\ControlNumberGuess.h, ControlMain, 11 - SAL : 2400
	0x0000047C : dup	// .\ControlNumberGuess.h, ControlMain, 11 - SAL : 2401
	0x0000047E : pushc		17	// .\ControlNumberGuess.h, ControlMain, 11 - SAL : 2402
	0x00000482 : eq	// .\ControlNumberGuess.h, ControlMain, 11 - SAL : 2403
	0x00000484 : tjp		0x000004E8	// .\ControlNumberGuess.h, ControlMain, 11 - SAL : 2404
	0x0000048A : dup	// .\ControlNumberGuess.h, ControlMain, 11 - SAL : 2405
	0x0000048C : pushc		19	// .\ControlNumberGuess.h, ControlMain, 11 - SAL : 2406
	0x00000490 : eq	// .\ControlNumberGuess.h, ControlMain, 11 - SAL : 2407
	0x00000492 : tjp		0x000004E8	// .\ControlNumberGuess.h, ControlMain, 11 - SAL : 2408
	0x00000498 : dup	// .\ControlNumberGuess.h, ControlMain, 11 - SAL : 2409
	0x0000049A : pushc		20	// .\ControlNumberGuess.h, ControlMain, 11 - SAL : 2410
	0x0000049E : eq	// .\ControlNumberGuess.h, ControlMain, 11 - SAL : 2411
	0x000004A0 : tjp		0x00000522	// .\ControlNumberGuess.h, ControlMain, 11 - SAL : 2412
	0x000004A6 : rsp	// .\ControlNumberGuess.h, ControlMain, 11 - SAL : 2413
	0x000004A8 : ujp		0x00000596	// .\ControlNumberGuess.h, ControlMain, 11 - SAL : 2414
	0x000004AE : nop	// .\ControlNumberGuess.h, ControlMain, 11 - SAL : 2415
	0x000004B0 : rsp	// .\ControlNumberGuess.h, ControlMain, 11 - SAL : 2416
	0x000004B2 : pushz		23 ( currentMenu )	// .\ControlNumberGuess.h, ControlMain, 15 - SAL : 2420
	0x000004B6 : pushc		0	// .\ControlNumberGuess.h, ControlMain, 15 - SAL : 2421
	0x000004BA : gt	// .\ControlNumberGuess.h, ControlMain, 15 - SAL : 2422
	0x000004BC : fjp		0x000004D6	// .\ControlNumberGuess.h, ControlMain, 15 - SAL : 2423
	0x000004C2 : pushz		23 ( currentMenu )	// .\ControlNumberGuess.h, ControlMain, 16 - SAL : 2425
	0x000004C6 : pushc		1	// .\ControlNumberGuess.h, ControlMain, 16 - SAL : 2426
	0x000004CA : sub	// .\ControlNumberGuess.h, ControlMain, 16 - SAL : 2427
	0x000004CC : popz		23 ( currentMenu )	// .\ControlNumberGuess.h, ControlMain, 16 - SAL : 2428
	0x000004D0 : ujp		0x000004E0	// .\ControlNumberGuess.h, ControlMain, 16 - SAL : 2429
	0x000004D6 : nop	// .\ControlNumberGuess.h, ControlMain, 16 - SAL : 2430
	0x000004D8 : pushc		2	// .\ControlNumberGuess.h, ControlMain, 18 - SAL : 2433
	0x000004DC : popz		23 ( currentMenu )	// .\ControlNumberGuess.h, ControlMain, 18 - SAL : 2434
	0x000004E0 : nop	// .\ControlNumberGuess.h, ControlMain, 19 - SAL : 2436
	0x000004E2 : ujp		0x00000596	// .\ControlNumberGuess.h, ControlMain, 19 - SAL : 2437
	0x000004E8 : nop	// .\ControlNumberGuess.h, ControlMain, 19 - SAL : 2438
	0x000004EA : rsp	// .\ControlNumberGuess.h, ControlMain, 19 - SAL : 2439
	0x000004EC : pushz		23 ( currentMenu )	// .\ControlNumberGuess.h, ControlMain, 24 - SAL : 2444
	0x000004F0 : pushc		2	// .\ControlNumberGuess.h, ControlMain, 24 - SAL : 2445
	0x000004F4 : lt	// .\ControlNumberGuess.h, ControlMain, 24 - SAL : 2446
	0x000004F6 : fjp		0x00000510	// .\ControlNumberGuess.h, ControlMain, 24 - SAL : 2447
	0x000004FC : pushz		23 ( currentMenu )	// .\ControlNumberGuess.h, ControlMain, 25 - SAL : 2449
	0x00000500 : pushc		1	// .\ControlNumberGuess.h, ControlMain, 25 - SAL : 2450
	0x00000504 : add	// .\ControlNumberGuess.h, ControlMain, 25 - SAL : 2451
	0x00000506 : popz		23 ( currentMenu )	// .\ControlNumberGuess.h, ControlMain, 25 - SAL : 2452
	0x0000050A : ujp		0x0000051A	// .\ControlNumberGuess.h, ControlMain, 25 - SAL : 2453
	0x00000510 : nop	// .\ControlNumberGuess.h, ControlMain, 25 - SAL : 2454
	0x00000512 : pushc		0	// .\ControlNumberGuess.h, ControlMain, 27 - SAL : 2457
	0x00000516 : popz		23 ( currentMenu )	// .\ControlNumberGuess.h, ControlMain, 27 - SAL : 2458
	0x0000051A : nop	// .\ControlNumberGuess.h, ControlMain, 28 - SAL : 2460
	0x0000051C : ujp		0x00000596	// .\ControlNumberGuess.h, ControlMain, 28 - SAL : 2461
	0x00000522 : nop	// .\ControlNumberGuess.h, ControlMain, 28 - SAL : 2462
	0x00000524 : rsp	// .\ControlNumberGuess.h, ControlMain, 28 - SAL : 2463
	0x00000526 : ssp	// .\ControlNumberGuess.h, ControlMain, 32 - SAL : 2467
	0x00000528 : pushz		23 ( currentMenu )	// .\ControlNumberGuess.h, ControlMain, 32 - SAL : 2468
	0x0000052C : dup	// .\ControlNumberGuess.h, ControlMain, 32 - SAL : 2469
	0x0000052E : pushc		0	// .\ControlNumberGuess.h, ControlMain, 32 - SAL : 2470
	0x00000532 : eq	// .\ControlNumberGuess.h, ControlMain, 32 - SAL : 2471
	0x00000534 : tjp		0x0000055E	// .\ControlNumberGuess.h, ControlMain, 32 - SAL : 2472
	0x0000053A : dup	// .\ControlNumberGuess.h, ControlMain, 32 - SAL : 2473
	0x0000053C : pushc		1	// .\ControlNumberGuess.h, ControlMain, 32 - SAL : 2474
	0x00000540 : eq	// .\ControlNumberGuess.h, ControlMain, 32 - SAL : 2475
	0x00000542 : tjp		0x00000572	// .\ControlNumberGuess.h, ControlMain, 32 - SAL : 2476
	0x00000548 : dup	// .\ControlNumberGuess.h, ControlMain, 32 - SAL : 2477
	0x0000054A : pushc		2	// .\ControlNumberGuess.h, ControlMain, 32 - SAL : 2478
	0x0000054E : eq	// .\ControlNumberGuess.h, ControlMain, 32 - SAL : 2479
	0x00000550 : tjp		0x00000586	// .\ControlNumberGuess.h, ControlMain, 32 - SAL : 2480
	0x00000556 : rsp	// .\ControlNumberGuess.h, ControlMain, 32 - SAL : 2481
	0x00000558 : ujp		0x00000594	// .\ControlNumberGuess.h, ControlMain, 32 - SAL : 2482
	0x0000055E : nop	// .\ControlNumberGuess.h, ControlMain, 32 - SAL : 2483
	0x00000560 : rsp	// .\ControlNumberGuess.h, ControlMain, 32 - SAL : 2484
	0x00000562 : pushc		30	// .\ControlNumberGuess.h, ControlMain, 34 - SAL : 2487
	0x00000566 : call		0x00000236	// .\ControlNumberGuess.h, ControlMain, 34 - SAL : 2488
	0x0000056C : ujp		0x00000594	// .\ControlNumberGuess.h, ControlMain, 34 - SAL : 2489
	0x00000572 : nop	// .\ControlNumberGuess.h, ControlMain, 34 - SAL : 2490
	0x00000574 : rsp	// .\ControlNumberGuess.h, ControlMain, 34 - SAL : 2491
	0x00000576 : pushc		31	// .\ControlNumberGuess.h, ControlMain, 37 - SAL : 2495
	0x0000057A : call		0x00000236	// .\ControlNumberGuess.h, ControlMain, 37 - SAL : 2496
	0x00000580 : ujp		0x00000594	// .\ControlNumberGuess.h, ControlMain, 37 - SAL : 2497
	0x00000586 : nop	// .\ControlNumberGuess.h, ControlMain, 37 - SAL : 2498
	0x00000588 : rsp	// .\ControlNumberGuess.h, ControlMain, 37 - SAL : 2499
	0x0000058A : pushc		32	// .\ControlNumberGuess.h, ControlMain, 40 - SAL : 2503
	0x0000058E : call		0x00000236	// .\ControlNumberGuess.h, ControlMain, 40 - SAL : 2504
	0x00000594 : nop	// .\ControlNumberGuess.h, ControlMain, 40 - SAL : 2505
	0x00000596 : nop	// .\ControlNumberGuess.h, ControlMain, 40 - SAL : 2506
	0x00000598 : ret	// .\ControlNumberGuess.h, ControlMain, 43 - SAL : 2510
}


FUNCTION : ControlOption()
{
	0x0000059A : nop	// .\ControlNumberGuess.h, ControlOption, 79 - SAL : 2633
	0x0000059C : popz		97 ( key of Function ControlOption )	// .\ControlNumberGuess.h, ControlOption, 79 - SAL : 2634
	0x000005A0 : ssp	// .\ControlNumberGuess.h, ControlOption, 82 - SAL : 2636
	0x000005A2 : pushz		97 ( key of Function ControlOption )	// .\ControlNumberGuess.h, ControlOption, 82 - SAL : 2637
	0x000005A6 : dup	// .\ControlNumberGuess.h, ControlOption, 82 - SAL : 2638
	0x000005A8 : pushc		16	// .\ControlNumberGuess.h, ControlOption, 82 - SAL : 2639
	0x000005AC : eq	// .\ControlNumberGuess.h, ControlOption, 82 - SAL : 2640
	0x000005AE : tjp		0x00000602	// .\ControlNumberGuess.h, ControlOption, 82 - SAL : 2641
	0x000005B4 : dup	// .\ControlNumberGuess.h, ControlOption, 82 - SAL : 2642
	0x000005B6 : pushc		18	// .\ControlNumberGuess.h, ControlOption, 82 - SAL : 2643
	0x000005BA : eq	// .\ControlNumberGuess.h, ControlOption, 82 - SAL : 2644
	0x000005BC : tjp		0x00000602	// .\ControlNumberGuess.h, ControlOption, 82 - SAL : 2645
	0x000005C2 : dup	// .\ControlNumberGuess.h, ControlOption, 82 - SAL : 2646
	0x000005C4 : pushc		17	// .\ControlNumberGuess.h, ControlOption, 82 - SAL : 2647
	0x000005C8 : eq	// .\ControlNumberGuess.h, ControlOption, 82 - SAL : 2648
	0x000005CA : tjp		0x0000064C	// .\ControlNumberGuess.h, ControlOption, 82 - SAL : 2649
	0x000005D0 : dup	// .\ControlNumberGuess.h, ControlOption, 82 - SAL : 2650
	0x000005D2 : pushc		19	// .\ControlNumberGuess.h, ControlOption, 82 - SAL : 2651
	0x000005D6 : eq	// .\ControlNumberGuess.h, ControlOption, 82 - SAL : 2652
	0x000005D8 : tjp		0x0000064C	// .\ControlNumberGuess.h, ControlOption, 82 - SAL : 2653
	0x000005DE : dup	// .\ControlNumberGuess.h, ControlOption, 82 - SAL : 2654
	0x000005E0 : pushc		20	// .\ControlNumberGuess.h, ControlOption, 82 - SAL : 2655
	0x000005E4 : eq	// .\ControlNumberGuess.h, ControlOption, 82 - SAL : 2656
	0x000005E6 : tjp		0x00000696	// .\ControlNumberGuess.h, ControlOption, 82 - SAL : 2657
	0x000005EC : dup	// .\ControlNumberGuess.h, ControlOption, 82 - SAL : 2658
	0x000005EE : pushc		13	// .\ControlNumberGuess.h, ControlOption, 82 - SAL : 2659
	0x000005F2 : eq	// .\ControlNumberGuess.h, ControlOption, 82 - SAL : 2660
	0x000005F4 : tjp		0x000006A8	// .\ControlNumberGuess.h, ControlOption, 82 - SAL : 2661
	0x000005FA : rsp	// .\ControlNumberGuess.h, ControlOption, 82 - SAL : 2662
	0x000005FC : ujp		0x000006B6	// .\ControlNumberGuess.h, ControlOption, 82 - SAL : 2663
	0x00000602 : nop	// .\ControlNumberGuess.h, ControlOption, 82 - SAL : 2664
	0x00000604 : rsp	// .\ControlNumberGuess.h, ControlOption, 82 - SAL : 2665
	0x00000606 : pushz		38 ( selectedValue )	// .\ControlNumberGuess.h, ControlOption, 86 - SAL : 2669
	0x0000060A : pushc		1	// .\ControlNumberGuess.h, ControlOption, 86 - SAL : 2670
	0x0000060E : gt	// .\ControlNumberGuess.h, ControlOption, 86 - SAL : 2671
	0x00000610 : fjp		0x0000062A	// .\ControlNumberGuess.h, ControlOption, 86 - SAL : 2672
	0x00000616 : pushz		38 ( selectedValue )	// .\ControlNumberGuess.h, ControlOption, 87 - SAL : 2674
	0x0000061A : pushc		1	// .\ControlNumberGuess.h, ControlOption, 87 - SAL : 2675
	0x0000061E : sub	// .\ControlNumberGuess.h, ControlOption, 87 - SAL : 2676
	0x00000620 : popz		38 ( selectedValue )	// .\ControlNumberGuess.h, ControlOption, 87 - SAL : 2677
	0x00000624 : ujp		0x00000634	// .\ControlNumberGuess.h, ControlOption, 87 - SAL : 2678
	0x0000062A : nop	// .\ControlNumberGuess.h, ControlOption, 87 - SAL : 2679
	0x0000062C : pushc		4	// .\ControlNumberGuess.h, ControlOption, 89 - SAL : 2682
	0x00000630 : popz		38 ( selectedValue )	// .\ControlNumberGuess.h, ControlOption, 89 - SAL : 2683
	0x00000634 : nop	// .\ControlNumberGuess.h, ControlOption, 90 - SAL : 2685
	0x00000636 : pushc		3	// .\ControlNumberGuess.h, ControlOption, 92 - SAL : 2687
	0x0000063A : popz		43 ( delayTime )	// .\ControlNumberGuess.h, ControlOption, 92 - SAL : 2688
	0x0000063E : pushc		16	// .\ControlNumberGuess.h, ControlOption, 93 - SAL : 2690
	0x00000642 : popz		44 ( delayKey )	// .\ControlNumberGuess.h, ControlOption, 93 - SAL : 2691
	0x00000646 : ujp		0x000006B6	// .\ControlNumberGuess.h, ControlOption, 93 - SAL : 2692
	0x0000064C : nop	// .\ControlNumberGuess.h, ControlOption, 93 - SAL : 2693
	0x0000064E : rsp	// .\ControlNumberGuess.h, ControlOption, 93 - SAL : 2694
	0x00000650 : pushz		38 ( selectedValue )	// .\ControlNumberGuess.h, ControlOption, 99 - SAL : 2699
	0x00000654 : pushc		4	// .\ControlNumberGuess.h, ControlOption, 99 - SAL : 2700
	0x00000658 : lt	// .\ControlNumberGuess.h, ControlOption, 99 - SAL : 2701
	0x0000065A : fjp		0x00000674	// .\ControlNumberGuess.h, ControlOption, 99 - SAL : 2702
	0x00000660 : pushz		38 ( selectedValue )	// .\ControlNumberGuess.h, ControlOption, 100 - SAL : 2704
	0x00000664 : pushc		1	// .\ControlNumberGuess.h, ControlOption, 100 - SAL : 2705
	0x00000668 : add	// .\ControlNumberGuess.h, ControlOption, 100 - SAL : 2706
	0x0000066A : popz		38 ( selectedValue )	// .\ControlNumberGuess.h, ControlOption, 100 - SAL : 2707
	0x0000066E : ujp		0x0000067E	// .\ControlNumberGuess.h, ControlOption, 100 - SAL : 2708
	0x00000674 : nop	// .\ControlNumberGuess.h, ControlOption, 100 - SAL : 2709
	0x00000676 : pushc		1	// .\ControlNumberGuess.h, ControlOption, 102 - SAL : 2712
	0x0000067A : popz		38 ( selectedValue )	// .\ControlNumberGuess.h, ControlOption, 102 - SAL : 2713
	0x0000067E : nop	// .\ControlNumberGuess.h, ControlOption, 103 - SAL : 2715
	0x00000680 : pushc		3	// .\ControlNumberGuess.h, ControlOption, 105 - SAL : 2717
	0x00000684 : popz		43 ( delayTime )	// .\ControlNumberGuess.h, ControlOption, 105 - SAL : 2718
	0x00000688 : pushc		17	// .\ControlNumberGuess.h, ControlOption, 106 - SAL : 2720
	0x0000068C : popz		44 ( delayKey )	// .\ControlNumberGuess.h, ControlOption, 106 - SAL : 2721
	0x00000690 : ujp		0x000006B6	// .\ControlNumberGuess.h, ControlOption, 106 - SAL : 2722
	0x00000696 : nop	// .\ControlNumberGuess.h, ControlOption, 106 - SAL : 2723
	0x00000698 : rsp	// .\ControlNumberGuess.h, ControlOption, 106 - SAL : 2724
	0x0000069A : pushz		38 ( selectedValue )	// .\ControlNumberGuess.h, ControlOption, 111 - SAL : 2728
	0x0000069E : popz		37 ( numberSize )	// .\ControlNumberGuess.h, ControlOption, 111 - SAL : 2729
	0x000006A2 : call		0x00001F64	// .\ControlNumberGuess.h, ControlOption, 113 - SAL : 2731
	0x000006A8 : nop	// .\ControlNumberGuess.h, ControlOption, 113 - SAL : 2732
	0x000006AA : rsp	// .\ControlNumberGuess.h, ControlOption, 113 - SAL : 2733
	0x000006AC : pushc		2	// .\ControlNumberGuess.h, ControlOption, 116 - SAL : 2736
	0x000006B0 : call		0x00000236	// .\ControlNumberGuess.h, ControlOption, 116 - SAL : 2737
	0x000006B6 : nop	// .\ControlNumberGuess.h, ControlOption, 116 - SAL : 2738
	0x000006B8 : ret	// .\ControlNumberGuess.h, ControlOption, 118 - SAL : 2741
}


FUNCTION : ControlPlay()
{
	0x000006BA : nop	// .\ControlNumberGuess.h, ControlPlay, 45 - SAL : 2512
	0x000006BC : popz		95 ( key of Function ControlPlay )	// .\ControlNumberGuess.h, ControlPlay, 45 - SAL : 2513
	0x000006C0 : ssp	// .\ControlNumberGuess.h, ControlPlay, 46 - SAL : 2515
	0x000006C2 : pushz		33 ( currentPlayMode )	// .\ControlNumberGuess.h, ControlPlay, 46 - SAL : 2516
	0x000006C6 : dup	// .\ControlNumberGuess.h, ControlPlay, 46 - SAL : 2517
	0x000006C8 : pushc		0	// .\ControlNumberGuess.h, ControlPlay, 46 - SAL : 2518
	0x000006CC : eq	// .\ControlNumberGuess.h, ControlPlay, 46 - SAL : 2519
	0x000006CE : tjp		0x00000730	// .\ControlNumberGuess.h, ControlPlay, 46 - SAL : 2520
	0x000006D4 : dup	// .\ControlNumberGuess.h, ControlPlay, 46 - SAL : 2521
	0x000006D6 : pushc		1	// .\ControlNumberGuess.h, ControlPlay, 46 - SAL : 2522
	0x000006DA : eq	// .\ControlNumberGuess.h, ControlPlay, 46 - SAL : 2523
	0x000006DC : tjp		0x00000744	// .\ControlNumberGuess.h, ControlPlay, 46 - SAL : 2524
	0x000006E2 : dup	// .\ControlNumberGuess.h, ControlPlay, 46 - SAL : 2525
	0x000006E4 : pushc		2	// .\ControlNumberGuess.h, ControlPlay, 46 - SAL : 2526
	0x000006E8 : eq	// .\ControlNumberGuess.h, ControlPlay, 46 - SAL : 2527
	0x000006EA : tjp		0x00000758	// .\ControlNumberGuess.h, ControlPlay, 46 - SAL : 2528
	0x000006F0 : dup	// .\ControlNumberGuess.h, ControlPlay, 46 - SAL : 2529
	0x000006F2 : pushc		3	// .\ControlNumberGuess.h, ControlPlay, 46 - SAL : 2530
	0x000006F6 : eq	// .\ControlNumberGuess.h, ControlPlay, 46 - SAL : 2531
	0x000006F8 : tjp		0x0000076C	// .\ControlNumberGuess.h, ControlPlay, 46 - SAL : 2532
	0x000006FE : dup	// .\ControlNumberGuess.h, ControlPlay, 46 - SAL : 2533
	0x00000700 : pushc		4	// .\ControlNumberGuess.h, ControlPlay, 46 - SAL : 2534
	0x00000704 : eq	// .\ControlNumberGuess.h, ControlPlay, 46 - SAL : 2535
	0x00000706 : tjp		0x00000780	// .\ControlNumberGuess.h, ControlPlay, 46 - SAL : 2536
	0x0000070C : dup	// .\ControlNumberGuess.h, ControlPlay, 46 - SAL : 2537
	0x0000070E : pushc		5	// .\ControlNumberGuess.h, ControlPlay, 46 - SAL : 2538
	0x00000712 : eq	// .\ControlNumberGuess.h, ControlPlay, 46 - SAL : 2539
	0x00000714 : tjp		0x00000794	// .\ControlNumberGuess.h, ControlPlay, 46 - SAL : 2540
	0x0000071A : dup	// .\ControlNumberGuess.h, ControlPlay, 46 - SAL : 2541
	0x0000071C : pushc		6	// .\ControlNumberGuess.h, ControlPlay, 46 - SAL : 2542
	0x00000720 : eq	// .\ControlNumberGuess.h, ControlPlay, 46 - SAL : 2543
	0x00000722 : tjp		0x000007A8	// .\ControlNumberGuess.h, ControlPlay, 46 - SAL : 2544
	0x00000728 : rsp	// .\ControlNumberGuess.h, ControlPlay, 46 - SAL : 2545
	0x0000072A : ujp		0x000007B6	// .\ControlNumberGuess.h, ControlPlay, 46 - SAL : 2546
	0x00000730 : nop	// .\ControlNumberGuess.h, ControlPlay, 46 - SAL : 2547
	0x00000732 : rsp	// .\ControlNumberGuess.h, ControlPlay, 46 - SAL : 2548
	0x00000734 : pushz		95 ( key of Function ControlPlay )	// .\ControlNumberGuess.h, ControlPlay, 48 - SAL : 2551
	0x00000738 : call		0x00000B6A	// .\ControlNumberGuess.h, ControlPlay, 48 - SAL : 2552
	0x0000073E : ujp		0x000007B6	// .\ControlNumberGuess.h, ControlPlay, 48 - SAL : 2553
	0x00000744 : nop	// .\ControlNumberGuess.h, ControlPlay, 48 - SAL : 2554
	0x00000746 : rsp	// .\ControlNumberGuess.h, ControlPlay, 48 - SAL : 2555
	0x00000748 : pushz		95 ( key of Function ControlPlay )	// .\ControlNumberGuess.h, ControlPlay, 51 - SAL : 2559
	0x0000074C : call		0x00000924	// .\ControlNumberGuess.h, ControlPlay, 51 - SAL : 2560
	0x00000752 : ujp		0x000007B6	// .\ControlNumberGuess.h, ControlPlay, 51 - SAL : 2561
	0x00000758 : nop	// .\ControlNumberGuess.h, ControlPlay, 51 - SAL : 2562
	0x0000075A : rsp	// .\ControlNumberGuess.h, ControlPlay, 51 - SAL : 2563
	0x0000075C : pushz		95 ( key of Function ControlPlay )	// .\ControlNumberGuess.h, ControlPlay, 54 - SAL : 2567
	0x00000760 : call		0x000007BA	// .\ControlNumberGuess.h, ControlPlay, 54 - SAL : 2568
	0x00000766 : ujp		0x000007B6	// .\ControlNumberGuess.h, ControlPlay, 54 - SAL : 2569
	0x0000076C : nop	// .\ControlNumberGuess.h, ControlPlay, 54 - SAL : 2570
	0x0000076E : rsp	// .\ControlNumberGuess.h, ControlPlay, 54 - SAL : 2571
	0x00000770 : pushz		95 ( key of Function ControlPlay )	// .\ControlNumberGuess.h, ControlPlay, 57 - SAL : 2575
	0x00000774 : call		0x00000B36	// .\ControlNumberGuess.h, ControlPlay, 57 - SAL : 2576
	0x0000077A : ujp		0x000007B6	// .\ControlNumberGuess.h, ControlPlay, 57 - SAL : 2577
	0x00000780 : nop	// .\ControlNumberGuess.h, ControlPlay, 57 - SAL : 2578
	0x00000782 : rsp	// .\ControlNumberGuess.h, ControlPlay, 57 - SAL : 2579
	0x00000784 : pushz		95 ( key of Function ControlPlay )	// .\ControlNumberGuess.h, ControlPlay, 60 - SAL : 2583
	0x00000788 : call		0x00000BAC	// .\ControlNumberGuess.h, ControlPlay, 60 - SAL : 2584
	0x0000078E : ujp		0x000007B6	// .\ControlNumberGuess.h, ControlPlay, 60 - SAL : 2585
	0x00000794 : nop	// .\ControlNumberGuess.h, ControlPlay, 60 - SAL : 2586
	0x00000796 : rsp	// .\ControlNumberGuess.h, ControlPlay, 60 - SAL : 2587
	0x00000798 : pushz		95 ( key of Function ControlPlay )	// .\ControlNumberGuess.h, ControlPlay, 63 - SAL : 2591
	0x0000079C : call		0x00000840	// .\ControlNumberGuess.h, ControlPlay, 63 - SAL : 2592
	0x000007A2 : ujp		0x000007B6	// .\ControlNumberGuess.h, ControlPlay, 63 - SAL : 2593
	0x000007A8 : nop	// .\ControlNumberGuess.h, ControlPlay, 63 - SAL : 2594
	0x000007AA : rsp	// .\ControlNumberGuess.h, ControlPlay, 63 - SAL : 2595
	0x000007AC : pushz		95 ( key of Function ControlPlay )	// .\ControlNumberGuess.h, ControlPlay, 66 - SAL : 2599
	0x000007B0 : call		0x00000A52	// .\ControlNumberGuess.h, ControlPlay, 66 - SAL : 2600
	0x000007B6 : nop	// .\ControlNumberGuess.h, ControlPlay, 66 - SAL : 2601
	0x000007B8 : ret	// .\ControlNumberGuess.h, ControlPlay, 68 - SAL : 2604
}


FUNCTION : ControlPlayCompared()
{
	0x000007BA : nop	// .\ControlPlay.h, ControlPlayCompared, 113 - SAL : 1673
	0x000007BC : popz		84 ( key of Function ControlPlayCompared )	// .\ControlPlay.h, ControlPlayCompared, 113 - SAL : 1674
	0x000007C0 : ssp	// .\ControlPlay.h, ControlPlayCompared, 114 - SAL : 1676
	0x000007C2 : pushz		84 ( key of Function ControlPlayCompared )	// .\ControlPlay.h, ControlPlayCompared, 114 - SAL : 1677
	0x000007C6 : dup	// .\ControlPlay.h, ControlPlayCompared, 114 - SAL : 1678
	0x000007C8 : pushc		20	// .\ControlPlay.h, ControlPlayCompared, 114 - SAL : 1679
	0x000007CC : eq	// .\ControlPlay.h, ControlPlayCompared, 114 - SAL : 1680
	0x000007CE : tjp		0x000007DC	// .\ControlPlay.h, ControlPlayCompared, 114 - SAL : 1681
	0x000007D4 : rsp	// .\ControlPlay.h, ControlPlayCompared, 114 - SAL : 1682
	0x000007D6 : ujp		0x0000083C	// .\ControlPlay.h, ControlPlayCompared, 114 - SAL : 1683
	0x000007DC : nop	// .\ControlPlay.h, ControlPlayCompared, 114 - SAL : 1684
	0x000007DE : rsp	// .\ControlPlay.h, ControlPlayCompared, 114 - SAL : 1685
	0x000007E0 : pushz		27 ( answeredNumber )	// .\ControlPlay.h, ControlPlayCompared, 116 - SAL : 1688
	0x000007E4 : pushz		26 ( questNumber )	// .\ControlPlay.h, ControlPlayCompared, 116 - SAL : 1689
	0x000007E8 : eq	// .\ControlPlay.h, ControlPlayCompared, 116 - SAL : 1690
	0x000007EA : fjp		0x00000800	// .\ControlPlay.h, ControlPlayCompared, 116 - SAL : 1691
	0x000007F0 : pushc		6	// .\ControlPlay.h, ControlPlayCompared, 118 - SAL : 1693
	0x000007F4 : call		0x000002F6	// .\ControlPlay.h, ControlPlayCompared, 118 - SAL : 1694
	0x000007FA : ujp		0x0000083A	// .\ControlPlay.h, ControlPlayCompared, 118 - SAL : 1695
	0x00000800 : nop	// .\ControlPlay.h, ControlPlayCompared, 118 - SAL : 1696
	0x00000802 : pushz		24 ( chance )	// .\ControlPlay.h, ControlPlayCompared, 121 - SAL : 1699
	0x00000806 : pushc		0	// .\ControlPlay.h, ControlPlayCompared, 121 - SAL : 1700
	0x0000080A : gt	// .\ControlPlay.h, ControlPlayCompared, 121 - SAL : 1701
	0x0000080C : fjp		0x0000082C	// .\ControlPlay.h, ControlPlayCompared, 121 - SAL : 1702
	0x00000812 : pushz		27 ( answeredNumber )	// .\ControlPlay.h, ControlPlayCompared, 123 - SAL : 1704
	0x00000816 : call		0x00000080	// .\ControlPlay.h, ControlPlayCompared, 123 - SAL : 1705
	0x0000081C : pushc		1	// .\ControlPlay.h, ControlPlayCompared, 124 - SAL : 1707
	0x00000820 : call		0x000002F6	// .\ControlPlay.h, ControlPlayCompared, 124 - SAL : 1708
	0x00000826 : ujp		0x00000838	// .\ControlPlay.h, ControlPlayCompared, 124 - SAL : 1709
	0x0000082C : nop	// .\ControlPlay.h, ControlPlayCompared, 124 - SAL : 1710
	0x0000082E : pushc		3	// .\ControlPlay.h, ControlPlayCompared, 127 - SAL : 1713
	0x00000832 : call		0x000002F6	// .\ControlPlay.h, ControlPlayCompared, 127 - SAL : 1714
	0x00000838 : nop	// .\ControlPlay.h, ControlPlayCompared, 128 - SAL : 1716
	0x0000083A : nop	// .\ControlPlay.h, ControlPlayCompared, 129 - SAL : 1718
	0x0000083C : nop	// .\ControlPlay.h, ControlPlayCompared, 129 - SAL : 1719
	0x0000083E : ret	// .\ControlPlay.h, ControlPlayCompared, 131 - SAL : 1722
}


FUNCTION : ControlPlayGiveup()
{
	0x00000840 : nop	// .\ControlPlay.h, ControlPlayGiveup, 147 - SAL : 1768
	0x00000842 : popz		87 ( key of Function ControlPlayGiveup )	// .\ControlPlay.h, ControlPlayGiveup, 147 - SAL : 1769
	0x00000846 : ssp	// .\ControlPlay.h, ControlPlayGiveup, 148 - SAL : 1771
	0x00000848 : pushz		87 ( key of Function ControlPlayGiveup )	// .\ControlPlay.h, ControlPlayGiveup, 148 - SAL : 1772
	0x0000084C : dup	// .\ControlPlay.h, ControlPlayGiveup, 148 - SAL : 1773
	0x0000084E : pushc		16	// .\ControlPlay.h, ControlPlayGiveup, 148 - SAL : 1774
	0x00000852 : eq	// .\ControlPlay.h, ControlPlayGiveup, 148 - SAL : 1775
	0x00000854 : tjp		0x0000089A	// .\ControlPlay.h, ControlPlayGiveup, 148 - SAL : 1776
	0x0000085A : dup	// .\ControlPlay.h, ControlPlayGiveup, 148 - SAL : 1777
	0x0000085C : pushc		18	// .\ControlPlay.h, ControlPlayGiveup, 148 - SAL : 1778
	0x00000860 : eq	// .\ControlPlay.h, ControlPlayGiveup, 148 - SAL : 1779
	0x00000862 : tjp		0x0000089A	// .\ControlPlay.h, ControlPlayGiveup, 148 - SAL : 1780
	0x00000868 : dup	// .\ControlPlay.h, ControlPlayGiveup, 148 - SAL : 1781
	0x0000086A : pushc		17	// .\ControlPlay.h, ControlPlayGiveup, 148 - SAL : 1782
	0x0000086E : eq	// .\ControlPlay.h, ControlPlayGiveup, 148 - SAL : 1783
	0x00000870 : tjp		0x0000089A	// .\ControlPlay.h, ControlPlayGiveup, 148 - SAL : 1784
	0x00000876 : dup	// .\ControlPlay.h, ControlPlayGiveup, 148 - SAL : 1785
	0x00000878 : pushc		19	// .\ControlPlay.h, ControlPlayGiveup, 148 - SAL : 1786
	0x0000087C : eq	// .\ControlPlay.h, ControlPlayGiveup, 148 - SAL : 1787
	0x0000087E : tjp		0x0000089A	// .\ControlPlay.h, ControlPlayGiveup, 148 - SAL : 1788
	0x00000884 : dup	// .\ControlPlay.h, ControlPlayGiveup, 148 - SAL : 1789
	0x00000886 : pushc		20	// .\ControlPlay.h, ControlPlayGiveup, 148 - SAL : 1790
	0x0000088A : eq	// .\ControlPlay.h, ControlPlayGiveup, 148 - SAL : 1791
	0x0000088C : tjp		0x000008CE	// .\ControlPlay.h, ControlPlayGiveup, 148 - SAL : 1792
	0x00000892 : rsp	// .\ControlPlay.h, ControlPlayGiveup, 148 - SAL : 1793
	0x00000894 : ujp		0x00000920	// .\ControlPlay.h, ControlPlayGiveup, 148 - SAL : 1794
	0x0000089A : nop	// .\ControlPlay.h, ControlPlayGiveup, 148 - SAL : 1795
	0x0000089C : rsp	// .\ControlPlay.h, ControlPlayGiveup, 148 - SAL : 1796
	0x0000089E : pushz		38 ( selectedValue )	// .\ControlPlay.h, ControlPlayGiveup, 154 - SAL : 1802
	0x000008A2 : pushc		0	// .\ControlPlay.h, ControlPlayGiveup, 154 - SAL : 1803
	0x000008A6 : eq	// .\ControlPlay.h, ControlPlayGiveup, 154 - SAL : 1804
	0x000008A8 : fjp		0x000008BC	// .\ControlPlay.h, ControlPlayGiveup, 154 - SAL : 1805
	0x000008AE : pushc		1	// .\ControlPlay.h, ControlPlayGiveup, 155 - SAL : 1807
	0x000008B2 : popz		38 ( selectedValue )	// .\ControlPlay.h, ControlPlayGiveup, 155 - SAL : 1808
	0x000008B6 : ujp		0x000008C6	// .\ControlPlay.h, ControlPlayGiveup, 155 - SAL : 1809
	0x000008BC : nop	// .\ControlPlay.h, ControlPlayGiveup, 155 - SAL : 1810
	0x000008BE : pushc		0	// .\ControlPlay.h, ControlPlayGiveup, 157 - SAL : 1813
	0x000008C2 : popz		38 ( selectedValue )	// .\ControlPlay.h, ControlPlayGiveup, 157 - SAL : 1814
	0x000008C6 : nop	// .\ControlPlay.h, ControlPlayGiveup, 158 - SAL : 1816
	0x000008C8 : ujp		0x00000920	// .\ControlPlay.h, ControlPlayGiveup, 158 - SAL : 1817
	0x000008CE : nop	// .\ControlPlay.h, ControlPlayGiveup, 158 - SAL : 1818
	0x000008D0 : rsp	// .\ControlPlay.h, ControlPlayGiveup, 158 - SAL : 1819
	0x000008D2 : ssp	// .\ControlPlay.h, ControlPlayGiveup, 161 - SAL : 1823
	0x000008D4 : pushz		38 ( selectedValue )	// .\ControlPlay.h, ControlPlayGiveup, 161 - SAL : 1824
	0x000008D8 : dup	// .\ControlPlay.h, ControlPlayGiveup, 161 - SAL : 1825
	0x000008DA : pushc		0	// .\ControlPlay.h, ControlPlayGiveup, 161 - SAL : 1826
	0x000008DE : eq	// .\ControlPlay.h, ControlPlayGiveup, 161 - SAL : 1827
	0x000008E0 : tjp		0x000008FC	// .\ControlPlay.h, ControlPlayGiveup, 161 - SAL : 1828
	0x000008E6 : dup	// .\ControlPlay.h, ControlPlayGiveup, 161 - SAL : 1829
	0x000008E8 : pushc		1	// .\ControlPlay.h, ControlPlayGiveup, 161 - SAL : 1830
	0x000008EC : eq	// .\ControlPlay.h, ControlPlayGiveup, 161 - SAL : 1831
	0x000008EE : tjp		0x00000910	// .\ControlPlay.h, ControlPlayGiveup, 161 - SAL : 1832
	0x000008F4 : rsp	// .\ControlPlay.h, ControlPlayGiveup, 161 - SAL : 1833
	0x000008F6 : ujp		0x0000091E	// .\ControlPlay.h, ControlPlayGiveup, 161 - SAL : 1834
	0x000008FC : nop	// .\ControlPlay.h, ControlPlayGiveup, 161 - SAL : 1835
	0x000008FE : rsp	// .\ControlPlay.h, ControlPlayGiveup, 161 - SAL : 1836
	0x00000900 : pushc		1	// .\ControlPlay.h, ControlPlayGiveup, 164 - SAL : 1839
	0x00000904 : call		0x000002F6	// .\ControlPlay.h, ControlPlayGiveup, 164 - SAL : 1840
	0x0000090A : ujp		0x0000091E	// .\ControlPlay.h, ControlPlayGiveup, 164 - SAL : 1841
	0x00000910 : nop	// .\ControlPlay.h, ControlPlayGiveup, 164 - SAL : 1842
	0x00000912 : rsp	// .\ControlPlay.h, ControlPlayGiveup, 164 - SAL : 1843
	0x00000914 : pushc		3	// .\ControlPlay.h, ControlPlayGiveup, 168 - SAL : 1847
	0x00000918 : call		0x000002F6	// .\ControlPlay.h, ControlPlayGiveup, 168 - SAL : 1848
	0x0000091E : nop	// .\ControlPlay.h, ControlPlayGiveup, 168 - SAL : 1849
	0x00000920 : nop	// .\ControlPlay.h, ControlPlayGiveup, 168 - SAL : 1850
	0x00000922 : ret	// .\ControlPlay.h, ControlPlayGiveup, 171 - SAL : 1854
}


FUNCTION : ControlPlayInput()
{
	0x00000924 : nop	// .\ControlPlay.h, ControlPlayInput, 78 - SAL : 1558
	0x00000926 : popz		83 ( key of Function ControlPlayInput )	// .\ControlPlay.h, ControlPlayInput, 78 - SAL : 1559
	0x0000092A : ssp	// .\ControlPlay.h, ControlPlayInput, 80 - SAL : 1561
	0x0000092C : pushz		83 ( key of Function ControlPlayInput )	// .\ControlPlay.h, ControlPlayInput, 80 - SAL : 1562
	0x00000930 : dup	// .\ControlPlay.h, ControlPlayInput, 80 - SAL : 1563
	0x00000932 : pushc		16	// .\ControlPlay.h, ControlPlayInput, 80 - SAL : 1564
	0x00000936 : eq	// .\ControlPlay.h, ControlPlayInput, 80 - SAL : 1565
	0x00000938 : tjp		0x0000098C	// .\ControlPlay.h, ControlPlayInput, 80 - SAL : 1566
	0x0000093E : dup	// .\ControlPlay.h, ControlPlayInput, 80 - SAL : 1567
	0x00000940 : pushc		18	// .\ControlPlay.h, ControlPlayInput, 80 - SAL : 1568
	0x00000944 : eq	// .\ControlPlay.h, ControlPlayInput, 80 - SAL : 1569
	0x00000946 : tjp		0x0000098C	// .\ControlPlay.h, ControlPlayInput, 80 - SAL : 1570
	0x0000094C : dup	// .\ControlPlay.h, ControlPlayInput, 80 - SAL : 1571
	0x0000094E : pushc		17	// .\ControlPlay.h, ControlPlayInput, 80 - SAL : 1572
	0x00000952 : eq	// .\ControlPlay.h, ControlPlayInput, 80 - SAL : 1573
	0x00000954 : tjp		0x0000098C	// .\ControlPlay.h, ControlPlayInput, 80 - SAL : 1574
	0x0000095A : dup	// .\ControlPlay.h, ControlPlayInput, 80 - SAL : 1575
	0x0000095C : pushc		19	// .\ControlPlay.h, ControlPlayInput, 80 - SAL : 1576
	0x00000960 : eq	// .\ControlPlay.h, ControlPlayInput, 80 - SAL : 1577
	0x00000962 : tjp		0x0000098C	// .\ControlPlay.h, ControlPlayInput, 80 - SAL : 1578
	0x00000968 : dup	// .\ControlPlay.h, ControlPlayInput, 80 - SAL : 1579
	0x0000096A : pushc		20	// .\ControlPlay.h, ControlPlayInput, 80 - SAL : 1580
	0x0000096E : eq	// .\ControlPlay.h, ControlPlayInput, 80 - SAL : 1581
	0x00000970 : tjp		0x000009C0	// .\ControlPlay.h, ControlPlayInput, 80 - SAL : 1582
	0x00000976 : dup	// .\ControlPlay.h, ControlPlayInput, 80 - SAL : 1583
	0x00000978 : pushc		13	// .\ControlPlay.h, ControlPlayInput, 80 - SAL : 1584
	0x0000097C : eq	// .\ControlPlay.h, ControlPlayInput, 80 - SAL : 1585
	0x0000097E : tjp		0x00000A40	// .\ControlPlay.h, ControlPlayInput, 80 - SAL : 1586
	0x00000984 : rsp	// .\ControlPlay.h, ControlPlayInput, 80 - SAL : 1587
	0x00000986 : ujp		0x00000A4E	// .\ControlPlay.h, ControlPlayInput, 80 - SAL : 1588
	0x0000098C : nop	// .\ControlPlay.h, ControlPlayInput, 80 - SAL : 1589
	0x0000098E : rsp	// .\ControlPlay.h, ControlPlayInput, 80 - SAL : 1590
	0x00000990 : pushz		38 ( selectedValue )	// .\ControlPlay.h, ControlPlayInput, 86 - SAL : 1596
	0x00000994 : pushc		0	// .\ControlPlay.h, ControlPlayInput, 86 - SAL : 1597
	0x00000998 : eq	// .\ControlPlay.h, ControlPlayInput, 86 - SAL : 1598
	0x0000099A : fjp		0x000009AE	// .\ControlPlay.h, ControlPlayInput, 86 - SAL : 1599
	0x000009A0 : pushc		1	// .\ControlPlay.h, ControlPlayInput, 87 - SAL : 1601
	0x000009A4 : popz		38 ( selectedValue )	// .\ControlPlay.h, ControlPlayInput, 87 - SAL : 1602
	0x000009A8 : ujp		0x000009B8	// .\ControlPlay.h, ControlPlayInput, 87 - SAL : 1603
	0x000009AE : nop	// .\ControlPlay.h, ControlPlayInput, 87 - SAL : 1604
	0x000009B0 : pushc		0	// .\ControlPlay.h, ControlPlayInput, 89 - SAL : 1607
	0x000009B4 : popz		38 ( selectedValue )	// .\ControlPlay.h, ControlPlayInput, 89 - SAL : 1608
	0x000009B8 : nop	// .\ControlPlay.h, ControlPlayInput, 90 - SAL : 1610
	0x000009BA : ujp		0x00000A4E	// .\ControlPlay.h, ControlPlayInput, 90 - SAL : 1611
	0x000009C0 : nop	// .\ControlPlay.h, ControlPlayInput, 90 - SAL : 1612
	0x000009C2 : rsp	// .\ControlPlay.h, ControlPlayInput, 90 - SAL : 1613
	0x000009C4 : ssp	// .\ControlPlay.h, ControlPlayInput, 93 - SAL : 1617
	0x000009C6 : pushz		38 ( selectedValue )	// .\ControlPlay.h, ControlPlayInput, 93 - SAL : 1618
	0x000009CA : dup	// .\ControlPlay.h, ControlPlayInput, 93 - SAL : 1619
	0x000009CC : pushc		0	// .\ControlPlay.h, ControlPlayInput, 93 - SAL : 1620
	0x000009D0 : eq	// .\ControlPlay.h, ControlPlayInput, 93 - SAL : 1621
	0x000009D2 : tjp		0x000009EE	// .\ControlPlay.h, ControlPlayInput, 93 - SAL : 1622
	0x000009D8 : dup	// .\ControlPlay.h, ControlPlayInput, 93 - SAL : 1623
	0x000009DA : pushc		1	// .\ControlPlay.h, ControlPlayInput, 93 - SAL : 1624
	0x000009DE : eq	// .\ControlPlay.h, ControlPlayInput, 93 - SAL : 1625
	0x000009E0 : tjp		0x00000A04	// .\ControlPlay.h, ControlPlayInput, 93 - SAL : 1626
	0x000009E6 : rsp	// .\ControlPlay.h, ControlPlayInput, 93 - SAL : 1627
	0x000009E8 : ujp		0x00000A38	// .\ControlPlay.h, ControlPlayInput, 93 - SAL : 1628
	0x000009EE : nop	// .\ControlPlay.h, ControlPlayInput, 93 - SAL : 1629
	0x000009F0 : rsp	// .\ControlPlay.h, ControlPlayInput, 93 - SAL : 1630
	0x000009F2 : pushmi		%%11	// .\ControlPlay.h, ControlPlayInput, 96 - SAL : 1633
	0x000009F6 : pushz		35 ( inputedString )	// .\ControlPlay.h, ControlPlayInput, 96 - SAL : 1634
	0x000009FA : calls		StrInput(179)	// .\ControlPlay.h, ControlPlayInput, 96 - SAL : 1635
	0x000009FE : ujp		0x00000A38	// .\ControlPlay.h, ControlPlayInput, 96 - SAL : 1636
	0x00000A04 : nop	// .\ControlPlay.h, ControlPlayInput, 96 - SAL : 1637
	0x00000A06 : rsp	// .\ControlPlay.h, ControlPlayInput, 96 - SAL : 1638
	0x00000A08 : pushz		39 ( errorType )	// .\ControlPlay.h, ControlPlayInput, 100 - SAL : 1642
	0x00000A0C : pushc		0	// .\ControlPlay.h, ControlPlayInput, 100 - SAL : 1643
	0x00000A10 : eq	// .\ControlPlay.h, ControlPlayInput, 100 - SAL : 1644
	0x00000A12 : fjp		0x00000A28	// .\ControlPlay.h, ControlPlayInput, 100 - SAL : 1645
	0x00000A18 : pushc		2	// .\ControlPlay.h, ControlPlayInput, 102 - SAL : 1647
	0x00000A1C : call		0x000002F6	// .\ControlPlay.h, ControlPlayInput, 102 - SAL : 1648
	0x00000A22 : ujp		0x00000A36	// .\ControlPlay.h, ControlPlayInput, 102 - SAL : 1649
	0x00000A28 : nop	// .\ControlPlay.h, ControlPlayInput, 102 - SAL : 1650
	0x00000A2A : pushmi		%%12	// .\ControlPlay.h, ControlPlayInput, 104 - SAL : 1653
	0x00000A2E : pushz		35 ( inputedString )	// .\ControlPlay.h, ControlPlayInput, 104 - SAL : 1654
	0x00000A32 : calls		StrInput(179)	// .\ControlPlay.h, ControlPlayInput, 104 - SAL : 1655
	0x00000A36 : nop	// .\ControlPlay.h, ControlPlayInput, 105 - SAL : 1657
	0x00000A38 : nop	// .\ControlPlay.h, ControlPlayInput, 105 - SAL : 1658
	0x00000A3A : ujp		0x00000A4E	// .\ControlPlay.h, ControlPlayInput, 105 - SAL : 1659
	0x00000A40 : nop	// .\ControlPlay.h, ControlPlayInput, 105 - SAL : 1660
	0x00000A42 : rsp	// .\ControlPlay.h, ControlPlayInput, 105 - SAL : 1661
	0x00000A44 : pushc		5	// .\ControlPlay.h, ControlPlayInput, 109 - SAL : 1666
	0x00000A48 : call		0x000002F6	// .\ControlPlay.h, ControlPlayInput, 109 - SAL : 1667
	0x00000A4E : nop	// .\ControlPlay.h, ControlPlayInput, 109 - SAL : 1668
	0x00000A50 : ret	// .\ControlPlay.h, ControlPlayInput, 111 - SAL : 1671
}


FUNCTION : ControlPlayNextquest()
{
	0x00000A52 : nop	// .\ControlPlay.h, ControlPlayNextquest, 173 - SAL : 1856
	0x00000A54 : popz		88 ( key of Function ControlPlayNextquest )	// .\ControlPlay.h, ControlPlayNextquest, 173 - SAL : 1857
	0x00000A58 : ssp	// .\ControlPlay.h, ControlPlayNextquest, 174 - SAL : 1859
	0x00000A5A : pushz		88 ( key of Function ControlPlayNextquest )	// .\ControlPlay.h, ControlPlayNextquest, 174 - SAL : 1860
	0x00000A5E : dup	// .\ControlPlay.h, ControlPlayNextquest, 174 - SAL : 1861
	0x00000A60 : pushc		16	// .\ControlPlay.h, ControlPlayNextquest, 174 - SAL : 1862
	0x00000A64 : eq	// .\ControlPlay.h, ControlPlayNextquest, 174 - SAL : 1863
	0x00000A66 : tjp		0x00000AAC	// .\ControlPlay.h, ControlPlayNextquest, 174 - SAL : 1864
	0x00000A6C : dup	// .\ControlPlay.h, ControlPlayNextquest, 174 - SAL : 1865
	0x00000A6E : pushc		18	// .\ControlPlay.h, ControlPlayNextquest, 174 - SAL : 1866
	0x00000A72 : eq	// .\ControlPlay.h, ControlPlayNextquest, 174 - SAL : 1867
	0x00000A74 : tjp		0x00000AAC	// .\ControlPlay.h, ControlPlayNextquest, 174 - SAL : 1868
	0x00000A7A : dup	// .\ControlPlay.h, ControlPlayNextquest, 174 - SAL : 1869
	0x00000A7C : pushc		17	// .\ControlPlay.h, ControlPlayNextquest, 174 - SAL : 1870
	0x00000A80 : eq	// .\ControlPlay.h, ControlPlayNextquest, 174 - SAL : 1871
	0x00000A82 : tjp		0x00000AAC	// .\ControlPlay.h, ControlPlayNextquest, 174 - SAL : 1872
	0x00000A88 : dup	// .\ControlPlay.h, ControlPlayNextquest, 174 - SAL : 1873
	0x00000A8A : pushc		19	// .\ControlPlay.h, ControlPlayNextquest, 174 - SAL : 1874
	0x00000A8E : eq	// .\ControlPlay.h, ControlPlayNextquest, 174 - SAL : 1875
	0x00000A90 : tjp		0x00000AAC	// .\ControlPlay.h, ControlPlayNextquest, 174 - SAL : 1876
	0x00000A96 : dup	// .\ControlPlay.h, ControlPlayNextquest, 174 - SAL : 1877
	0x00000A98 : pushc		20	// .\ControlPlay.h, ControlPlayNextquest, 174 - SAL : 1878
	0x00000A9C : eq	// .\ControlPlay.h, ControlPlayNextquest, 174 - SAL : 1879
	0x00000A9E : tjp		0x00000AE0	// .\ControlPlay.h, ControlPlayNextquest, 174 - SAL : 1880
	0x00000AA4 : rsp	// .\ControlPlay.h, ControlPlayNextquest, 174 - SAL : 1881
	0x00000AA6 : ujp		0x00000B32	// .\ControlPlay.h, ControlPlayNextquest, 174 - SAL : 1882
	0x00000AAC : nop	// .\ControlPlay.h, ControlPlayNextquest, 174 - SAL : 1883
	0x00000AAE : rsp	// .\ControlPlay.h, ControlPlayNextquest, 174 - SAL : 1884
	0x00000AB0 : pushz		38 ( selectedValue )	// .\ControlPlay.h, ControlPlayNextquest, 180 - SAL : 1890
	0x00000AB4 : pushc		0	// .\ControlPlay.h, ControlPlayNextquest, 180 - SAL : 1891
	0x00000AB8 : eq	// .\ControlPlay.h, ControlPlayNextquest, 180 - SAL : 1892
	0x00000ABA : fjp		0x00000ACE	// .\ControlPlay.h, ControlPlayNextquest, 180 - SAL : 1893
	0x00000AC0 : pushc		1	// .\ControlPlay.h, ControlPlayNextquest, 181 - SAL : 1895
	0x00000AC4 : popz		38 ( selectedValue )	// .\ControlPlay.h, ControlPlayNextquest, 181 - SAL : 1896
	0x00000AC8 : ujp		0x00000AD8	// .\ControlPlay.h, ControlPlayNextquest, 181 - SAL : 1897
	0x00000ACE : nop	// .\ControlPlay.h, ControlPlayNextquest, 181 - SAL : 1898
	0x00000AD0 : pushc		0	// .\ControlPlay.h, ControlPlayNextquest, 183 - SAL : 1901
	0x00000AD4 : popz		38 ( selectedValue )	// .\ControlPlay.h, ControlPlayNextquest, 183 - SAL : 1902
	0x00000AD8 : nop	// .\ControlPlay.h, ControlPlayNextquest, 184 - SAL : 1904
	0x00000ADA : ujp		0x00000B32	// .\ControlPlay.h, ControlPlayNextquest, 184 - SAL : 1905
	0x00000AE0 : nop	// .\ControlPlay.h, ControlPlayNextquest, 184 - SAL : 1906
	0x00000AE2 : rsp	// .\ControlPlay.h, ControlPlayNextquest, 184 - SAL : 1907
	0x00000AE4 : ssp	// .\ControlPlay.h, ControlPlayNextquest, 187 - SAL : 1911
	0x00000AE6 : pushz		38 ( selectedValue )	// .\ControlPlay.h, ControlPlayNextquest, 187 - SAL : 1912
	0x00000AEA : dup	// .\ControlPlay.h, ControlPlayNextquest, 187 - SAL : 1913
	0x00000AEC : pushc		0	// .\ControlPlay.h, ControlPlayNextquest, 187 - SAL : 1914
	0x00000AF0 : eq	// .\ControlPlay.h, ControlPlayNextquest, 187 - SAL : 1915
	0x00000AF2 : tjp		0x00000B0E	// .\ControlPlay.h, ControlPlayNextquest, 187 - SAL : 1916
	0x00000AF8 : dup	// .\ControlPlay.h, ControlPlayNextquest, 187 - SAL : 1917
	0x00000AFA : pushc		1	// .\ControlPlay.h, ControlPlayNextquest, 187 - SAL : 1918
	0x00000AFE : eq	// .\ControlPlay.h, ControlPlayNextquest, 187 - SAL : 1919
	0x00000B00 : tjp		0x00000B22	// .\ControlPlay.h, ControlPlayNextquest, 187 - SAL : 1920
	0x00000B06 : rsp	// .\ControlPlay.h, ControlPlayNextquest, 187 - SAL : 1921
	0x00000B08 : ujp		0x00000B30	// .\ControlPlay.h, ControlPlayNextquest, 187 - SAL : 1922
	0x00000B0E : nop	// .\ControlPlay.h, ControlPlayNextquest, 187 - SAL : 1923
	0x00000B10 : rsp	// .\ControlPlay.h, ControlPlayNextquest, 187 - SAL : 1924
	0x00000B12 : pushc		0	// .\ControlPlay.h, ControlPlayNextquest, 190 - SAL : 1927
	0x00000B16 : call		0x000002F6	// .\ControlPlay.h, ControlPlayNextquest, 190 - SAL : 1928
	0x00000B1C : ujp		0x00000B30	// .\ControlPlay.h, ControlPlayNextquest, 190 - SAL : 1929
	0x00000B22 : nop	// .\ControlPlay.h, ControlPlayNextquest, 190 - SAL : 1930
	0x00000B24 : rsp	// .\ControlPlay.h, ControlPlayNextquest, 190 - SAL : 1931
	0x00000B26 : pushc		3	// .\ControlPlay.h, ControlPlayNextquest, 194 - SAL : 1935
	0x00000B2A : call		0x000002F6	// .\ControlPlay.h, ControlPlayNextquest, 194 - SAL : 1936
	0x00000B30 : nop	// .\ControlPlay.h, ControlPlayNextquest, 194 - SAL : 1937
	0x00000B32 : nop	// .\ControlPlay.h, ControlPlayNextquest, 194 - SAL : 1938
	0x00000B34 : ret	// .\ControlPlay.h, ControlPlayNextquest, 197 - SAL : 1942
}


FUNCTION : ControlPlayOver()
{
	0x00000B36 : nop	// .\ControlPlay.h, ControlPlayOver, 133 - SAL : 1724
	0x00000B38 : popz		85 ( key of Function ControlPlayOver )	// .\ControlPlay.h, ControlPlayOver, 133 - SAL : 1725
	0x00000B3C : ssp	// .\ControlPlay.h, ControlPlayOver, 134 - SAL : 1727
	0x00000B3E : pushz		85 ( key of Function ControlPlayOver )	// .\ControlPlay.h, ControlPlayOver, 134 - SAL : 1728
	0x00000B42 : dup	// .\ControlPlay.h, ControlPlayOver, 134 - SAL : 1729
	0x00000B44 : pushc		20	// .\ControlPlay.h, ControlPlayOver, 134 - SAL : 1730
	0x00000B48 : eq	// .\ControlPlay.h, ControlPlayOver, 134 - SAL : 1731
	0x00000B4A : tjp		0x00000B58	// .\ControlPlay.h, ControlPlayOver, 134 - SAL : 1732
	0x00000B50 : rsp	// .\ControlPlay.h, ControlPlayOver, 134 - SAL : 1733
	0x00000B52 : ujp		0x00000B66	// .\ControlPlay.h, ControlPlayOver, 134 - SAL : 1734
	0x00000B58 : nop	// .\ControlPlay.h, ControlPlayOver, 134 - SAL : 1735
	0x00000B5A : rsp	// .\ControlPlay.h, ControlPlayOver, 134 - SAL : 1736
	0x00000B5C : pushc		4	// .\ControlPlay.h, ControlPlayOver, 136 - SAL : 1739
	0x00000B60 : call		0x000002F6	// .\ControlPlay.h, ControlPlayOver, 136 - SAL : 1740
	0x00000B66 : nop	// .\ControlPlay.h, ControlPlayOver, 136 - SAL : 1741
	0x00000B68 : ret	// .\ControlPlay.h, ControlPlayOver, 138 - SAL : 1744
}


FUNCTION : ControlPlayReady()
{
	0x00000B6A : nop	// .\ControlPlay.h, ControlPlayReady, 69 - SAL : 1531
	0x00000B6C : popz		82 ( key of Function ControlPlayReady )	// .\ControlPlay.h, ControlPlayReady, 69 - SAL : 1532
	0x00000B70 : ssp	// .\ControlPlay.h, ControlPlayReady, 70 - SAL : 1534
	0x00000B72 : pushz		82 ( key of Function ControlPlayReady )	// .\ControlPlay.h, ControlPlayReady, 70 - SAL : 1535
	0x00000B76 : dup	// .\ControlPlay.h, ControlPlayReady, 70 - SAL : 1536
	0x00000B78 : pushc		20	// .\ControlPlay.h, ControlPlayReady, 70 - SAL : 1537
	0x00000B7C : eq	// .\ControlPlay.h, ControlPlayReady, 70 - SAL : 1538
	0x00000B7E : tjp		0x00000B9A	// .\ControlPlay.h, ControlPlayReady, 70 - SAL : 1539
	0x00000B84 : dup	// .\ControlPlay.h, ControlPlayReady, 70 - SAL : 1540
	0x00000B86 : pushc		13	// .\ControlPlay.h, ControlPlayReady, 70 - SAL : 1541
	0x00000B8A : eq	// .\ControlPlay.h, ControlPlayReady, 70 - SAL : 1542
	0x00000B8C : tjp		0x00000B9A	// .\ControlPlay.h, ControlPlayReady, 70 - SAL : 1543
	0x00000B92 : rsp	// .\ControlPlay.h, ControlPlayReady, 70 - SAL : 1544
	0x00000B94 : ujp		0x00000BA8	// .\ControlPlay.h, ControlPlayReady, 70 - SAL : 1545
	0x00000B9A : nop	// .\ControlPlay.h, ControlPlayReady, 70 - SAL : 1546
	0x00000B9C : rsp	// .\ControlPlay.h, ControlPlayReady, 70 - SAL : 1547
	0x00000B9E : pushc		1	// .\ControlPlay.h, ControlPlayReady, 74 - SAL : 1551
	0x00000BA2 : call		0x000002F6	// .\ControlPlay.h, ControlPlayReady, 74 - SAL : 1552
	0x00000BA8 : nop	// .\ControlPlay.h, ControlPlayReady, 74 - SAL : 1553
	0x00000BAA : ret	// .\ControlPlay.h, ControlPlayReady, 76 - SAL : 1556
}


FUNCTION : ControlPlayRecord()
{
	0x00000BAC : nop	// .\ControlPlay.h, ControlPlayRecord, 140 - SAL : 1746
	0x00000BAE : popz		86 ( key of Function ControlPlayRecord )	// .\ControlPlay.h, ControlPlayRecord, 140 - SAL : 1747
	0x00000BB2 : ssp	// .\ControlPlay.h, ControlPlayRecord, 141 - SAL : 1749
	0x00000BB4 : pushz		86 ( key of Function ControlPlayRecord )	// .\ControlPlay.h, ControlPlayRecord, 141 - SAL : 1750
	0x00000BB8 : dup	// .\ControlPlay.h, ControlPlayRecord, 141 - SAL : 1751
	0x00000BBA : pushc		20	// .\ControlPlay.h, ControlPlayRecord, 141 - SAL : 1752
	0x00000BBE : eq	// .\ControlPlay.h, ControlPlayRecord, 141 - SAL : 1753
	0x00000BC0 : tjp		0x00000BCE	// .\ControlPlay.h, ControlPlayRecord, 141 - SAL : 1754
	0x00000BC6 : rsp	// .\ControlPlay.h, ControlPlayRecord, 141 - SAL : 1755
	0x00000BC8 : ujp		0x00000BDC	// .\ControlPlay.h, ControlPlayRecord, 141 - SAL : 1756
	0x00000BCE : nop	// .\ControlPlay.h, ControlPlayRecord, 141 - SAL : 1757
	0x00000BD0 : rsp	// .\ControlPlay.h, ControlPlayRecord, 141 - SAL : 1758
	0x00000BD2 : pushc		2	// .\ControlPlay.h, ControlPlayRecord, 143 - SAL : 1761
	0x00000BD6 : call		0x00000236	// .\ControlPlay.h, ControlPlayRecord, 143 - SAL : 1762
	0x00000BDC : nop	// .\ControlPlay.h, ControlPlayRecord, 143 - SAL : 1763
	0x00000BDE : ret	// .\ControlPlay.h, ControlPlayRecord, 145 - SAL : 1766
}


FUNCTION : ControlRank()
{
	0x00000BE0 : nop	// .\ControlNumberGuess.h, ControlRank, 70 - SAL : 2606
	0x00000BE2 : popz		96 ( key of Function ControlRank )	// .\ControlNumberGuess.h, ControlRank, 70 - SAL : 2607
	0x00000BE6 : ssp	// .\ControlNumberGuess.h, ControlRank, 71 - SAL : 2609
	0x00000BE8 : pushz		96 ( key of Function ControlRank )	// .\ControlNumberGuess.h, ControlRank, 71 - SAL : 2610
	0x00000BEC : dup	// .\ControlNumberGuess.h, ControlRank, 71 - SAL : 2611
	0x00000BEE : pushc		20	// .\ControlNumberGuess.h, ControlRank, 71 - SAL : 2612
	0x00000BF2 : eq	// .\ControlNumberGuess.h, ControlRank, 71 - SAL : 2613
	0x00000BF4 : tjp		0x00000C10	// .\ControlNumberGuess.h, ControlRank, 71 - SAL : 2614
	0x00000BFA : dup	// .\ControlNumberGuess.h, ControlRank, 71 - SAL : 2615
	0x00000BFC : pushc		13	// .\ControlNumberGuess.h, ControlRank, 71 - SAL : 2616
	0x00000C00 : eq	// .\ControlNumberGuess.h, ControlRank, 71 - SAL : 2617
	0x00000C02 : tjp		0x00000C10	// .\ControlNumberGuess.h, ControlRank, 71 - SAL : 2618
	0x00000C08 : rsp	// .\ControlNumberGuess.h, ControlRank, 71 - SAL : 2619
	0x00000C0A : ujp		0x00000C1E	// .\ControlNumberGuess.h, ControlRank, 71 - SAL : 2620
	0x00000C10 : nop	// .\ControlNumberGuess.h, ControlRank, 71 - SAL : 2621
	0x00000C12 : rsp	// .\ControlNumberGuess.h, ControlRank, 71 - SAL : 2622
	0x00000C14 : pushc		2	// .\ControlNumberGuess.h, ControlRank, 75 - SAL : 2626
	0x00000C18 : call		0x00000236	// .\ControlNumberGuess.h, ControlRank, 75 - SAL : 2627
	0x00000C1E : nop	// .\ControlNumberGuess.h, ControlRank, 75 - SAL : 2628
	0x00000C20 : ret	// .\ControlNumberGuess.h, ControlRank, 77 - SAL : 2631
}


FUNCTION : DateToInt()
{
	0x00000C22 : nop	// .\Functions.h, DateToInt, 21 - SAL : 390
	0x00000C24 : popz		54 ( sourceDate of Function DateToInt )	// .\Functions.h, DateToInt, 21 - SAL : 391
	0x00000C28 : pushc		0	// .\Functions.h, DateToInt, 22 - SAL : 393
	0x00000C2C : popz		55 ( result of Function DateToInt )	// .\Functions.h, DateToInt, 22 - SAL : 394
	0x00000C30 : pushz		55 ( result of Function DateToInt )	// .\Functions.h, DateToInt, 24 - SAL : 396
	0x00000C34 : pushz		54 ( sourceDate of Function DateToInt )	// .\Functions.h, DateToInt, 24 - SAL : 397
	0x00000C38 : ixa	// .\Functions.h, DateToInt, 24 - SAL : 398
	0x00000C3A : pushc		12	// .\Functions.h, DateToInt, 24 - SAL : 399
	0x00000C3E : mult	// .\Functions.h, DateToInt, 24 - SAL : 400
	0x00000C40 : pushc		31	// .\Functions.h, DateToInt, 24 - SAL : 401
	0x00000C44 : mult	// .\Functions.h, DateToInt, 24 - SAL : 402
	0x00000C46 : add	// .\Functions.h, DateToInt, 24 - SAL : 403
	0x00000C48 : popz		55 ( result of Function DateToInt )	// .\Functions.h, DateToInt, 24 - SAL : 404
	0x00000C4C : pushz		55 ( result of Function DateToInt )	// .\Functions.h, DateToInt, 25 - SAL : 406
	0x00000C50 : pushz		54 ( sourceDate of Function DateToInt )	// .\Functions.h, DateToInt, 25 - SAL : 407
	0x00000C54 : pushc		1	// .\Functions.h, DateToInt, 25 - SAL : 408
	0x00000C58 : add	// .\Functions.h, DateToInt, 25 - SAL : 409
	0x00000C5A : ixa	// .\Functions.h, DateToInt, 25 - SAL : 410
	0x00000C5C : pushc		31	// .\Functions.h, DateToInt, 25 - SAL : 411
	0x00000C60 : mult	// .\Functions.h, DateToInt, 25 - SAL : 412
	0x00000C62 : add	// .\Functions.h, DateToInt, 25 - SAL : 413
	0x00000C64 : popz		55 ( result of Function DateToInt )	// .\Functions.h, DateToInt, 25 - SAL : 414
	0x00000C68 : pushz		55 ( result of Function DateToInt )	// .\Functions.h, DateToInt, 26 - SAL : 416
	0x00000C6C : pushz		54 ( sourceDate of Function DateToInt )	// .\Functions.h, DateToInt, 26 - SAL : 417
	0x00000C70 : pushc		2	// .\Functions.h, DateToInt, 26 - SAL : 418
	0x00000C74 : add	// .\Functions.h, DateToInt, 26 - SAL : 419
	0x00000C76 : ixa	// .\Functions.h, DateToInt, 26 - SAL : 420
	0x00000C78 : add	// .\Functions.h, DateToInt, 26 - SAL : 421
	0x00000C7A : popz		55 ( result of Function DateToInt )	// .\Functions.h, DateToInt, 26 - SAL : 422
	0x00000C7E : pushz		55 ( result of Function DateToInt )	// .\Functions.h, DateToInt, 28 - SAL : 424
	0x00000C82 : ret	// .\Functions.h, DateToInt, 28 - SAL : 425
}


FUNCTION : DrawBack1()
{
	0x00000C84 : nop	// .\Design.h, DrawBack1, 24 - SAL : 561
	0x00000C86 : pushc		20	// .\Design.h, DrawBack1, 25 - SAL : 563
	0x00000C8A : calls		SetColor(38)	// .\Design.h, DrawBack1, 25 - SAL : 564
	0x00000C8E : pushc		0	// .\Design.h, DrawBack1, 26 - SAL : 566
	0x00000C92 : pushc		0	// .\Design.h, DrawBack1, 26 - SAL : 567
	0x00000C96 : pushc		240	// .\Design.h, DrawBack1, 26 - SAL : 568
	0x00000C9A : pushc		120	// .\Design.h, DrawBack1, 26 - SAL : 569
	0x00000C9E : calls		FillRect(70)	// .\Design.h, DrawBack1, 26 - SAL : 570
	0x00000CA2 : pushc		0	// .\Design.h, DrawBack1, 27 - SAL : 572
	0x00000CA6 : pushc		160	// .\Design.h, DrawBack1, 27 - SAL : 573
	0x00000CAA : pushc		240	// .\Design.h, DrawBack1, 27 - SAL : 574
	0x00000CAE : pushc		320	// .\Design.h, DrawBack1, 27 - SAL : 575
	0x00000CB2 : calls		FillRect(70)	// .\Design.h, DrawBack1, 27 - SAL : 576
	0x00000CB6 : pushc		0	// .\Design.h, DrawBack1, 28 - SAL : 578
	0x00000CBA : calls		SetColor(38)	// .\Design.h, DrawBack1, 28 - SAL : 579
	0x00000CBE : pushc		0	// .\Design.h, DrawBack1, 29 - SAL : 581
	0x00000CC2 : pushc		240	// .\Design.h, DrawBack1, 29 - SAL : 582
	0x00000CC6 : pushc		117	// .\Design.h, DrawBack1, 29 - SAL : 583
	0x00000CCA : calls		DrawHLine(67)	// .\Design.h, DrawBack1, 29 - SAL : 584
	0x00000CCE : pushc		0	// .\Design.h, DrawBack1, 30 - SAL : 586
	0x00000CD2 : pushc		240	// .\Design.h, DrawBack1, 30 - SAL : 587
	0x00000CD6 : pushc		163	// .\Design.h, DrawBack1, 30 - SAL : 588
	0x00000CDA : calls		DrawHLine(67)	// .\Design.h, DrawBack1, 30 - SAL : 589
	0x00000CDE : ret	// .\Design.h, DrawBack1, 31 - SAL : 591
}


FUNCTION : DrawBack2()
{
	0x00000CE0 : nop	// .\Design.h, DrawBack2, 33 - SAL : 593
	0x00000CE2 : pushc		20	// .\Design.h, DrawBack2, 34 - SAL : 595
	0x00000CE6 : calls		SetColor(38)	// .\Design.h, DrawBack2, 34 - SAL : 596
	0x00000CEA : pushc		0	// .\Design.h, DrawBack2, 35 - SAL : 598
	0x00000CEE : pushc		0	// .\Design.h, DrawBack2, 35 - SAL : 599
	0x00000CF2 : pushc		240	// .\Design.h, DrawBack2, 35 - SAL : 600
	0x00000CF6 : pushc		120	// .\Design.h, DrawBack2, 35 - SAL : 601
	0x00000CFA : calls		FillRect(70)	// .\Design.h, DrawBack2, 35 - SAL : 602
	0x00000CFE : pushc		0	// .\Design.h, DrawBack2, 36 - SAL : 604
	0x00000D02 : pushc		160	// .\Design.h, DrawBack2, 36 - SAL : 605
	0x00000D06 : pushc		240	// .\Design.h, DrawBack2, 36 - SAL : 606
	0x00000D0A : pushc		320	// .\Design.h, DrawBack2, 36 - SAL : 607
	0x00000D0E : calls		FillRect(70)	// .\Design.h, DrawBack2, 36 - SAL : 608
	0x00000D12 : ret	// .\Design.h, DrawBack2, 37 - SAL : 610
}


FUNCTION : DrawBack3()
{
	0x00000D14 : nop	// .\Design.h, DrawBack3, 39 - SAL : 612
	0x00000D16 : pushc		20	// .\Design.h, DrawBack3, 40 - SAL : 614
	0x00000D1A : calls		SetColor(38)	// .\Design.h, DrawBack3, 40 - SAL : 615
	0x00000D1E : pushc		0	// .\Design.h, DrawBack3, 41 - SAL : 617
	0x00000D22 : pushc		0	// .\Design.h, DrawBack3, 41 - SAL : 618
	0x00000D26 : pushc		240	// .\Design.h, DrawBack3, 41 - SAL : 619
	0x00000D2A : pushc		50	// .\Design.h, DrawBack3, 41 - SAL : 620
	0x00000D2E : calls		FillRect(70)	// .\Design.h, DrawBack3, 41 - SAL : 621
	0x00000D32 : pushc		0	// .\Design.h, DrawBack3, 42 - SAL : 623
	0x00000D36 : pushc		250	// .\Design.h, DrawBack3, 42 - SAL : 624
	0x00000D3A : pushc		240	// .\Design.h, DrawBack3, 42 - SAL : 625
	0x00000D3E : pushc		320	// .\Design.h, DrawBack3, 42 - SAL : 626
	0x00000D42 : calls		FillRect(70)	// .\Design.h, DrawBack3, 42 - SAL : 627
	0x00000D46 : ret	// .\Design.h, DrawBack3, 43 - SAL : 629
}


FUNCTION : DrawBlueBox()
{
	0x00000D48 : nop	// .\Design.h, DrawBlueBox, 3 - SAL : 470
	0x00000D4A : popz		62 ( y2 of Function DrawBlueBox )	// .\Design.h, DrawBlueBox, 3 - SAL : 471
	0x00000D4E : popz		61 ( x2 of Function DrawBlueBox )	// .\Design.h, DrawBlueBox, 3 - SAL : 472
	0x00000D52 : popz		60 ( y1 of Function DrawBlueBox )	// .\Design.h, DrawBlueBox, 3 - SAL : 473
	0x00000D56 : popz		59 ( x1 of Function DrawBlueBox )	// .\Design.h, DrawBlueBox, 3 - SAL : 474
	0x00000D5A : pushc		20	// .\Design.h, DrawBlueBox, 4 - SAL : 477
	0x00000D5E : calls		SetColor(38)	// .\Design.h, DrawBlueBox, 4 - SAL : 478
	0x00000D62 : pushz		59 ( x1 of Function DrawBlueBox )	// .\Design.h, DrawBlueBox, 5 - SAL : 480
	0x00000D66 : pushz		60 ( y1 of Function DrawBlueBox )	// .\Design.h, DrawBlueBox, 5 - SAL : 481
	0x00000D6A : pushz		61 ( x2 of Function DrawBlueBox )	// .\Design.h, DrawBlueBox, 5 - SAL : 482
	0x00000D6E : pushz		62 ( y2 of Function DrawBlueBox )	// .\Design.h, DrawBlueBox, 5 - SAL : 483
	0x00000D72 : calls		FillRect(70)	// .\Design.h, DrawBlueBox, 5 - SAL : 484
	0x00000D76 : pushc		0	// .\Design.h, DrawBlueBox, 6 - SAL : 486
	0x00000D7A : calls		SetColor(38)	// .\Design.h, DrawBlueBox, 6 - SAL : 487
	0x00000D7E : pushz		59 ( x1 of Function DrawBlueBox )	// .\Design.h, DrawBlueBox, 7 - SAL : 489
	0x00000D82 : pushc		5	// .\Design.h, DrawBlueBox, 7 - SAL : 490
	0x00000D86 : add	// .\Design.h, DrawBlueBox, 7 - SAL : 491
	0x00000D88 : pushz		60 ( y1 of Function DrawBlueBox )	// .\Design.h, DrawBlueBox, 7 - SAL : 492
	0x00000D8C : pushc		5	// .\Design.h, DrawBlueBox, 7 - SAL : 493
	0x00000D90 : add	// .\Design.h, DrawBlueBox, 7 - SAL : 494
	0x00000D92 : pushz		61 ( x2 of Function DrawBlueBox )	// .\Design.h, DrawBlueBox, 7 - SAL : 495
	0x00000D96 : pushc		5	// .\Design.h, DrawBlueBox, 7 - SAL : 496
	0x00000D9A : sub	// .\Design.h, DrawBlueBox, 7 - SAL : 497
	0x00000D9C : pushz		62 ( y2 of Function DrawBlueBox )	// .\Design.h, DrawBlueBox, 7 - SAL : 498
	0x00000DA0 : pushc		5	// .\Design.h, DrawBlueBox, 7 - SAL : 499
	0x00000DA4 : sub	// .\Design.h, DrawBlueBox, 7 - SAL : 500
	0x00000DA6 : calls		FillRect(70)	// .\Design.h, DrawBlueBox, 7 - SAL : 501
	0x00000DAA : ret	// .\Design.h, DrawBlueBox, 8 - SAL : 503
}


FUNCTION : DrawGame()
{
	0x00000DAC : nop	// .\DrawNumberGuess.h, DrawGame, 3 - SAL : 2742
	0x00000DAE : ssp	// .\DrawNumberGuess.h, DrawGame, 4 - SAL : 2745
	0x00000DB0 : pushz		22 ( currentMode )	// .\DrawNumberGuess.h, DrawGame, 4 - SAL : 2746
	0x00000DB4 : dup	// .\DrawNumberGuess.h, DrawGame, 4 - SAL : 2747
	0x00000DB6 : pushc		1	// .\DrawNumberGuess.h, DrawGame, 4 - SAL : 2748
	0x00000DBA : eq	// .\DrawNumberGuess.h, DrawGame, 4 - SAL : 2749
	0x00000DBC : tjp		0x00000E00	// .\DrawNumberGuess.h, DrawGame, 4 - SAL : 2750
	0x00000DC2 : dup	// .\DrawNumberGuess.h, DrawGame, 4 - SAL : 2751
	0x00000DC4 : pushc		2	// .\DrawNumberGuess.h, DrawGame, 4 - SAL : 2752
	0x00000DC8 : eq	// .\DrawNumberGuess.h, DrawGame, 4 - SAL : 2753
	0x00000DCA : tjp		0x00000E10	// .\DrawNumberGuess.h, DrawGame, 4 - SAL : 2754
	0x00000DD0 : dup	// .\DrawNumberGuess.h, DrawGame, 4 - SAL : 2755
	0x00000DD2 : pushc		30	// .\DrawNumberGuess.h, DrawGame, 4 - SAL : 2756
	0x00000DD6 : eq	// .\DrawNumberGuess.h, DrawGame, 4 - SAL : 2757
	0x00000DD8 : tjp		0x00000E20	// .\DrawNumberGuess.h, DrawGame, 4 - SAL : 2758
	0x00000DDE : dup	// .\DrawNumberGuess.h, DrawGame, 4 - SAL : 2759
	0x00000DE0 : pushc		31	// .\DrawNumberGuess.h, DrawGame, 4 - SAL : 2760
	0x00000DE4 : eq	// .\DrawNumberGuess.h, DrawGame, 4 - SAL : 2761
	0x00000DE6 : tjp		0x00000E30	// .\DrawNumberGuess.h, DrawGame, 4 - SAL : 2762
	0x00000DEC : dup	// .\DrawNumberGuess.h, DrawGame, 4 - SAL : 2763
	0x00000DEE : pushc		32	// .\DrawNumberGuess.h, DrawGame, 4 - SAL : 2764
	0x00000DF2 : eq	// .\DrawNumberGuess.h, DrawGame, 4 - SAL : 2765
	0x00000DF4 : tjp		0x00000E40	// .\DrawNumberGuess.h, DrawGame, 4 - SAL : 2766
	0x00000DFA : ujp		0x00000E50	// .\DrawNumberGuess.h, DrawGame, 4 - SAL : 2767
	0x00000E00 : nop	// .\DrawNumberGuess.h, DrawGame, 4 - SAL : 2768
	0x00000E02 : rsp	// .\DrawNumberGuess.h, DrawGame, 4 - SAL : 2769
	0x00000E04 : call		0x00000EDE	// .\DrawNumberGuess.h, DrawGame, 6 - SAL : 2772
	0x00000E0A : ujp		0x00000E5E	// .\DrawNumberGuess.h, DrawGame, 6 - SAL : 2773
	0x00000E10 : nop	// .\DrawNumberGuess.h, DrawGame, 6 - SAL : 2774
	0x00000E12 : rsp	// .\DrawNumberGuess.h, DrawGame, 6 - SAL : 2775
	0x00000E14 : call		0x00000F2C	// .\DrawNumberGuess.h, DrawGame, 9 - SAL : 2779
	0x00000E1A : ujp		0x00000E5E	// .\DrawNumberGuess.h, DrawGame, 9 - SAL : 2780
	0x00000E20 : nop	// .\DrawNumberGuess.h, DrawGame, 9 - SAL : 2781
	0x00000E22 : rsp	// .\DrawNumberGuess.h, DrawGame, 9 - SAL : 2782
	0x00000E24 : call		0x0000113C	// .\DrawNumberGuess.h, DrawGame, 12 - SAL : 2786
	0x00000E2A : ujp		0x00000E5E	// .\DrawNumberGuess.h, DrawGame, 12 - SAL : 2787
	0x00000E30 : nop	// .\DrawNumberGuess.h, DrawGame, 12 - SAL : 2788
	0x00000E32 : rsp	// .\DrawNumberGuess.h, DrawGame, 12 - SAL : 2789
	0x00000E34 : call		0x0000176E	// .\DrawNumberGuess.h, DrawGame, 15 - SAL : 2793
	0x00000E3A : ujp		0x00000E5E	// .\DrawNumberGuess.h, DrawGame, 15 - SAL : 2794
	0x00000E40 : nop	// .\DrawNumberGuess.h, DrawGame, 15 - SAL : 2795
	0x00000E42 : rsp	// .\DrawNumberGuess.h, DrawGame, 15 - SAL : 2796
	0x00000E44 : call		0x00000FFE	// .\DrawNumberGuess.h, DrawGame, 18 - SAL : 2800
	0x00000E4A : ujp		0x00000E5E	// .\DrawNumberGuess.h, DrawGame, 18 - SAL : 2801
	0x00000E50 : nop	// .\DrawNumberGuess.h, DrawGame, 18 - SAL : 2802
	0x00000E52 : rsp	// .\DrawNumberGuess.h, DrawGame, 18 - SAL : 2803
	0x00000E54 : pushc		1	// .\DrawNumberGuess.h, DrawGame, 21 - SAL : 2807
	0x00000E58 : call		0x00000236	// .\DrawNumberGuess.h, DrawGame, 21 - SAL : 2808
	0x00000E5E : nop	// .\DrawNumberGuess.h, DrawGame, 21 - SAL : 2809
	0x00000E60 : ret	// .\DrawNumberGuess.h, DrawGame, 23 - SAL : 2812
}


FUNCTION : DrawHistory()
{
	0x00000E62 : nop	// .\Design.h, DrawHistory, 59 - SAL : 675
	0x00000E64 : popz		68 ( historyNum of Function DrawHistory )	// .\Design.h, DrawHistory, 59 - SAL : 676
	0x00000E68 : popz		67 ( rowIndex of Function DrawHistory )	// .\Design.h, DrawHistory, 59 - SAL : 677
	0x00000E6C : pushc		165	// .\Design.h, DrawHistory, 60 - SAL : 679
	0x00000E70 : pushc		115	// .\Design.h, DrawHistory, 60 - SAL : 680
	0x00000E74 : pushc		15	// .\Design.h, DrawHistory, 60 - SAL : 681
	0x00000E78 : pushz		67 ( rowIndex of Function DrawHistory )	// .\Design.h, DrawHistory, 60 - SAL : 682
	0x00000E7C : mult	// .\Design.h, DrawHistory, 60 - SAL : 683
	0x00000E7E : add	// .\Design.h, DrawHistory, 60 - SAL : 684
	0x00000E80 : pushz		68 ( historyNum of Function DrawHistory )	// .\Design.h, DrawHistory, 60 - SAL : 685
	0x00000E84 : call		0x00000F00	// .\Design.h, DrawHistory, 60 - SAL : 686
	0x00000E8A : pushz		68 ( historyNum of Function DrawHistory )	// .\Design.h, DrawHistory, 61 - SAL : 688
	0x00000E8E : pushz		26 ( questNumber )	// .\Design.h, DrawHistory, 61 - SAL : 689
	0x00000E92 : gt	// .\Design.h, DrawHistory, 61 - SAL : 690
	0x00000E94 : fjp		0x00000EBC	// .\Design.h, DrawHistory, 61 - SAL : 691
	0x00000E9A : pushc		155	// .\Design.h, DrawHistory, 62 - SAL : 693
	0x00000E9E : pushc		115	// .\Design.h, DrawHistory, 62 - SAL : 694
	0x00000EA2 : pushc		15	// .\Design.h, DrawHistory, 62 - SAL : 695
	0x00000EA6 : pushz		67 ( rowIndex of Function DrawHistory )	// .\Design.h, DrawHistory, 62 - SAL : 696
	0x00000EAA : mult	// .\Design.h, DrawHistory, 62 - SAL : 697
	0x00000EAC : add	// .\Design.h, DrawHistory, 62 - SAL : 698
	0x00000EAE : pushmi		%%9	// .\Design.h, DrawHistory, 62 - SAL : 699
	0x00000EB2 : calls		DrawStr(85)	// .\Design.h, DrawHistory, 62 - SAL : 700
	0x00000EB6 : ujp		0x00000EDA	// .\Design.h, DrawHistory, 62 - SAL : 701
	0x00000EBC : nop	// .\Design.h, DrawHistory, 62 - SAL : 702
	0x00000EBE : pushc		155	// .\Design.h, DrawHistory, 64 - SAL : 705
	0x00000EC2 : pushc		115	// .\Design.h, DrawHistory, 64 - SAL : 706
	0x00000EC6 : pushc		15	// .\Design.h, DrawHistory, 64 - SAL : 707
	0x00000ECA : pushz		67 ( rowIndex of Function DrawHistory )	// .\Design.h, DrawHistory, 64 - SAL : 708
	0x00000ECE : mult	// .\Design.h, DrawHistory, 64 - SAL : 709
	0x00000ED0 : add	// .\Design.h, DrawHistory, 64 - SAL : 710
	0x00000ED2 : pushmi		%%10	// .\Design.h, DrawHistory, 64 - SAL : 711
	0x00000ED6 : calls		DrawStr(85)	// .\Design.h, DrawHistory, 64 - SAL : 712
	0x00000EDA : nop	// .\Design.h, DrawHistory, 65 - SAL : 714
	0x00000EDC : ret	// .\Design.h, DrawHistory, 66 - SAL : 716
}


FUNCTION : DrawIndex()
{
	0x00000EDE : nop	// .\DrawNumberGuess.h, DrawIndex, 25 - SAL : 2814
	0x00000EE0 : call		0x00000C84	// .\DrawNumberGuess.h, DrawIndex, 26 - SAL : 2816
	0x00000EE6 : pushc		1	// .\DrawNumberGuess.h, DrawIndex, 27 - SAL : 2818
	0x00000EEA : calls		SetFontAlign(43)	// .\DrawNumberGuess.h, DrawIndex, 27 - SAL : 2819
	0x00000EEE : pushc		120	// .\DrawNumberGuess.h, DrawIndex, 28 - SAL : 2821
	0x00000EF2 : pushc		135	// .\DrawNumberGuess.h, DrawIndex, 28 - SAL : 2822
	0x00000EF6 : pushc		0	// .\DrawNumberGuess.h, DrawIndex, 28 - SAL : 2823
	0x00000EFA : calls		DrawStr(85)	// .\DrawNumberGuess.h, DrawIndex, 28 - SAL : 2824
	0x00000EFE : ret	// .\DrawNumberGuess.h, DrawIndex, 29 - SAL : 2826
}


FUNCTION : DrawInt()
{
	0x00000F00 : nop	// .\Functions.h, DrawInt, 4 - SAL : 340
	0x00000F02 : popz		48 ( value of Function DrawInt )	// .\Functions.h, DrawInt, 4 - SAL : 341
	0x00000F06 : popz		47 ( y of Function DrawInt )	// .\Functions.h, DrawInt, 4 - SAL : 342
	0x00000F0A : popz		46 ( x of Function DrawInt )	// .\Functions.h, DrawInt, 4 - SAL : 343
	0x00000F0E : pushz		49 ( str of Function DrawInt )	// .\Functions.h, DrawInt, 6 - SAL : 347
	0x00000F12 : pushz		48 ( value of Function DrawInt )	// .\Functions.h, DrawInt, 6 - SAL : 348
	0x00000F16 : calls		IntToAscii(168)	// .\Functions.h, DrawInt, 6 - SAL : 349
	0x00000F1A : pushz		46 ( x of Function DrawInt )	// .\Functions.h, DrawInt, 7 - SAL : 351
	0x00000F1E : pushz		47 ( y of Function DrawInt )	// .\Functions.h, DrawInt, 7 - SAL : 352
	0x00000F22 : pushz		49 ( str of Function DrawInt )	// .\Functions.h, DrawInt, 7 - SAL : 353
	0x00000F26 : calls		DrawStr(85)	// .\Functions.h, DrawInt, 7 - SAL : 354
	0x00000F2A : ret	// .\Functions.h, DrawInt, 8 - SAL : 356
}


FUNCTION : DrawMain()
{
	0x00000F2C : nop	// .\DrawNumberGuess.h, DrawMain, 31 - SAL : 2828
	0x00000F2E : call		0x00000D14	// .\DrawNumberGuess.h, DrawMain, 32 - SAL : 2830
	0x00000F34 : pushc		1	// .\DrawNumberGuess.h, DrawMain, 33 - SAL : 2832
	0x00000F38 : calls		SetFontAlign(43)	// .\DrawNumberGuess.h, DrawMain, 33 - SAL : 2833
	0x00000F3C : pushc		120	// .\DrawNumberGuess.h, DrawMain, 34 - SAL : 2835
	0x00000F40 : pushc		100	// .\DrawNumberGuess.h, DrawMain, 34 - SAL : 2836
	0x00000F44 : pushc		0	// .\DrawNumberGuess.h, DrawMain, 34 - SAL : 2837
	0x00000F48 : calls		DrawStr(85)	// .\DrawNumberGuess.h, DrawMain, 34 - SAL : 2838
	0x00000F4C : pushc		120	// .\DrawNumberGuess.h, DrawMain, 35 - SAL : 2840
	0x00000F50 : pushc		150	// .\DrawNumberGuess.h, DrawMain, 35 - SAL : 2841
	0x00000F54 : pushc		0	// .\DrawNumberGuess.h, DrawMain, 35 - SAL : 2842
	0x00000F58 : ldrz		21 ( LABEL_MENU )	// .\DrawNumberGuess.h, DrawMain, 35 - SAL : 2843
	0x00000F5C : add	// .\DrawNumberGuess.h, DrawMain, 35 - SAL : 2844
	0x00000F5E : ixa	// .\DrawNumberGuess.h, DrawMain, 35 - SAL : 2845
	0x00000F60 : calls		DrawStr(85)	// .\DrawNumberGuess.h, DrawMain, 35 - SAL : 2846
	0x00000F64 : pushc		120	// .\DrawNumberGuess.h, DrawMain, 36 - SAL : 2848
	0x00000F68 : pushc		170	// .\DrawNumberGuess.h, DrawMain, 36 - SAL : 2849
	0x00000F6C : pushc		1	// .\DrawNumberGuess.h, DrawMain, 36 - SAL : 2850
	0x00000F70 : ldrz		21 ( LABEL_MENU )	// .\DrawNumberGuess.h, DrawMain, 36 - SAL : 2851
	0x00000F74 : add	// .\DrawNumberGuess.h, DrawMain, 36 - SAL : 2852
	0x00000F76 : ixa	// .\DrawNumberGuess.h, DrawMain, 36 - SAL : 2853
	0x00000F78 : calls		DrawStr(85)	// .\DrawNumberGuess.h, DrawMain, 36 - SAL : 2854
	0x00000F7C : pushc		120	// .\DrawNumberGuess.h, DrawMain, 37 - SAL : 2856
	0x00000F80 : pushc		190	// .\DrawNumberGuess.h, DrawMain, 37 - SAL : 2857
	0x00000F84 : pushc		2	// .\DrawNumberGuess.h, DrawMain, 37 - SAL : 2858
	0x00000F88 : ldrz		21 ( LABEL_MENU )	// .\DrawNumberGuess.h, DrawMain, 37 - SAL : 2859
	0x00000F8C : add	// .\DrawNumberGuess.h, DrawMain, 37 - SAL : 2860
	0x00000F8E : ixa	// .\DrawNumberGuess.h, DrawMain, 37 - SAL : 2861
	0x00000F90 : calls		DrawStr(85)	// .\DrawNumberGuess.h, DrawMain, 37 - SAL : 2862
	0x00000F94 : pushc		40	// .\DrawNumberGuess.h, DrawMain, 39 - SAL : 2864
	0x00000F98 : pushc		145	// .\DrawNumberGuess.h, DrawMain, 39 - SAL : 2865
	0x00000F9C : pushz		23 ( currentMenu )	// .\DrawNumberGuess.h, DrawMain, 39 - SAL : 2866
	0x00000FA0 : pushc		20	// .\DrawNumberGuess.h, DrawMain, 39 - SAL : 2867
	0x00000FA4 : mult	// .\DrawNumberGuess.h, DrawMain, 39 - SAL : 2868
	0x00000FA6 : add	// .\DrawNumberGuess.h, DrawMain, 39 - SAL : 2869
	0x00000FA8 : pushc		200	// .\DrawNumberGuess.h, DrawMain, 39 - SAL : 2870
	0x00000FAC : pushc		165	// .\DrawNumberGuess.h, DrawMain, 39 - SAL : 2871
	0x00000FB0 : pushz		23 ( currentMenu )	// .\DrawNumberGuess.h, DrawMain, 39 - SAL : 2872
	0x00000FB4 : pushc		20	// .\DrawNumberGuess.h, DrawMain, 39 - SAL : 2873
	0x00000FB8 : mult	// .\DrawNumberGuess.h, DrawMain, 39 - SAL : 2874
	0x00000FBA : add	// .\DrawNumberGuess.h, DrawMain, 39 - SAL : 2875
	0x00000FBC : calls		DrawRect(69)	// .\DrawNumberGuess.h, DrawMain, 39 - SAL : 2876
	0x00000FC0 : ret	// .\DrawNumberGuess.h, DrawMain, 40 - SAL : 2878
}


FUNCTION : DrawNoticeBox()
{
	0x00000FC2 : nop	// .\Design.h, DrawNoticeBox, 17 - SAL : 539
	0x00000FC4 : pushc		117	// .\Design.h, DrawNoticeBox, 18 - SAL : 541
	0x00000FC8 : calls		SetColor(38)	// .\Design.h, DrawNoticeBox, 18 - SAL : 542
	0x00000FCC : pushc		10	// .\Design.h, DrawNoticeBox, 19 - SAL : 544
	0x00000FD0 : pushc		120	// .\Design.h, DrawNoticeBox, 19 - SAL : 545
	0x00000FD4 : pushc		230	// .\Design.h, DrawNoticeBox, 19 - SAL : 546
	0x00000FD8 : pushc		180	// .\Design.h, DrawNoticeBox, 19 - SAL : 547
	0x00000FDC : calls		FillRect(70)	// .\Design.h, DrawNoticeBox, 19 - SAL : 548
	0x00000FE0 : pushc		0	// .\Design.h, DrawNoticeBox, 20 - SAL : 550
	0x00000FE4 : calls		SetColor(38)	// .\Design.h, DrawNoticeBox, 20 - SAL : 551
	0x00000FE8 : pushc		15	// .\Design.h, DrawNoticeBox, 21 - SAL : 553
	0x00000FEC : pushc		125	// .\Design.h, DrawNoticeBox, 21 - SAL : 554
	0x00000FF0 : pushc		225	// .\Design.h, DrawNoticeBox, 21 - SAL : 555
	0x00000FF4 : pushc		175	// .\Design.h, DrawNoticeBox, 21 - SAL : 556
	0x00000FF8 : calls		FillRect(70)	// .\Design.h, DrawNoticeBox, 21 - SAL : 557
	0x00000FFC : ret	// .\Design.h, DrawNoticeBox, 22 - SAL : 559
}


FUNCTION : DrawOption()
{
	0x00000FFE : nop	// .\DrawNumberGuess.h, DrawOption, 89 - SAL : 3077
	0x00001000 : call		0x00000D14	// .\DrawNumberGuess.h, DrawOption, 92 - SAL : 3079
	0x00001006 : pushc		1	// .\DrawNumberGuess.h, DrawOption, 94 - SAL : 3081
	0x0000100A : calls		SetFontAlign(43)	// .\DrawNumberGuess.h, DrawOption, 94 - SAL : 3082
	0x0000100E : pushc		120	// .\DrawNumberGuess.h, DrawOption, 95 - SAL : 3084
	0x00001012 : pushc		120	// .\DrawNumberGuess.h, DrawOption, 95 - SAL : 3085
	0x00001016 : pushmi		%%32	// .\DrawNumberGuess.h, DrawOption, 95 - SAL : 3086
	0x0000101A : calls		DrawStr(85)	// .\DrawNumberGuess.h, DrawOption, 95 - SAL : 3087
	0x0000101E : pushc		80	// .\DrawNumberGuess.h, DrawOption, 96 - SAL : 3089
	0x00001022 : pushc		150	// .\DrawNumberGuess.h, DrawOption, 96 - SAL : 3090
	0x00001026 : pushmi		%%33	// .\DrawNumberGuess.h, DrawOption, 96 - SAL : 3091
	0x0000102A : calls		DrawStr(85)	// .\DrawNumberGuess.h, DrawOption, 96 - SAL : 3092
	0x0000102E : pushc		170	// .\DrawNumberGuess.h, DrawOption, 97 - SAL : 3094
	0x00001032 : pushc		150	// .\DrawNumberGuess.h, DrawOption, 97 - SAL : 3095
	0x00001036 : pushz		38 ( selectedValue )	// .\DrawNumberGuess.h, DrawOption, 97 - SAL : 3096
	0x0000103A : call		0x00000F00	// .\DrawNumberGuess.h, DrawOption, 97 - SAL : 3097
	0x00001040 : pushc		150	// .\DrawNumberGuess.h, DrawOption, 98 - SAL : 3099
	0x00001044 : pushc		150	// .\DrawNumberGuess.h, DrawOption, 98 - SAL : 3100
	0x00001048 : pushmi		%%34	// .\DrawNumberGuess.h, DrawOption, 98 - SAL : 3101
	0x0000104C : calls		DrawStr(85)	// .\DrawNumberGuess.h, DrawOption, 98 - SAL : 3102
	0x00001050 : pushc		190	// .\DrawNumberGuess.h, DrawOption, 99 - SAL : 3104
	0x00001054 : pushc		150	// .\DrawNumberGuess.h, DrawOption, 99 - SAL : 3105
	0x00001058 : pushmi		%%35	// .\DrawNumberGuess.h, DrawOption, 99 - SAL : 3106
	0x0000105C : calls		DrawStr(85)	// .\DrawNumberGuess.h, DrawOption, 99 - SAL : 3107
	0x00001060 : pushz		43 ( delayTime )	// .\DrawNumberGuess.h, DrawOption, 101 - SAL : 3109
	0x00001064 : pushc		0	// .\DrawNumberGuess.h, DrawOption, 101 - SAL : 3110
	0x00001068 : gt	// .\DrawNumberGuess.h, DrawOption, 101 - SAL : 3111
	0x0000106A : fjp		0x000010D4	// .\DrawNumberGuess.h, DrawOption, 101 - SAL : 3112
	0x00001070 : ssp	// .\DrawNumberGuess.h, DrawOption, 102 - SAL : 3114
	0x00001072 : pushz		44 ( delayKey )	// .\DrawNumberGuess.h, DrawOption, 102 - SAL : 3115
	0x00001076 : dup	// .\DrawNumberGuess.h, DrawOption, 102 - SAL : 3116
	0x00001078 : pushc		16	// .\DrawNumberGuess.h, DrawOption, 102 - SAL : 3117
	0x0000107C : eq	// .\DrawNumberGuess.h, DrawOption, 102 - SAL : 3118
	0x0000107E : tjp		0x0000109A	// .\DrawNumberGuess.h, DrawOption, 102 - SAL : 3119
	0x00001084 : dup	// .\DrawNumberGuess.h, DrawOption, 102 - SAL : 3120
	0x00001086 : pushc		17	// .\DrawNumberGuess.h, DrawOption, 102 - SAL : 3121
	0x0000108A : eq	// .\DrawNumberGuess.h, DrawOption, 102 - SAL : 3122
	0x0000108C : tjp		0x000010B4	// .\DrawNumberGuess.h, DrawOption, 102 - SAL : 3123
	0x00001092 : rsp	// .\DrawNumberGuess.h, DrawOption, 102 - SAL : 3124
	0x00001094 : ujp		0x000010C8	// .\DrawNumberGuess.h, DrawOption, 102 - SAL : 3125
	0x0000109A : nop	// .\DrawNumberGuess.h, DrawOption, 102 - SAL : 3126
	0x0000109C : rsp	// .\DrawNumberGuess.h, DrawOption, 102 - SAL : 3127
	0x0000109E : pushc		150	// .\DrawNumberGuess.h, DrawOption, 103 - SAL : 3129
	0x000010A2 : pushc		150	// .\DrawNumberGuess.h, DrawOption, 103 - SAL : 3130
	0x000010A6 : pushmi		%%36	// .\DrawNumberGuess.h, DrawOption, 103 - SAL : 3131
	0x000010AA : calls		DrawStr(85)	// .\DrawNumberGuess.h, DrawOption, 103 - SAL : 3132
	0x000010AE : ujp		0x000010C8	// .\DrawNumberGuess.h, DrawOption, 103 - SAL : 3133
	0x000010B4 : nop	// .\DrawNumberGuess.h, DrawOption, 103 - SAL : 3134
	0x000010B6 : rsp	// .\DrawNumberGuess.h, DrawOption, 103 - SAL : 3135
	0x000010B8 : pushc		190	// .\DrawNumberGuess.h, DrawOption, 104 - SAL : 3137
	0x000010BC : pushc		150	// .\DrawNumberGuess.h, DrawOption, 104 - SAL : 3138
	0x000010C0 : pushmi		%%37	// .\DrawNumberGuess.h, DrawOption, 104 - SAL : 3139
	0x000010C4 : calls		DrawStr(85)	// .\DrawNumberGuess.h, DrawOption, 104 - SAL : 3140
	0x000010C8 : nop	// .\DrawNumberGuess.h, DrawOption, 104 - SAL : 3141
	0x000010CA : pushz		43 ( delayTime )	// .\DrawNumberGuess.h, DrawOption, 105 - SAL : 3143
	0x000010CE : dec	// .\DrawNumberGuess.h, DrawOption, 105 - SAL : 3144
	0x000010D0 : popz		43 ( delayTime )	// .\DrawNumberGuess.h, DrawOption, 105 - SAL : 3145
	0x000010D4 : nop	// .\DrawNumberGuess.h, DrawOption, 106 - SAL : 3147
	0x000010D6 : ret	// .\DrawNumberGuess.h, DrawOption, 107 - SAL : 3149
}


FUNCTION : DrawPinkBox()
{
	0x000010D8 : nop	// .\Design.h, DrawPinkBox, 10 - SAL : 505
	0x000010DA : popz		66 ( y2 of Function DrawPinkBox )	// .\Design.h, DrawPinkBox, 10 - SAL : 506
	0x000010DE : popz		65 ( x2 of Function DrawPinkBox )	// .\Design.h, DrawPinkBox, 10 - SAL : 507
	0x000010E2 : popz		64 ( y1 of Function DrawPinkBox )	// .\Design.h, DrawPinkBox, 10 - SAL : 508
	0x000010E6 : popz		63 ( x1 of Function DrawPinkBox )	// .\Design.h, DrawPinkBox, 10 - SAL : 509
	0x000010EA : pushc		119	// .\Design.h, DrawPinkBox, 11 - SAL : 511
	0x000010EE : calls		SetColor(38)	// .\Design.h, DrawPinkBox, 11 - SAL : 512
	0x000010F2 : pushz		63 ( x1 of Function DrawPinkBox )	// .\Design.h, DrawPinkBox, 12 - SAL : 514
	0x000010F6 : pushz		64 ( y1 of Function DrawPinkBox )	// .\Design.h, DrawPinkBox, 12 - SAL : 515
	0x000010FA : pushz		65 ( x2 of Function DrawPinkBox )	// .\Design.h, DrawPinkBox, 12 - SAL : 516
	0x000010FE : pushz		66 ( y2 of Function DrawPinkBox )	// .\Design.h, DrawPinkBox, 12 - SAL : 517
	0x00001102 : calls		FillRect(70)	// .\Design.h, DrawPinkBox, 12 - SAL : 518
	0x00001106 : pushc		0	// .\Design.h, DrawPinkBox, 13 - SAL : 520
	0x0000110A : calls		SetColor(38)	// .\Design.h, DrawPinkBox, 13 - SAL : 521
	0x0000110E : pushz		63 ( x1 of Function DrawPinkBox )	// .\Design.h, DrawPinkBox, 14 - SAL : 523
	0x00001112 : pushc		5	// .\Design.h, DrawPinkBox, 14 - SAL : 524
	0x00001116 : add	// .\Design.h, DrawPinkBox, 14 - SAL : 525
	0x00001118 : pushz		64 ( y1 of Function DrawPinkBox )	// .\Design.h, DrawPinkBox, 14 - SAL : 526
	0x0000111C : pushc		5	// .\Design.h, DrawPinkBox, 14 - SAL : 527
	0x00001120 : add	// .\Design.h, DrawPinkBox, 14 - SAL : 528
	0x00001122 : pushz		65 ( x2 of Function DrawPinkBox )	// .\Design.h, DrawPinkBox, 14 - SAL : 529
	0x00001126 : pushc		5	// .\Design.h, DrawPinkBox, 14 - SAL : 530
	0x0000112A : sub	// .\Design.h, DrawPinkBox, 14 - SAL : 531
	0x0000112C : pushz		66 ( y2 of Function DrawPinkBox )	// .\Design.h, DrawPinkBox, 14 - SAL : 532
	0x00001130 : pushc		5	// .\Design.h, DrawPinkBox, 14 - SAL : 533
	0x00001134 : sub	// .\Design.h, DrawPinkBox, 14 - SAL : 534
	0x00001136 : calls		FillRect(70)	// .\Design.h, DrawPinkBox, 14 - SAL : 535
	0x0000113A : ret	// .\Design.h, DrawPinkBox, 15 - SAL : 537
}


FUNCTION : DrawPlay()
{
	0x0000113C : nop	// .\DrawNumberGuess.h, DrawPlay, 42 - SAL : 2880
	0x0000113E : ssp	// .\DrawNumberGuess.h, DrawPlay, 43 - SAL : 2882
	0x00001140 : pushz		33 ( currentPlayMode )	// .\DrawNumberGuess.h, DrawPlay, 43 - SAL : 2883
	0x00001144 : dup	// .\DrawNumberGuess.h, DrawPlay, 43 - SAL : 2884
	0x00001146 : pushc		0	// .\DrawNumberGuess.h, DrawPlay, 43 - SAL : 2885
	0x0000114A : eq	// .\DrawNumberGuess.h, DrawPlay, 43 - SAL : 2886
	0x0000114C : tjp		0x000011AE	// .\DrawNumberGuess.h, DrawPlay, 43 - SAL : 2887
	0x00001152 : dup	// .\DrawNumberGuess.h, DrawPlay, 43 - SAL : 2888
	0x00001154 : pushc		1	// .\DrawNumberGuess.h, DrawPlay, 43 - SAL : 2889
	0x00001158 : eq	// .\DrawNumberGuess.h, DrawPlay, 43 - SAL : 2890
	0x0000115A : tjp		0x000011BE	// .\DrawNumberGuess.h, DrawPlay, 43 - SAL : 2891
	0x00001160 : dup	// .\DrawNumberGuess.h, DrawPlay, 43 - SAL : 2892
	0x00001162 : pushc		2	// .\DrawNumberGuess.h, DrawPlay, 43 - SAL : 2893
	0x00001166 : eq	// .\DrawNumberGuess.h, DrawPlay, 43 - SAL : 2894
	0x00001168 : tjp		0x000011CE	// .\DrawNumberGuess.h, DrawPlay, 43 - SAL : 2895
	0x0000116E : dup	// .\DrawNumberGuess.h, DrawPlay, 43 - SAL : 2896
	0x00001170 : pushc		3	// .\DrawNumberGuess.h, DrawPlay, 43 - SAL : 2897
	0x00001174 : eq	// .\DrawNumberGuess.h, DrawPlay, 43 - SAL : 2898
	0x00001176 : tjp		0x000011DE	// .\DrawNumberGuess.h, DrawPlay, 43 - SAL : 2899
	0x0000117C : dup	// .\DrawNumberGuess.h, DrawPlay, 43 - SAL : 2900
	0x0000117E : pushc		4	// .\DrawNumberGuess.h, DrawPlay, 43 - SAL : 2901
	0x00001182 : eq	// .\DrawNumberGuess.h, DrawPlay, 43 - SAL : 2902
	0x00001184 : tjp		0x000011EE	// .\DrawNumberGuess.h, DrawPlay, 43 - SAL : 2903
	0x0000118A : dup	// .\DrawNumberGuess.h, DrawPlay, 43 - SAL : 2904
	0x0000118C : pushc		5	// .\DrawNumberGuess.h, DrawPlay, 43 - SAL : 2905
	0x00001190 : eq	// .\DrawNumberGuess.h, DrawPlay, 43 - SAL : 2906
	0x00001192 : tjp		0x000011FE	// .\DrawNumberGuess.h, DrawPlay, 43 - SAL : 2907
	0x00001198 : dup	// .\DrawNumberGuess.h, DrawPlay, 43 - SAL : 2908
	0x0000119A : pushc		6	// .\DrawNumberGuess.h, DrawPlay, 43 - SAL : 2909
	0x0000119E : eq	// .\DrawNumberGuess.h, DrawPlay, 43 - SAL : 2910
	0x000011A0 : tjp		0x00001208	// .\DrawNumberGuess.h, DrawPlay, 43 - SAL : 2911
	0x000011A6 : rsp	// .\DrawNumberGuess.h, DrawPlay, 43 - SAL : 2912
	0x000011A8 : ujp		0x00001212	// .\DrawNumberGuess.h, DrawPlay, 43 - SAL : 2913
	0x000011AE : nop	// .\DrawNumberGuess.h, DrawPlay, 43 - SAL : 2914
	0x000011B0 : rsp	// .\DrawNumberGuess.h, DrawPlay, 43 - SAL : 2915
	0x000011B2 : call		0x0000160E	// .\DrawNumberGuess.h, DrawPlay, 45 - SAL : 2918
	0x000011B8 : ujp		0x00001212	// .\DrawNumberGuess.h, DrawPlay, 45 - SAL : 2919
	0x000011BE : nop	// .\DrawNumberGuess.h, DrawPlay, 45 - SAL : 2920
	0x000011C0 : rsp	// .\DrawNumberGuess.h, DrawPlay, 45 - SAL : 2921
	0x000011C2 : call		0x000015D2	// .\DrawNumberGuess.h, DrawPlay, 48 - SAL : 2925
	0x000011C8 : ujp		0x00001212	// .\DrawNumberGuess.h, DrawPlay, 48 - SAL : 2926
	0x000011CE : nop	// .\DrawNumberGuess.h, DrawPlay, 48 - SAL : 2927
	0x000011D0 : rsp	// .\DrawNumberGuess.h, DrawPlay, 48 - SAL : 2928
	0x000011D2 : call		0x00001546	// .\DrawNumberGuess.h, DrawPlay, 51 - SAL : 2932
	0x000011D8 : ujp		0x00001212	// .\DrawNumberGuess.h, DrawPlay, 51 - SAL : 2933
	0x000011DE : nop	// .\DrawNumberGuess.h, DrawPlay, 51 - SAL : 2934
	0x000011E0 : rsp	// .\DrawNumberGuess.h, DrawPlay, 51 - SAL : 2935
	0x000011E2 : call		0x000015EC	// .\DrawNumberGuess.h, DrawPlay, 54 - SAL : 2939
	0x000011E8 : ujp		0x00001212	// .\DrawNumberGuess.h, DrawPlay, 54 - SAL : 2940
	0x000011EE : nop	// .\DrawNumberGuess.h, DrawPlay, 54 - SAL : 2941
	0x000011F0 : rsp	// .\DrawNumberGuess.h, DrawPlay, 54 - SAL : 2942
	0x000011F2 : call		0x0000165C	// .\DrawNumberGuess.h, DrawPlay, 57 - SAL : 2946
	0x000011F8 : ujp		0x00001212	// .\DrawNumberGuess.h, DrawPlay, 57 - SAL : 2947
	0x000011FE : nop	// .\DrawNumberGuess.h, DrawPlay, 57 - SAL : 2948
	0x00001200 : rsp	// .\DrawNumberGuess.h, DrawPlay, 57 - SAL : 2949
	0x00001202 : call		0x000015C2	// .\DrawNumberGuess.h, DrawPlay, 60 - SAL : 2953
	0x00001208 : nop	// .\DrawNumberGuess.h, DrawPlay, 60 - SAL : 2954
	0x0000120A : rsp	// .\DrawNumberGuess.h, DrawPlay, 60 - SAL : 2955
	0x0000120C : call		0x000015DC	// .\DrawNumberGuess.h, DrawPlay, 62 - SAL : 2958
	0x00001212 : nop	// .\DrawNumberGuess.h, DrawPlay, 62 - SAL : 2959
	0x00001214 : ret	// .\DrawNumberGuess.h, DrawPlay, 64 - SAL : 2962
}


FUNCTION : DrawPlayBase()
{
	0x00001216 : nop	// .\DrawPlay.h, DrawPlayBase, 3 - SAL : 1943
	0x00001218 : pushc		0	// .\DrawPlay.h, DrawPlayBase, 5 - SAL : 1947
	0x0000121C : popz		90 ( rowIndex of Function DrawPlayBase )	// .\DrawPlay.h, DrawPlayBase, 5 - SAL : 1948
	0x00001220 : call		0x00000D14	// .\DrawPlay.h, DrawPlayBase, 9 - SAL : 1951
	0x00001226 : pushc		30	// .\DrawPlay.h, DrawPlayBase, 10 - SAL : 1953
	0x0000122A : pushc		60	// .\DrawPlay.h, DrawPlayBase, 10 - SAL : 1954
	0x0000122E : pushc		120	// .\DrawPlay.h, DrawPlayBase, 10 - SAL : 1955
	0x00001232 : pushc		90	// .\DrawPlay.h, DrawPlayBase, 10 - SAL : 1956
	0x00001236 : call		0x00000D48	// .\DrawPlay.h, DrawPlayBase, 10 - SAL : 1957
	0x0000123C : pushc		130	// .\DrawPlay.h, DrawPlayBase, 11 - SAL : 1959
	0x00001240 : pushc		60	// .\DrawPlay.h, DrawPlayBase, 11 - SAL : 1960
	0x00001244 : pushc		210	// .\DrawPlay.h, DrawPlayBase, 11 - SAL : 1961
	0x00001248 : pushc		90	// .\DrawPlay.h, DrawPlayBase, 11 - SAL : 1962
	0x0000124C : call		0x00000D48	// .\DrawPlay.h, DrawPlayBase, 11 - SAL : 1963
	0x00001252 : pushc		30	// .\DrawPlay.h, DrawPlayBase, 12 - SAL : 1965
	0x00001256 : pushc		100	// .\DrawPlay.h, DrawPlayBase, 12 - SAL : 1966
	0x0000125A : pushc		130	// .\DrawPlay.h, DrawPlayBase, 12 - SAL : 1967
	0x0000125E : pushc		135	// .\DrawPlay.h, DrawPlayBase, 12 - SAL : 1968
	0x00001262 : call		0x000010D8	// .\DrawPlay.h, DrawPlayBase, 12 - SAL : 1969
	0x00001268 : pushc		30	// .\DrawPlay.h, DrawPlayBase, 13 - SAL : 1971
	0x0000126C : pushc		130	// .\DrawPlay.h, DrawPlayBase, 13 - SAL : 1972
	0x00001270 : pushc		130	// .\DrawPlay.h, DrawPlayBase, 13 - SAL : 1973
	0x00001274 : pushc		160	// .\DrawPlay.h, DrawPlayBase, 13 - SAL : 1974
	0x00001278 : call		0x000010D8	// .\DrawPlay.h, DrawPlayBase, 13 - SAL : 1975
	0x0000127E : pushc		30	// .\DrawPlay.h, DrawPlayBase, 14 - SAL : 1977
	0x00001282 : pushc		170	// .\DrawPlay.h, DrawPlayBase, 14 - SAL : 1978
	0x00001286 : pushc		130	// .\DrawPlay.h, DrawPlayBase, 14 - SAL : 1979
	0x0000128A : pushc		200	// .\DrawPlay.h, DrawPlayBase, 14 - SAL : 1980
	0x0000128E : call		0x00000D48	// .\DrawPlay.h, DrawPlayBase, 14 - SAL : 1981
	0x00001294 : pushc		10	// .\DrawPlay.h, DrawPlayBase, 15 - SAL : 1983
	0x00001298 : pushc		210	// .\DrawPlay.h, DrawPlayBase, 15 - SAL : 1984
	0x0000129C : pushc		230	// .\DrawPlay.h, DrawPlayBase, 15 - SAL : 1985
	0x000012A0 : pushc		240	// .\DrawPlay.h, DrawPlayBase, 15 - SAL : 1986
	0x000012A4 : call		0x00000D48	// .\DrawPlay.h, DrawPlayBase, 15 - SAL : 1987
	0x000012AA : pushc		140	// .\DrawPlay.h, DrawPlayBase, 16 - SAL : 1989
	0x000012AE : pushc		100	// .\DrawPlay.h, DrawPlayBase, 16 - SAL : 1990
	0x000012B2 : pushc		210	// .\DrawPlay.h, DrawPlayBase, 16 - SAL : 1991
	0x000012B6 : pushc		200	// .\DrawPlay.h, DrawPlayBase, 16 - SAL : 1992
	0x000012BA : call		0x00000D48	// .\DrawPlay.h, DrawPlayBase, 16 - SAL : 1993
	0x000012C0 : pushc		129	// .\DrawPlay.h, DrawPlayBase, 19 - SAL : 1995
	0x000012C4 : calls		SetColor(38)	// .\DrawPlay.h, DrawPlayBase, 19 - SAL : 1996
	0x000012C8 : pushz		38 ( selectedValue )	// .\DrawPlay.h, DrawPlayBase, 20 - SAL : 1998
	0x000012CC : pushc		0	// .\DrawPlay.h, DrawPlayBase, 20 - SAL : 1999
	0x000012D0 : eq	// .\DrawPlay.h, DrawPlayBase, 20 - SAL : 2000
	0x000012D2 : fjp		0x000012F2	// .\DrawPlay.h, DrawPlayBase, 20 - SAL : 2001
	0x000012D8 : pushc		35	// .\DrawPlay.h, DrawPlayBase, 21 - SAL : 2003
	0x000012DC : pushc		135	// .\DrawPlay.h, DrawPlayBase, 21 - SAL : 2004
	0x000012E0 : pushc		80	// .\DrawPlay.h, DrawPlayBase, 21 - SAL : 2005
	0x000012E4 : pushc		155	// .\DrawPlay.h, DrawPlayBase, 21 - SAL : 2006
	0x000012E8 : calls		FillRect(70)	// .\DrawPlay.h, DrawPlayBase, 21 - SAL : 2007
	0x000012EC : ujp		0x00001308	// .\DrawPlay.h, DrawPlayBase, 21 - SAL : 2008
	0x000012F2 : nop	// .\DrawPlay.h, DrawPlayBase, 21 - SAL : 2009
	0x000012F4 : pushc		80	// .\DrawPlay.h, DrawPlayBase, 23 - SAL : 2012
	0x000012F8 : pushc		135	// .\DrawPlay.h, DrawPlayBase, 23 - SAL : 2013
	0x000012FC : pushc		125	// .\DrawPlay.h, DrawPlayBase, 23 - SAL : 2014
	0x00001300 : pushc		155	// .\DrawPlay.h, DrawPlayBase, 23 - SAL : 2015
	0x00001304 : calls		FillRect(70)	// .\DrawPlay.h, DrawPlayBase, 23 - SAL : 2016
	0x00001308 : nop	// .\DrawPlay.h, DrawPlayBase, 24 - SAL : 2018
	0x0000130A : pushc		0	// .\DrawPlay.h, DrawPlayBase, 27 - SAL : 2020
	0x0000130E : calls		SetFontAlign(43)	// .\DrawPlay.h, DrawPlayBase, 27 - SAL : 2021
	0x00001312 : pushc		40	// .\DrawPlay.h, DrawPlayBase, 28 - SAL : 2023
	0x00001316 : pushc		70	// .\DrawPlay.h, DrawPlayBase, 28 - SAL : 2024
	0x0000131A : pushmi		%%13	// .\DrawPlay.h, DrawPlayBase, 28 - SAL : 2025
	0x0000131E : calls		DrawStr(85)	// .\DrawPlay.h, DrawPlayBase, 28 - SAL : 2026
	0x00001322 : pushc		140	// .\DrawPlay.h, DrawPlayBase, 29 - SAL : 2028
	0x00001326 : pushc		70	// .\DrawPlay.h, DrawPlayBase, 29 - SAL : 2029
	0x0000132A : pushmi		%%14	// .\DrawPlay.h, DrawPlayBase, 29 - SAL : 2030
	0x0000132E : calls		DrawStr(85)	// .\DrawPlay.h, DrawPlayBase, 29 - SAL : 2031
	0x00001332 : pushz		89 ( tempString of Function DrawPlayBase )	// .\DrawPlay.h, DrawPlayBase, 30 - SAL : 2033
	0x00001336 : pushmi		%%15	// .\DrawPlay.h, DrawPlayBase, 30 - SAL : 2034
	0x0000133A : pushc		10	// .\DrawPlay.h, DrawPlayBase, 30 - SAL : 2035
	0x0000133E : pushz		37 ( numberSize )	// .\DrawPlay.h, DrawPlayBase, 30 - SAL : 2036
	0x00001342 : call		0x00001F10	// .\DrawPlay.h, DrawPlayBase, 30 - SAL : 2037
	0x00001348 : pushc		1	// .\DrawPlay.h, DrawPlayBase, 30 - SAL : 2038
	0x0000134C : sub	// .\DrawPlay.h, DrawPlayBase, 30 - SAL : 2039
	0x0000134E : calls		MakeStr1(174)	// .\DrawPlay.h, DrawPlayBase, 30 - SAL : 2040
	0x00001352 : pushc		40	// .\DrawPlay.h, DrawPlayBase, 31 - SAL : 2042
	0x00001356 : pushc		180	// .\DrawPlay.h, DrawPlayBase, 31 - SAL : 2043
	0x0000135A : pushz		89 ( tempString of Function DrawPlayBase )	// .\DrawPlay.h, DrawPlayBase, 31 - SAL : 2044
	0x0000135E : calls		DrawStr(85)	// .\DrawPlay.h, DrawPlayBase, 31 - SAL : 2045
	0x00001362 : pushz		29 ( lastHistoryIndex )	// .\DrawPlay.h, DrawPlayBase, 34 - SAL : 2047
	0x00001366 : popz		91 ( i of Function DrawPlayBase )	// .\DrawPlay.h, DrawPlayBase, 34 - SAL : 2048
	0x0000136A : nop	// .\DrawPlay.h, DrawPlayBase, 34 - SAL : 2049
	0x0000136C : pushz		91 ( i of Function DrawPlayBase )	// .\DrawPlay.h, DrawPlayBase, 34 - SAL : 2050
	0x00001370 : pushc		1	// .\DrawPlay.h, DrawPlayBase, 34 - SAL : 2051
	0x00001374 : neg	// .\DrawPlay.h, DrawPlayBase, 34 - SAL : 2052
	0x00001376 : gt	// .\DrawPlay.h, DrawPlayBase, 34 - SAL : 2053
	0x00001378 : fjp		0x000013D4	// .\DrawPlay.h, DrawPlayBase, 34 - SAL : 2054
	0x0000137E : pushz		91 ( i of Function DrawPlayBase )	// .\DrawPlay.h, DrawPlayBase, 35 - SAL : 2056
	0x00001382 : ldrz		28 ( historyNumber )	// .\DrawPlay.h, DrawPlayBase, 35 - SAL : 2057
	0x00001386 : add	// .\DrawPlay.h, DrawPlayBase, 35 - SAL : 2058
	0x00001388 : ixa	// .\DrawPlay.h, DrawPlayBase, 35 - SAL : 2059
	0x0000138A : pushc		0	// .\DrawPlay.h, DrawPlayBase, 35 - SAL : 2060
	0x0000138E : lt	// .\DrawPlay.h, DrawPlayBase, 35 - SAL : 2061
	0x00001390 : fjp		0x0000139C	// .\DrawPlay.h, DrawPlayBase, 35 - SAL : 2062
	0x00001396 : ujp		0x000013C2	// .\DrawPlay.h, DrawPlayBase, 35 - SAL : 2063
	0x0000139C : nop	// .\DrawPlay.h, DrawPlayBase, 35 - SAL : 2064
	0x0000139E : pushz		90 ( rowIndex of Function DrawPlayBase )	// .\DrawPlay.h, DrawPlayBase, 36 - SAL : 2066
	0x000013A2 : pushz		91 ( i of Function DrawPlayBase )	// .\DrawPlay.h, DrawPlayBase, 36 - SAL : 2067
	0x000013A6 : ldrz		28 ( historyNumber )	// .\DrawPlay.h, DrawPlayBase, 36 - SAL : 2068
	0x000013AA : add	// .\DrawPlay.h, DrawPlayBase, 36 - SAL : 2069
	0x000013AC : ixa	// .\DrawPlay.h, DrawPlayBase, 36 - SAL : 2070
	0x000013AE : call		0x00000E62	// .\DrawPlay.h, DrawPlayBase, 36 - SAL : 2071
	0x000013B4 : pushz		90 ( rowIndex of Function DrawPlayBase )	// .\DrawPlay.h, DrawPlayBase, 37 - SAL : 2073
	0x000013B8 : pushc		1	// .\DrawPlay.h, DrawPlayBase, 37 - SAL : 2074
	0x000013BC : add	// .\DrawPlay.h, DrawPlayBase, 37 - SAL : 2075
	0x000013BE : popz		90 ( rowIndex of Function DrawPlayBase )	// .\DrawPlay.h, DrawPlayBase, 37 - SAL : 2076
	0x000013C2 : nop	// .\DrawPlay.h, DrawPlayBase, 37 - SAL : 2077
	0x000013C4 : pushz		91 ( i of Function DrawPlayBase )	// .\DrawPlay.h, DrawPlayBase, 37 - SAL : 2078
	0x000013C8 : dec	// .\DrawPlay.h, DrawPlayBase, 37 - SAL : 2079
	0x000013CA : popz		91 ( i of Function DrawPlayBase )	// .\DrawPlay.h, DrawPlayBase, 37 - SAL : 2080
	0x000013CE : ujp		0x0000136A	// .\DrawPlay.h, DrawPlayBase, 37 - SAL : 2081
	0x000013D4 : nop	// .\DrawPlay.h, DrawPlayBase, 38 - SAL : 2083
	0x000013D6 : pushc		5	// .\DrawPlay.h, DrawPlayBase, 38 - SAL : 2084
	0x000013DA : pushc		1	// .\DrawPlay.h, DrawPlayBase, 38 - SAL : 2085
	0x000013DE : sub	// .\DrawPlay.h, DrawPlayBase, 38 - SAL : 2086
	0x000013E0 : popz		91 ( i of Function DrawPlayBase )	// .\DrawPlay.h, DrawPlayBase, 38 - SAL : 2087
	0x000013E4 : nop	// .\DrawPlay.h, DrawPlayBase, 38 - SAL : 2088
	0x000013E6 : pushz		91 ( i of Function DrawPlayBase )	// .\DrawPlay.h, DrawPlayBase, 38 - SAL : 2089
	0x000013EA : pushz		29 ( lastHistoryIndex )	// .\DrawPlay.h, DrawPlayBase, 38 - SAL : 2090
	0x000013EE : gt	// .\DrawPlay.h, DrawPlayBase, 38 - SAL : 2091
	0x000013F0 : fjp		0x0000144C	// .\DrawPlay.h, DrawPlayBase, 38 - SAL : 2092
	0x000013F6 : pushz		91 ( i of Function DrawPlayBase )	// .\DrawPlay.h, DrawPlayBase, 39 - SAL : 2094
	0x000013FA : ldrz		28 ( historyNumber )	// .\DrawPlay.h, DrawPlayBase, 39 - SAL : 2095
	0x000013FE : add	// .\DrawPlay.h, DrawPlayBase, 39 - SAL : 2096
	0x00001400 : ixa	// .\DrawPlay.h, DrawPlayBase, 39 - SAL : 2097
	0x00001402 : pushc		0	// .\DrawPlay.h, DrawPlayBase, 39 - SAL : 2098
	0x00001406 : lt	// .\DrawPlay.h, DrawPlayBase, 39 - SAL : 2099
	0x00001408 : fjp		0x00001414	// .\DrawPlay.h, DrawPlayBase, 39 - SAL : 2100
	0x0000140E : ujp		0x0000143A	// .\DrawPlay.h, DrawPlayBase, 39 - SAL : 2101
	0x00001414 : nop	// .\DrawPlay.h, DrawPlayBase, 39 - SAL : 2102
	0x00001416 : pushz		90 ( rowIndex of Function DrawPlayBase )	// .\DrawPlay.h, DrawPlayBase, 40 - SAL : 2104
	0x0000141A : pushz		91 ( i of Function DrawPlayBase )	// .\DrawPlay.h, DrawPlayBase, 40 - SAL : 2105
	0x0000141E : ldrz		28 ( historyNumber )	// .\DrawPlay.h, DrawPlayBase, 40 - SAL : 2106
	0x00001422 : add	// .\DrawPlay.h, DrawPlayBase, 40 - SAL : 2107
	0x00001424 : ixa	// .\DrawPlay.h, DrawPlayBase, 40 - SAL : 2108
	0x00001426 : call		0x00000E62	// .\DrawPlay.h, DrawPlayBase, 40 - SAL : 2109
	0x0000142C : pushz		90 ( rowIndex of Function DrawPlayBase )	// .\DrawPlay.h, DrawPlayBase, 41 - SAL : 2111
	0x00001430 : pushc		1	// .\DrawPlay.h, DrawPlayBase, 41 - SAL : 2112
	0x00001434 : add	// .\DrawPlay.h, DrawPlayBase, 41 - SAL : 2113
	0x00001436 : popz		90 ( rowIndex of Function DrawPlayBase )	// .\DrawPlay.h, DrawPlayBase, 41 - SAL : 2114
	0x0000143A : nop	// .\DrawPlay.h, DrawPlayBase, 41 - SAL : 2115
	0x0000143C : pushz		91 ( i of Function DrawPlayBase )	// .\DrawPlay.h, DrawPlayBase, 41 - SAL : 2116
	0x00001440 : dec	// .\DrawPlay.h, DrawPlayBase, 41 - SAL : 2117
	0x00001442 : popz		91 ( i of Function DrawPlayBase )	// .\DrawPlay.h, DrawPlayBase, 41 - SAL : 2118
	0x00001446 : ujp		0x000013E4	// .\DrawPlay.h, DrawPlayBase, 41 - SAL : 2119
	0x0000144C : nop	// .\DrawPlay.h, DrawPlayBase, 42 - SAL : 2121
	0x0000144E : pushc		2	// .\DrawPlay.h, DrawPlayBase, 45 - SAL : 2123
	0x00001452 : calls		SetFontAlign(43)	// .\DrawPlay.h, DrawPlayBase, 45 - SAL : 2124
	0x00001456 : pushc		110	// .\DrawPlay.h, DrawPlayBase, 46 - SAL : 2126
	0x0000145A : pushc		70	// .\DrawPlay.h, DrawPlayBase, 46 - SAL : 2127
	0x0000145E : pushz		25 ( gamePoint )	// .\DrawPlay.h, DrawPlayBase, 46 - SAL : 2128
	0x00001462 : call		0x00000F00	// .\DrawPlay.h, DrawPlayBase, 46 - SAL : 2129
	0x00001468 : pushc		200	// .\DrawPlay.h, DrawPlayBase, 47 - SAL : 2131
	0x0000146C : pushc		70	// .\DrawPlay.h, DrawPlayBase, 47 - SAL : 2132
	0x00001470 : pushz		24 ( chance )	// .\DrawPlay.h, DrawPlayBase, 47 - SAL : 2133
	0x00001474 : call		0x00000F00	// .\DrawPlay.h, DrawPlayBase, 47 - SAL : 2134
	0x0000147A : pushc		1	// .\DrawPlay.h, DrawPlayBase, 50 - SAL : 2136
	0x0000147E : calls		SetFontAlign(43)	// .\DrawPlay.h, DrawPlayBase, 50 - SAL : 2137
	0x00001482 : pushc		80	// .\DrawPlay.h, DrawPlayBase, 51 - SAL : 2139
	0x00001486 : pushc		110	// .\DrawPlay.h, DrawPlayBase, 51 - SAL : 2140
	0x0000148A : pushc		0	// .\DrawPlay.h, DrawPlayBase, 51 - SAL : 2141
	0x0000148E : pushc		2	// .\DrawPlay.h, DrawPlayBase, 51 - SAL : 2142
	0x00001492 : calls		Rand(201)	// .\DrawPlay.h, DrawPlayBase, 51 - SAL : 2143
	0x00001496 : add	// .\DrawPlay.h, DrawPlayBase, 51 - SAL : 2144
	0x00001498 : pushz		27 ( answeredNumber )	// .\DrawPlay.h, DrawPlayBase, 51 - SAL : 2145
	0x0000149C : call		0x00000F00	// .\DrawPlay.h, DrawPlayBase, 51 - SAL : 2146
	0x000014A2 : pushc		60	// .\DrawPlay.h, DrawPlayBase, 52 - SAL : 2148
	0x000014A6 : pushc		140	// .\DrawPlay.h, DrawPlayBase, 52 - SAL : 2149
	0x000014AA : pushmi		%%16	// .\DrawPlay.h, DrawPlayBase, 52 - SAL : 2150
	0x000014AE : calls		DrawStr(85)	// .\DrawPlay.h, DrawPlayBase, 52 - SAL : 2151
	0x000014B2 : pushc		105	// .\DrawPlay.h, DrawPlayBase, 53 - SAL : 2153
	0x000014B6 : pushc		140	// .\DrawPlay.h, DrawPlayBase, 53 - SAL : 2154
	0x000014BA : pushmi		%%17	// .\DrawPlay.h, DrawPlayBase, 53 - SAL : 2155
	0x000014BE : calls		DrawStr(85)	// .\DrawPlay.h, DrawPlayBase, 53 - SAL : 2156
	0x000014C2 : ssp	// .\DrawPlay.h, DrawPlayBase, 54 - SAL : 2158
	0x000014C4 : pushz		39 ( errorType )	// .\DrawPlay.h, DrawPlayBase, 54 - SAL : 2159
	0x000014C8 : dup	// .\DrawPlay.h, DrawPlayBase, 54 - SAL : 2160
	0x000014CA : pushc		0	// .\DrawPlay.h, DrawPlayBase, 54 - SAL : 2161
	0x000014CE : eq	// .\DrawPlay.h, DrawPlayBase, 54 - SAL : 2162
	0x000014D0 : tjp		0x000014FA	// .\DrawPlay.h, DrawPlayBase, 54 - SAL : 2163
	0x000014D6 : dup	// .\DrawPlay.h, DrawPlayBase, 54 - SAL : 2164
	0x000014D8 : pushc		1	// .\DrawPlay.h, DrawPlayBase, 54 - SAL : 2165
	0x000014DC : eq	// .\DrawPlay.h, DrawPlayBase, 54 - SAL : 2166
	0x000014DE : tjp		0x00001514	// .\DrawPlay.h, DrawPlayBase, 54 - SAL : 2167
	0x000014E4 : dup	// .\DrawPlay.h, DrawPlayBase, 54 - SAL : 2168
	0x000014E6 : pushc		2	// .\DrawPlay.h, DrawPlayBase, 54 - SAL : 2169
	0x000014EA : eq	// .\DrawPlay.h, DrawPlayBase, 54 - SAL : 2170
	0x000014EC : tjp		0x0000152E	// .\DrawPlay.h, DrawPlayBase, 54 - SAL : 2171
	0x000014F2 : rsp	// .\DrawPlay.h, DrawPlayBase, 54 - SAL : 2172
	0x000014F4 : ujp		0x00001542	// .\DrawPlay.h, DrawPlayBase, 54 - SAL : 2173
	0x000014FA : nop	// .\DrawPlay.h, DrawPlayBase, 54 - SAL : 2174
	0x000014FC : rsp	// .\DrawPlay.h, DrawPlayBase, 54 - SAL : 2175
	0x000014FE : pushc		120	// .\DrawPlay.h, DrawPlayBase, 56 - SAL : 2178
	0x00001502 : pushc		220	// .\DrawPlay.h, DrawPlayBase, 56 - SAL : 2179
	0x00001506 : pushmi		%%18	// .\DrawPlay.h, DrawPlayBase, 56 - SAL : 2180
	0x0000150A : calls		DrawStr(85)	// .\DrawPlay.h, DrawPlayBase, 56 - SAL : 2181
	0x0000150E : ujp		0x00001542	// .\DrawPlay.h, DrawPlayBase, 56 - SAL : 2182
	0x00001514 : nop	// .\DrawPlay.h, DrawPlayBase, 56 - SAL : 2183
	0x00001516 : rsp	// .\DrawPlay.h, DrawPlayBase, 56 - SAL : 2184
	0x00001518 : pushc		120	// .\DrawPlay.h, DrawPlayBase, 58 - SAL : 2187
	0x0000151C : pushc		220	// .\DrawPlay.h, DrawPlayBase, 58 - SAL : 2188
	0x00001520 : pushmi		%%19	// .\DrawPlay.h, DrawPlayBase, 58 - SAL : 2189
	0x00001524 : calls		DrawStr(85)	// .\DrawPlay.h, DrawPlayBase, 58 - SAL : 2190
	0x00001528 : ujp		0x00001542	// .\DrawPlay.h, DrawPlayBase, 58 - SAL : 2191
	0x0000152E : nop	// .\DrawPlay.h, DrawPlayBase, 58 - SAL : 2192
	0x00001530 : rsp	// .\DrawPlay.h, DrawPlayBase, 58 - SAL : 2193
	0x00001532 : pushc		120	// .\DrawPlay.h, DrawPlayBase, 60 - SAL : 2196
	0x00001536 : pushc		220	// .\DrawPlay.h, DrawPlayBase, 60 - SAL : 2197
	0x0000153A : pushmi		%%20	// .\DrawPlay.h, DrawPlayBase, 60 - SAL : 2198
	0x0000153E : calls		DrawStr(85)	// .\DrawPlay.h, DrawPlayBase, 60 - SAL : 2199
	0x00001542 : nop	// .\DrawPlay.h, DrawPlayBase, 60 - SAL : 2200
	0x00001544 : ret	// .\DrawPlay.h, DrawPlayBase, 62 - SAL : 2203
}


FUNCTION : DrawPlayCompared()
{
	0x00001546 : nop	// .\DrawPlay.h, DrawPlayCompared, 81 - SAL : 2240
	0x00001548 : call		0x00001216	// .\DrawPlay.h, DrawPlayCompared, 82 - SAL : 2242
	0x0000154E : call		0x00000FC2	// .\DrawPlay.h, DrawPlayCompared, 83 - SAL : 2244
	0x00001554 : pushc		1	// .\DrawPlay.h, DrawPlayCompared, 85 - SAL : 2246
	0x00001558 : calls		SetFontAlign(43)	// .\DrawPlay.h, DrawPlayCompared, 85 - SAL : 2247
	0x0000155C : pushz		27 ( answeredNumber )	// .\DrawPlay.h, DrawPlayCompared, 87 - SAL : 2249
	0x00001560 : pushz		26 ( questNumber )	// .\DrawPlay.h, DrawPlayCompared, 87 - SAL : 2250
	0x00001564 : lt	// .\DrawPlay.h, DrawPlayCompared, 87 - SAL : 2251
	0x00001566 : fjp		0x00001582	// .\DrawPlay.h, DrawPlayCompared, 87 - SAL : 2252
	0x0000156C : pushc		120	// .\DrawPlay.h, DrawPlayCompared, 88 - SAL : 2254
	0x00001570 : pushc		145	// .\DrawPlay.h, DrawPlayCompared, 88 - SAL : 2255
	0x00001574 : pushmi		%%23	// .\DrawPlay.h, DrawPlayCompared, 88 - SAL : 2256
	0x00001578 : calls		DrawStr(85)	// .\DrawPlay.h, DrawPlayCompared, 88 - SAL : 2257
	0x0000157C : ujp		0x000015BE	// .\DrawPlay.h, DrawPlayCompared, 88 - SAL : 2258
	0x00001582 : nop	// .\DrawPlay.h, DrawPlayCompared, 88 - SAL : 2259
	0x00001584 : pushz		27 ( answeredNumber )	// .\DrawPlay.h, DrawPlayCompared, 90 - SAL : 2261
	0x00001588 : pushz		26 ( questNumber )	// .\DrawPlay.h, DrawPlayCompared, 90 - SAL : 2262
	0x0000158C : gt	// .\DrawPlay.h, DrawPlayCompared, 90 - SAL : 2263
	0x0000158E : fjp		0x000015AA	// .\DrawPlay.h, DrawPlayCompared, 90 - SAL : 2264
	0x00001594 : pushc		120	// .\DrawPlay.h, DrawPlayCompared, 91 - SAL : 2266
	0x00001598 : pushc		145	// .\DrawPlay.h, DrawPlayCompared, 91 - SAL : 2267
	0x0000159C : pushmi		%%24	// .\DrawPlay.h, DrawPlayCompared, 91 - SAL : 2268
	0x000015A0 : calls		DrawStr(85)	// .\DrawPlay.h, DrawPlayCompared, 91 - SAL : 2269
	0x000015A4 : ujp		0x000015BC	// .\DrawPlay.h, DrawPlayCompared, 91 - SAL : 2270
	0x000015AA : nop	// .\DrawPlay.h, DrawPlayCompared, 91 - SAL : 2271
	0x000015AC : pushc		120	// .\DrawPlay.h, DrawPlayCompared, 94 - SAL : 2274
	0x000015B0 : pushc		145	// .\DrawPlay.h, DrawPlayCompared, 94 - SAL : 2275
	0x000015B4 : pushmi		%%25	// .\DrawPlay.h, DrawPlayCompared, 94 - SAL : 2276
	0x000015B8 : calls		DrawStr(85)	// .\DrawPlay.h, DrawPlayCompared, 94 - SAL : 2277
	0x000015BC : nop	// .\DrawPlay.h, DrawPlayCompared, 95 - SAL : 2279
	0x000015BE : nop	// .\DrawPlay.h, DrawPlayCompared, 95 - SAL : 2280
	0x000015C0 : ret	// .\DrawPlay.h, DrawPlayCompared, 96 - SAL : 2282
}


FUNCTION : DrawPlayGiveup()
{
	0x000015C2 : nop	// .\DrawPlay.h, DrawPlayGiveup, 119 - SAL : 2350
	0x000015C4 : call		0x00001216	// .\DrawPlay.h, DrawPlayGiveup, 120 - SAL : 2352
	0x000015CA : call		0x000016F2	// .\DrawPlay.h, DrawPlayGiveup, 121 - SAL : 2354
	0x000015D0 : ret	// .\DrawPlay.h, DrawPlayGiveup, 122 - SAL : 2356
}


FUNCTION : DrawPlayInput()
{
	0x000015D2 : nop	// .\DrawPlay.h, DrawPlayInput, 77 - SAL : 2234
	0x000015D4 : call		0x00001216	// .\DrawPlay.h, DrawPlayInput, 78 - SAL : 2236
	0x000015DA : ret	// .\DrawPlay.h, DrawPlayInput, 79 - SAL : 2238
}


FUNCTION : DrawPlayNextquest()
{
	0x000015DC : nop	// .\DrawPlay.h, DrawPlayNextquest, 124 - SAL : 2358
	0x000015DE : call		0x00001216	// .\DrawPlay.h, DrawPlayNextquest, 125 - SAL : 2360
	0x000015E4 : call		0x000016F2	// .\DrawPlay.h, DrawPlayNextquest, 126 - SAL : 2362
	0x000015EA : ret	// .\DrawPlay.h, DrawPlayNextquest, 127 - SAL : 2364
}


FUNCTION : DrawPlayOver()
{
	0x000015EC : nop	// .\DrawPlay.h, DrawPlayOver, 98 - SAL : 2284
	0x000015EE : call		0x00000CE0	// .\DrawPlay.h, DrawPlayOver, 99 - SAL : 2286
	0x000015F4 : pushc		1	// .\DrawPlay.h, DrawPlayOver, 100 - SAL : 2288
	0x000015F8 : calls		SetFontAlign(43)	// .\DrawPlay.h, DrawPlayOver, 100 - SAL : 2289
	0x000015FC : pushc		120	// .\DrawPlay.h, DrawPlayOver, 101 - SAL : 2291
	0x00001600 : pushc		135	// .\DrawPlay.h, DrawPlayOver, 101 - SAL : 2292
	0x00001604 : pushmi		%%26	// .\DrawPlay.h, DrawPlayOver, 101 - SAL : 2293
	0x00001608 : calls		DrawStr(85)	// .\DrawPlay.h, DrawPlayOver, 101 - SAL : 2294
	0x0000160C : ret	// .\DrawPlay.h, DrawPlayOver, 102 - SAL : 2296
}


FUNCTION : DrawPlayReady()
{
	0x0000160E : nop	// .\DrawPlay.h, DrawPlayReady, 64 - SAL : 2205
	0x00001610 : call		0x00001216	// .\DrawPlay.h, DrawPlayReady, 67 - SAL : 2208
	0x00001616 : call		0x00000FC2	// .\DrawPlay.h, DrawPlayReady, 68 - SAL : 2210
	0x0000161C : pushc		1	// .\DrawPlay.h, DrawPlayReady, 70 - SAL : 2212
	0x00001620 : calls		SetFontAlign(43)	// .\DrawPlay.h, DrawPlayReady, 70 - SAL : 2213
	0x00001624 : pushz		92 ( tempString of Function DrawPlayReady )	// .\DrawPlay.h, DrawPlayReady, 71 - SAL : 2215
	0x00001628 : pushmi		%%21	// .\DrawPlay.h, DrawPlayReady, 71 - SAL : 2216
	0x0000162C : pushz		32 ( playCount )	// .\DrawPlay.h, DrawPlayReady, 71 - SAL : 2217
	0x00001630 : pushc		1	// .\DrawPlay.h, DrawPlayReady, 71 - SAL : 2218
	0x00001634 : add	// .\DrawPlay.h, DrawPlayReady, 71 - SAL : 2219
	0x00001636 : calls		MakeStr1(174)	// .\DrawPlay.h, DrawPlayReady, 71 - SAL : 2220
	0x0000163A : pushc		120	// .\DrawPlay.h, DrawPlayReady, 72 - SAL : 2222
	0x0000163E : pushc		135	// .\DrawPlay.h, DrawPlayReady, 72 - SAL : 2223
	0x00001642 : pushmi		%%22	// .\DrawPlay.h, DrawPlayReady, 72 - SAL : 2224
	0x00001646 : calls		DrawStr(85)	// .\DrawPlay.h, DrawPlayReady, 72 - SAL : 2225
	0x0000164A : pushc		120	// .\DrawPlay.h, DrawPlayReady, 73 - SAL : 2227
	0x0000164E : pushc		155	// .\DrawPlay.h, DrawPlayReady, 73 - SAL : 2228
	0x00001652 : pushz		92 ( tempString of Function DrawPlayReady )	// .\DrawPlay.h, DrawPlayReady, 73 - SAL : 2229
	0x00001656 : calls		DrawStr(85)	// .\DrawPlay.h, DrawPlayReady, 73 - SAL : 2230
	0x0000165A : ret	// .\DrawPlay.h, DrawPlayReady, 75 - SAL : 2232
}


FUNCTION : DrawPlayRecord()
{
	0x0000165C : nop	// .\DrawPlay.h, DrawPlayRecord, 104 - SAL : 2298
	0x0000165E : call		0x0000176E	// .\DrawPlay.h, DrawPlayRecord, 105 - SAL : 2300
	0x00001664 : pushc		10	// .\DrawPlay.h, DrawPlayRecord, 106 - SAL : 2302
	0x00001668 : pushc		210	// .\DrawPlay.h, DrawPlayRecord, 106 - SAL : 2303
	0x0000166C : pushc		230	// .\DrawPlay.h, DrawPlayRecord, 106 - SAL : 2304
	0x00001670 : pushc		240	// .\DrawPlay.h, DrawPlayRecord, 106 - SAL : 2305
	0x00001674 : call		0x00000D48	// .\DrawPlay.h, DrawPlayRecord, 106 - SAL : 2306
	0x0000167A : pushc		1	// .\DrawPlay.h, DrawPlayRecord, 108 - SAL : 2308
	0x0000167E : calls		SetFontAlign(43)	// .\DrawPlay.h, DrawPlayRecord, 108 - SAL : 2309
	0x00001682 : pushz		30 ( gameRank )	// .\DrawPlay.h, DrawPlayRecord, 109 - SAL : 2311
	0x00001686 : pushc		5	// .\DrawPlay.h, DrawPlayRecord, 109 - SAL : 2312
	0x0000168A : lt	// .\DrawPlay.h, DrawPlayRecord, 109 - SAL : 2313
	0x0000168C : fjp		0x000016DC	// .\DrawPlay.h, DrawPlayRecord, 109 - SAL : 2314
	0x00001692 : pushc		140	// .\DrawPlay.h, DrawPlayRecord, 110 - SAL : 2316
	0x00001696 : calls		SetColor(38)	// .\DrawPlay.h, DrawPlayRecord, 110 - SAL : 2317
	0x0000169A : pushc		20	// .\DrawPlay.h, DrawPlayRecord, 111 - SAL : 2319
	0x0000169E : pushc		95	// .\DrawPlay.h, DrawPlayRecord, 111 - SAL : 2320
	0x000016A2 : pushz		30 ( gameRank )	// .\DrawPlay.h, DrawPlayRecord, 111 - SAL : 2321
	0x000016A6 : pushc		20	// .\DrawPlay.h, DrawPlayRecord, 111 - SAL : 2322
	0x000016AA : mult	// .\DrawPlay.h, DrawPlayRecord, 111 - SAL : 2323
	0x000016AC : add	// .\DrawPlay.h, DrawPlayRecord, 111 - SAL : 2324
	0x000016AE : pushc		220	// .\DrawPlay.h, DrawPlayRecord, 111 - SAL : 2325
	0x000016B2 : pushc		115	// .\DrawPlay.h, DrawPlayRecord, 111 - SAL : 2326
	0x000016B6 : pushz		30 ( gameRank )	// .\DrawPlay.h, DrawPlayRecord, 111 - SAL : 2327
	0x000016BA : pushc		20	// .\DrawPlay.h, DrawPlayRecord, 111 - SAL : 2328
	0x000016BE : mult	// .\DrawPlay.h, DrawPlayRecord, 111 - SAL : 2329
	0x000016C0 : add	// .\DrawPlay.h, DrawPlayRecord, 111 - SAL : 2330
	0x000016C2 : calls		DrawRect(69)	// .\DrawPlay.h, DrawPlayRecord, 111 - SAL : 2331
	0x000016C6 : pushc		120	// .\DrawPlay.h, DrawPlayRecord, 112 - SAL : 2333
	0x000016CA : pushc		220	// .\DrawPlay.h, DrawPlayRecord, 112 - SAL : 2334
	0x000016CE : pushmi		%%27	// .\DrawPlay.h, DrawPlayRecord, 112 - SAL : 2335
	0x000016D2 : calls		DrawStr(85)	// .\DrawPlay.h, DrawPlayRecord, 112 - SAL : 2336
	0x000016D6 : ujp		0x000016EE	// .\DrawPlay.h, DrawPlayRecord, 112 - SAL : 2337
	0x000016DC : nop	// .\DrawPlay.h, DrawPlayRecord, 112 - SAL : 2338
	0x000016DE : pushc		120	// .\DrawPlay.h, DrawPlayRecord, 114 - SAL : 2341
	0x000016E2 : pushc		220	// .\DrawPlay.h, DrawPlayRecord, 114 - SAL : 2342
	0x000016E6 : pushmi		%%28	// .\DrawPlay.h, DrawPlayRecord, 114 - SAL : 2343
	0x000016EA : calls		DrawStr(85)	// .\DrawPlay.h, DrawPlayRecord, 114 - SAL : 2344
	0x000016EE : nop	// .\DrawPlay.h, DrawPlayRecord, 115 - SAL : 2346
	0x000016F0 : ret	// .\DrawPlay.h, DrawPlayRecord, 117 - SAL : 2348
}


FUNCTION : DrawQuestion()
{
	0x000016F2 : nop	// .\Design.h, DrawQuestion, 45 - SAL : 631
	0x000016F4 : call		0x00000FC2	// .\Design.h, DrawQuestion, 46 - SAL : 633
	0x000016FA : pushc		1	// .\Design.h, DrawQuestion, 47 - SAL : 635
	0x000016FE : calls		SetFontAlign(43)	// .\Design.h, DrawQuestion, 47 - SAL : 636
	0x00001702 : pushc		120	// .\Design.h, DrawQuestion, 48 - SAL : 638
	0x00001706 : pushc		135	// .\Design.h, DrawQuestion, 48 - SAL : 639
	0x0000170A : pushmi		%%4	// .\Design.h, DrawQuestion, 48 - SAL : 640
	0x0000170E : calls		DrawStr(85)	// .\Design.h, DrawQuestion, 48 - SAL : 641
	0x00001712 : pushc		100	// .\Design.h, DrawQuestion, 49 - SAL : 643
	0x00001716 : pushc		155	// .\Design.h, DrawQuestion, 49 - SAL : 644
	0x0000171A : pushmi		%%5	// .\Design.h, DrawQuestion, 49 - SAL : 645
	0x0000171E : calls		DrawStr(85)	// .\Design.h, DrawQuestion, 49 - SAL : 646
	0x00001722 : pushc		160	// .\Design.h, DrawQuestion, 50 - SAL : 648
	0x00001726 : pushc		155	// .\Design.h, DrawQuestion, 50 - SAL : 649
	0x0000172A : pushmi		%%6	// .\Design.h, DrawQuestion, 50 - SAL : 650
	0x0000172E : calls		DrawStr(85)	// .\Design.h, DrawQuestion, 50 - SAL : 651
	0x00001732 : pushz		38 ( selectedValue )	// .\Design.h, DrawQuestion, 52 - SAL : 653
	0x00001736 : pushc		0	// .\Design.h, DrawQuestion, 52 - SAL : 654
	0x0000173A : eq	// .\Design.h, DrawQuestion, 52 - SAL : 655
	0x0000173C : fjp		0x00001758	// .\Design.h, DrawQuestion, 52 - SAL : 656
	0x00001742 : pushc		100	// .\Design.h, DrawQuestion, 53 - SAL : 658
	0x00001746 : pushc		157	// .\Design.h, DrawQuestion, 53 - SAL : 659
	0x0000174A : pushmi		%%7	// .\Design.h, DrawQuestion, 53 - SAL : 660
	0x0000174E : calls		DrawStr(85)	// .\Design.h, DrawQuestion, 53 - SAL : 661
	0x00001752 : ujp		0x0000176A	// .\Design.h, DrawQuestion, 53 - SAL : 662
	0x00001758 : nop	// .\Design.h, DrawQuestion, 53 - SAL : 663
	0x0000175A : pushc		160	// .\Design.h, DrawQuestion, 55 - SAL : 666
	0x0000175E : pushc		157	// .\Design.h, DrawQuestion, 55 - SAL : 667
	0x00001762 : pushmi		%%8	// .\Design.h, DrawQuestion, 55 - SAL : 668
	0x00001766 : calls		DrawStr(85)	// .\Design.h, DrawQuestion, 55 - SAL : 669
	0x0000176A : nop	// .\Design.h, DrawQuestion, 56 - SAL : 671
	0x0000176C : ret	// .\Design.h, DrawQuestion, 57 - SAL : 673
}


FUNCTION : DrawRank()
{
	0x0000176E : nop	// .\DrawNumberGuess.h, DrawRank, 66 - SAL : 2964
	0x00001770 : call		0x00000D14	// .\DrawNumberGuess.h, DrawRank, 71 - SAL : 2969
	0x00001776 : pushc		0	// .\DrawNumberGuess.h, DrawRank, 74 - SAL : 2971
	0x0000177A : calls		SetFontAlign(43)	// .\DrawNumberGuess.h, DrawRank, 74 - SAL : 2972
	0x0000177E : pushc		0	// .\DrawNumberGuess.h, DrawRank, 75 - SAL : 2974
	0x00001782 : popz		98 ( i of Function DrawRank )	// .\DrawNumberGuess.h, DrawRank, 75 - SAL : 2975
	0x00001786 : nop	// .\DrawNumberGuess.h, DrawRank, 75 - SAL : 2976
	0x00001788 : pushz		98 ( i of Function DrawRank )	// .\DrawNumberGuess.h, DrawRank, 75 - SAL : 2977
	0x0000178C : pushc		5	// .\DrawNumberGuess.h, DrawRank, 75 - SAL : 2978
	0x00001790 : lt	// .\DrawNumberGuess.h, DrawRank, 75 - SAL : 2979
	0x00001792 : fjp		0x000018AC	// .\DrawNumberGuess.h, DrawRank, 75 - SAL : 2980
	0x00001798 : pushz		100 ( printFormat of Function DrawRank )	// .\DrawNumberGuess.h, DrawRank, 76 - SAL : 2982
	0x0000179C : pushmi		%%29	// .\DrawNumberGuess.h, DrawRank, 76 - SAL : 2983
	0x000017A0 : pushz		98 ( i of Function DrawRank )	// .\DrawNumberGuess.h, DrawRank, 76 - SAL : 2984
	0x000017A4 : pushc		1	// .\DrawNumberGuess.h, DrawRank, 76 - SAL : 2985
	0x000017A8 : add	// .\DrawNumberGuess.h, DrawRank, 76 - SAL : 2986
	0x000017AA : calls		MakeStr1(174)	// .\DrawNumberGuess.h, DrawRank, 76 - SAL : 2987
	0x000017AE : pushc		40	// .\DrawNumberGuess.h, DrawRank, 77 - SAL : 2989
	0x000017B2 : pushc		100	// .\DrawNumberGuess.h, DrawRank, 77 - SAL : 2990
	0x000017B6 : pushc		20	// .\DrawNumberGuess.h, DrawRank, 77 - SAL : 2991
	0x000017BA : pushz		98 ( i of Function DrawRank )	// .\DrawNumberGuess.h, DrawRank, 77 - SAL : 2992
	0x000017BE : mult	// .\DrawNumberGuess.h, DrawRank, 77 - SAL : 2993
	0x000017C0 : add	// .\DrawNumberGuess.h, DrawRank, 77 - SAL : 2994
	0x000017C2 : pushz		100 ( printFormat of Function DrawRank )	// .\DrawNumberGuess.h, DrawRank, 77 - SAL : 2995
	0x000017C6 : calls		DrawStr(85)	// .\DrawNumberGuess.h, DrawRank, 77 - SAL : 2996
	0x000017CA : pushz		98 ( i of Function DrawRank )	// .\DrawNumberGuess.h, DrawRank, 79 - SAL : 2998
	0x000017CE : pushc		2	// .\DrawNumberGuess.h, DrawRank, 79 - SAL : 2999
	0x000017D2 : mult	// .\DrawNumberGuess.h, DrawRank, 79 - SAL : 3000
	0x000017D4 : ldrz		40 ( rank )	// .\DrawNumberGuess.h, DrawRank, 79 - SAL : 3001
	0x000017D8 : add	// .\DrawNumberGuess.h, DrawRank, 79 - SAL : 3002
	0x000017DA : pushc		0	// .\DrawNumberGuess.h, DrawRank, 79 - SAL : 3003
	0x000017DE : add	// .\DrawNumberGuess.h, DrawRank, 79 - SAL : 3004
	0x000017E0 : ixa	// .\DrawNumberGuess.h, DrawRank, 79 - SAL : 3005
	0x000017E2 : pushc		0	// .\DrawNumberGuess.h, DrawRank, 79 - SAL : 3006
	0x000017E6 : gt	// .\DrawNumberGuess.h, DrawRank, 79 - SAL : 3007
	0x000017E8 : fjp		0x0000187A	// .\DrawNumberGuess.h, DrawRank, 79 - SAL : 3008
	0x000017EE : ldrz		99 ( rankTime of Function DrawRank )	// .\DrawNumberGuess.h, DrawRank, 80 - SAL : 3010
	0x000017F2 : pushz		98 ( i of Function DrawRank )	// .\DrawNumberGuess.h, DrawRank, 80 - SAL : 3011
	0x000017F6 : pushc		2	// .\DrawNumberGuess.h, DrawRank, 80 - SAL : 3012
	0x000017FA : mult	// .\DrawNumberGuess.h, DrawRank, 80 - SAL : 3013
	0x000017FC : ldrz		40 ( rank )	// .\DrawNumberGuess.h, DrawRank, 80 - SAL : 3014
	0x00001800 : add	// .\DrawNumberGuess.h, DrawRank, 80 - SAL : 3015
	0x00001802 : pushc		1	// .\DrawNumberGuess.h, DrawRank, 80 - SAL : 3016
	0x00001806 : add	// .\DrawNumberGuess.h, DrawRank, 80 - SAL : 3017
	0x00001808 : ixa	// .\DrawNumberGuess.h, DrawRank, 80 - SAL : 3018
	0x0000180A : call		0x00001D70	// .\DrawNumberGuess.h, DrawRank, 80 - SAL : 3019
	0x00001810 : pushz		100 ( printFormat of Function DrawRank )	// .\DrawNumberGuess.h, DrawRank, 81 - SAL : 3021
	0x00001814 : pushmi		%%30	// .\DrawNumberGuess.h, DrawRank, 81 - SAL : 3022
	0x00001818 : pushz		98 ( i of Function DrawRank )	// .\DrawNumberGuess.h, DrawRank, 81 - SAL : 3023
	0x0000181C : pushc		2	// .\DrawNumberGuess.h, DrawRank, 81 - SAL : 3024
	0x00001820 : mult	// .\DrawNumberGuess.h, DrawRank, 81 - SAL : 3025
	0x00001822 : ldrz		40 ( rank )	// .\DrawNumberGuess.h, DrawRank, 81 - SAL : 3026
	0x00001826 : add	// .\DrawNumberGuess.h, DrawRank, 81 - SAL : 3027
	0x00001828 : pushc		0	// .\DrawNumberGuess.h, DrawRank, 81 - SAL : 3028
	0x0000182C : add	// .\DrawNumberGuess.h, DrawRank, 81 - SAL : 3029
	0x0000182E : ixa	// .\DrawNumberGuess.h, DrawRank, 81 - SAL : 3030
	0x00001830 : pushc		0	// .\DrawNumberGuess.h, DrawRank, 81 - SAL : 3031
	0x00001834 : ldrz		99 ( rankTime of Function DrawRank )	// .\DrawNumberGuess.h, DrawRank, 81 - SAL : 3032
	0x00001838 : add	// .\DrawNumberGuess.h, DrawRank, 81 - SAL : 3033
	0x0000183A : ixa	// .\DrawNumberGuess.h, DrawRank, 81 - SAL : 3034
	0x0000183C : pushc		1	// .\DrawNumberGuess.h, DrawRank, 81 - SAL : 3035
	0x00001840 : ldrz		99 ( rankTime of Function DrawRank )	// .\DrawNumberGuess.h, DrawRank, 81 - SAL : 3036
	0x00001844 : add	// .\DrawNumberGuess.h, DrawRank, 81 - SAL : 3037
	0x00001846 : ixa	// .\DrawNumberGuess.h, DrawRank, 81 - SAL : 3038
	0x00001848 : pushc		2	// .\DrawNumberGuess.h, DrawRank, 81 - SAL : 3039
	0x0000184C : ldrz		99 ( rankTime of Function DrawRank )	// .\DrawNumberGuess.h, DrawRank, 81 - SAL : 3040
	0x00001850 : add	// .\DrawNumberGuess.h, DrawRank, 81 - SAL : 3041
	0x00001852 : ixa	// .\DrawNumberGuess.h, DrawRank, 81 - SAL : 3042
	0x00001854 : calls		MakeStr4(177)	// .\DrawNumberGuess.h, DrawRank, 81 - SAL : 3043
	0x00001858 : pushc		80	// .\DrawNumberGuess.h, DrawRank, 82 - SAL : 3045
	0x0000185C : pushc		100	// .\DrawNumberGuess.h, DrawRank, 82 - SAL : 3046
	0x00001860 : pushc		20	// .\DrawNumberGuess.h, DrawRank, 82 - SAL : 3047
	0x00001864 : pushz		98 ( i of Function DrawRank )	// .\DrawNumberGuess.h, DrawRank, 82 - SAL : 3048
	0x00001868 : mult	// .\DrawNumberGuess.h, DrawRank, 82 - SAL : 3049
	0x0000186A : add	// .\DrawNumberGuess.h, DrawRank, 82 - SAL : 3050
	0x0000186C : pushz		100 ( printFormat of Function DrawRank )	// .\DrawNumberGuess.h, DrawRank, 82 - SAL : 3051
	0x00001870 : calls		DrawStr(85)	// .\DrawNumberGuess.h, DrawRank, 82 - SAL : 3052
	0x00001874 : ujp		0x00001898	// .\DrawNumberGuess.h, DrawRank, 82 - SAL : 3053
	0x0000187A : nop	// .\DrawNumberGuess.h, DrawRank, 82 - SAL : 3054
	0x0000187C : pushc		100	// .\DrawNumberGuess.h, DrawRank, 84 - SAL : 3057
	0x00001880 : pushc		100	// .\DrawNumberGuess.h, DrawRank, 84 - SAL : 3058
	0x00001884 : pushc		20	// .\DrawNumberGuess.h, DrawRank, 84 - SAL : 3059
	0x00001888 : pushz		98 ( i of Function DrawRank )	// .\DrawNumberGuess.h, DrawRank, 84 - SAL : 3060
	0x0000188C : mult	// .\DrawNumberGuess.h, DrawRank, 84 - SAL : 3061
	0x0000188E : add	// .\DrawNumberGuess.h, DrawRank, 84 - SAL : 3062
	0x00001890 : pushmi		%%31	// .\DrawNumberGuess.h, DrawRank, 84 - SAL : 3063
	0x00001894 : calls		DrawStr(85)	// .\DrawNumberGuess.h, DrawRank, 84 - SAL : 3064
	0x00001898 : nop	// .\DrawNumberGuess.h, DrawRank, 85 - SAL : 3066
	0x0000189A : nop	// .\DrawNumberGuess.h, DrawRank, 85 - SAL : 3067
	0x0000189C : pushz		98 ( i of Function DrawRank )	// .\DrawNumberGuess.h, DrawRank, 85 - SAL : 3068
	0x000018A0 : inc	// .\DrawNumberGuess.h, DrawRank, 85 - SAL : 3069
	0x000018A2 : popz		98 ( i of Function DrawRank )	// .\DrawNumberGuess.h, DrawRank, 85 - SAL : 3070
	0x000018A6 : ujp		0x00001786	// .\DrawNumberGuess.h, DrawRank, 85 - SAL : 3071
	0x000018AC : nop	// .\DrawNumberGuess.h, DrawRank, 86 - SAL : 3073
	0x000018AE : ret	// .\DrawNumberGuess.h, DrawRank, 87 - SAL : 3075
}


FUNCTION : EVENT_KEYPRESS()
{
	0x000018B0 : nop	// .\NumberGuess.mc, EVENT_KEYPRESS, 77 - SAL : 3225
	0x000018B2 : pushc		0	// .\NumberGuess.mc, EVENT_KEYPRESS, 79 - SAL : 3227
	0x000018B6 : calls		Clear(54)	// .\NumberGuess.mc, EVENT_KEYPRESS, 79 - SAL : 3228
	0x000018BA : call		0x00000DAC	// .\NumberGuess.mc, EVENT_KEYPRESS, 80 - SAL : 3230
	0x000018C0 : calls		Flush(95)	// .\NumberGuess.mc, EVENT_KEYPRESS, 81 - SAL : 3232
	0x000018C4 : ssp	// .\NumberGuess.mc, EVENT_KEYPRESS, 83 - SAL : 3234
	0x000018C6 : pushz		22 ( currentMode )	// .\NumberGuess.mc, EVENT_KEYPRESS, 83 - SAL : 3235
	0x000018CA : dup	// .\NumberGuess.mc, EVENT_KEYPRESS, 83 - SAL : 3236
	0x000018CC : pushc		1	// .\NumberGuess.mc, EVENT_KEYPRESS, 83 - SAL : 3237
	0x000018D0 : eq	// .\NumberGuess.mc, EVENT_KEYPRESS, 83 - SAL : 3238
	0x000018D2 : tjp		0x00001918	// .\NumberGuess.mc, EVENT_KEYPRESS, 83 - SAL : 3239
	0x000018D8 : dup	// .\NumberGuess.mc, EVENT_KEYPRESS, 83 - SAL : 3240
	0x000018DA : pushc		2	// .\NumberGuess.mc, EVENT_KEYPRESS, 83 - SAL : 3241
	0x000018DE : eq	// .\NumberGuess.mc, EVENT_KEYPRESS, 83 - SAL : 3242
	0x000018E0 : tjp		0x0000192C	// .\NumberGuess.mc, EVENT_KEYPRESS, 83 - SAL : 3243
	0x000018E6 : dup	// .\NumberGuess.mc, EVENT_KEYPRESS, 83 - SAL : 3244
	0x000018E8 : pushc		30	// .\NumberGuess.mc, EVENT_KEYPRESS, 83 - SAL : 3245
	0x000018EC : eq	// .\NumberGuess.mc, EVENT_KEYPRESS, 83 - SAL : 3246
	0x000018EE : tjp		0x00001940	// .\NumberGuess.mc, EVENT_KEYPRESS, 83 - SAL : 3247
	0x000018F4 : dup	// .\NumberGuess.mc, EVENT_KEYPRESS, 83 - SAL : 3248
	0x000018F6 : pushc		31	// .\NumberGuess.mc, EVENT_KEYPRESS, 83 - SAL : 3249
	0x000018FA : eq	// .\NumberGuess.mc, EVENT_KEYPRESS, 83 - SAL : 3250
	0x000018FC : tjp		0x00001954	// .\NumberGuess.mc, EVENT_KEYPRESS, 83 - SAL : 3251
	0x00001902 : dup	// .\NumberGuess.mc, EVENT_KEYPRESS, 83 - SAL : 3252
	0x00001904 : pushc		32	// .\NumberGuess.mc, EVENT_KEYPRESS, 83 - SAL : 3253
	0x00001908 : eq	// .\NumberGuess.mc, EVENT_KEYPRESS, 83 - SAL : 3254
	0x0000190A : tjp		0x00001968	// .\NumberGuess.mc, EVENT_KEYPRESS, 83 - SAL : 3255
	0x00001910 : rsp	// .\NumberGuess.mc, EVENT_KEYPRESS, 83 - SAL : 3256
	0x00001912 : ujp		0x00001976	// .\NumberGuess.mc, EVENT_KEYPRESS, 83 - SAL : 3257
	0x00001918 : nop	// .\NumberGuess.mc, EVENT_KEYPRESS, 83 - SAL : 3258
	0x0000191A : rsp	// .\NumberGuess.mc, EVENT_KEYPRESS, 83 - SAL : 3259
	0x0000191C : pushz		0 ( swData )	// .\NumberGuess.mc, EVENT_KEYPRESS, 85 - SAL : 3262
	0x00001920 : call		0x00000420	// .\NumberGuess.mc, EVENT_KEYPRESS, 85 - SAL : 3263
	0x00001926 : ujp		0x00001976	// .\NumberGuess.mc, EVENT_KEYPRESS, 85 - SAL : 3264
	0x0000192C : nop	// .\NumberGuess.mc, EVENT_KEYPRESS, 85 - SAL : 3265
	0x0000192E : rsp	// .\NumberGuess.mc, EVENT_KEYPRESS, 85 - SAL : 3266
	0x00001930 : pushz		0 ( swData )	// .\NumberGuess.mc, EVENT_KEYPRESS, 88 - SAL : 3270
	0x00001934 : call		0x00000454	// .\NumberGuess.mc, EVENT_KEYPRESS, 88 - SAL : 3271
	0x0000193A : ujp		0x00001976	// .\NumberGuess.mc, EVENT_KEYPRESS, 88 - SAL : 3272
	0x00001940 : nop	// .\NumberGuess.mc, EVENT_KEYPRESS, 88 - SAL : 3273
	0x00001942 : rsp	// .\NumberGuess.mc, EVENT_KEYPRESS, 88 - SAL : 3274
	0x00001944 : pushz		0 ( swData )	// .\NumberGuess.mc, EVENT_KEYPRESS, 91 - SAL : 3278
	0x00001948 : call		0x000006BA	// .\NumberGuess.mc, EVENT_KEYPRESS, 91 - SAL : 3279
	0x0000194E : ujp		0x00001976	// .\NumberGuess.mc, EVENT_KEYPRESS, 91 - SAL : 3280
	0x00001954 : nop	// .\NumberGuess.mc, EVENT_KEYPRESS, 91 - SAL : 3281
	0x00001956 : rsp	// .\NumberGuess.mc, EVENT_KEYPRESS, 91 - SAL : 3282
	0x00001958 : pushz		0 ( swData )	// .\NumberGuess.mc, EVENT_KEYPRESS, 94 - SAL : 3286
	0x0000195C : call		0x00000BE0	// .\NumberGuess.mc, EVENT_KEYPRESS, 94 - SAL : 3287
	0x00001962 : ujp		0x00001976	// .\NumberGuess.mc, EVENT_KEYPRESS, 94 - SAL : 3288
	0x00001968 : nop	// .\NumberGuess.mc, EVENT_KEYPRESS, 94 - SAL : 3289
	0x0000196A : rsp	// .\NumberGuess.mc, EVENT_KEYPRESS, 94 - SAL : 3290
	0x0000196C : pushz		0 ( swData )	// .\NumberGuess.mc, EVENT_KEYPRESS, 97 - SAL : 3294
	0x00001970 : call		0x0000059A	// .\NumberGuess.mc, EVENT_KEYPRESS, 97 - SAL : 3295
	0x00001976 : nop	// .\NumberGuess.mc, EVENT_KEYPRESS, 97 - SAL : 3296
	0x00001978 : end	// .\NumberGuess.mc, EVENT_KEYPRESS, 99 - SAL : 3299
}


FUNCTION : EVENT_RESULT()
{
	0x0000197A : nop	// .\NumberGuess.mc, EVENT_RESULT, 101 - SAL : 3301
	0x0000197C : ssp	// .\NumberGuess.mc, EVENT_RESULT, 102 - SAL : 3303
	0x0000197E : pushz		22 ( currentMode )	// .\NumberGuess.mc, EVENT_RESULT, 102 - SAL : 3304
	0x00001982 : dup	// .\NumberGuess.mc, EVENT_RESULT, 102 - SAL : 3305
	0x00001984 : pushc		30	// .\NumberGuess.mc, EVENT_RESULT, 102 - SAL : 3306
	0x00001988 : eq	// .\NumberGuess.mc, EVENT_RESULT, 102 - SAL : 3307
	0x0000198A : tjp		0x00001998	// .\NumberGuess.mc, EVENT_RESULT, 102 - SAL : 3308
	0x00001990 : rsp	// .\NumberGuess.mc, EVENT_RESULT, 102 - SAL : 3309
	0x00001992 : ujp		0x00001A6E	// .\NumberGuess.mc, EVENT_RESULT, 102 - SAL : 3310
	0x00001998 : nop	// .\NumberGuess.mc, EVENT_RESULT, 102 - SAL : 3311
	0x0000199A : rsp	// .\NumberGuess.mc, EVENT_RESULT, 102 - SAL : 3312
	0x0000199C : ssp	// .\NumberGuess.mc, EVENT_RESULT, 105 - SAL : 3315
	0x0000199E : pushz		33 ( currentPlayMode )	// .\NumberGuess.mc, EVENT_RESULT, 105 - SAL : 3316
	0x000019A2 : dup	// .\NumberGuess.mc, EVENT_RESULT, 105 - SAL : 3317
	0x000019A4 : pushc		1	// .\NumberGuess.mc, EVENT_RESULT, 105 - SAL : 3318
	0x000019A8 : eq	// .\NumberGuess.mc, EVENT_RESULT, 105 - SAL : 3319
	0x000019AA : tjp		0x000019B8	// .\NumberGuess.mc, EVENT_RESULT, 105 - SAL : 3320
	0x000019B0 : rsp	// .\NumberGuess.mc, EVENT_RESULT, 105 - SAL : 3321
	0x000019B2 : ujp		0x00001A6C	// .\NumberGuess.mc, EVENT_RESULT, 105 - SAL : 3322
	0x000019B8 : nop	// .\NumberGuess.mc, EVENT_RESULT, 105 - SAL : 3323
	0x000019BA : rsp	// .\NumberGuess.mc, EVENT_RESULT, 105 - SAL : 3324
	0x000019BC : ssp	// .\NumberGuess.mc, EVENT_RESULT, 108 - SAL : 3327
	0x000019BE : pushz		0 ( swData )	// .\NumberGuess.mc, EVENT_RESULT, 108 - SAL : 3328
	0x000019C2 : dup	// .\NumberGuess.mc, EVENT_RESULT, 108 - SAL : 3329
	0x000019C4 : pushc		2	// .\NumberGuess.mc, EVENT_RESULT, 108 - SAL : 3330
	0x000019C8 : eq	// .\NumberGuess.mc, EVENT_RESULT, 108 - SAL : 3331
	0x000019CA : tjp		0x000019D8	// .\NumberGuess.mc, EVENT_RESULT, 108 - SAL : 3332
	0x000019D0 : rsp	// .\NumberGuess.mc, EVENT_RESULT, 108 - SAL : 3333
	0x000019D2 : ujp		0x00001A6A	// .\NumberGuess.mc, EVENT_RESULT, 108 - SAL : 3334
	0x000019D8 : nop	// .\NumberGuess.mc, EVENT_RESULT, 108 - SAL : 3335
	0x000019DA : rsp	// .\NumberGuess.mc, EVENT_RESULT, 108 - SAL : 3336
	0x000019DC : pushz		35 ( inputedString )	// .\NumberGuess.mc, EVENT_RESULT, 112 - SAL : 3339
	0x000019E0 : pushmi		%%40	// .\NumberGuess.mc, EVENT_RESULT, 112 - SAL : 3340
	0x000019E4 : calls		StrCmp(164)	// .\NumberGuess.mc, EVENT_RESULT, 112 - SAL : 3341
	0x000019E8 : not	// .\NumberGuess.mc, EVENT_RESULT, 112 - SAL : 3342
	0x000019EA : fjp		0x000019FE	// .\NumberGuess.mc, EVENT_RESULT, 112 - SAL : 3343
	0x000019F0 : pushc		0	// .\NumberGuess.mc, EVENT_RESULT, 113 - SAL : 3345
	0x000019F4 : popz		27 ( answeredNumber )	// .\NumberGuess.mc, EVENT_RESULT, 113 - SAL : 3346
	0x000019F8 : ujp		0x00001A68	// .\NumberGuess.mc, EVENT_RESULT, 113 - SAL : 3347
	0x000019FE : nop	// .\NumberGuess.mc, EVENT_RESULT, 113 - SAL : 3348
	0x00001A00 : pushz		35 ( inputedString )	// .\NumberGuess.mc, EVENT_RESULT, 115 - SAL : 3351
	0x00001A04 : calls		AsciiToInt(167)	// .\NumberGuess.mc, EVENT_RESULT, 115 - SAL : 3352
	0x00001A08 : popz		27 ( answeredNumber )	// .\NumberGuess.mc, EVENT_RESULT, 115 - SAL : 3353
	0x00001A0C : pushz		27 ( answeredNumber )	// .\NumberGuess.mc, EVENT_RESULT, 116 - SAL : 3355
	0x00001A10 : pushc		0	// .\NumberGuess.mc, EVENT_RESULT, 116 - SAL : 3356
	0x00001A14 : eq	// .\NumberGuess.mc, EVENT_RESULT, 116 - SAL : 3357
	0x00001A16 : fjp		0x00001A2C	// .\NumberGuess.mc, EVENT_RESULT, 116 - SAL : 3358
	0x00001A1C : pushc		1	// .\NumberGuess.mc, EVENT_RESULT, 117 - SAL : 3360
	0x00001A20 : call		0x00002076	// .\NumberGuess.mc, EVENT_RESULT, 117 - SAL : 3361
	0x00001A26 : ujp		0x00001A66	// .\NumberGuess.mc, EVENT_RESULT, 117 - SAL : 3362
	0x00001A2C : nop	// .\NumberGuess.mc, EVENT_RESULT, 117 - SAL : 3363
	0x00001A2E : pushz		27 ( answeredNumber )	// .\NumberGuess.mc, EVENT_RESULT, 118 - SAL : 3365
	0x00001A32 : pushc		10	// .\NumberGuess.mc, EVENT_RESULT, 118 - SAL : 3366
	0x00001A36 : pushz		37 ( numberSize )	// .\NumberGuess.mc, EVENT_RESULT, 118 - SAL : 3367
	0x00001A3A : call		0x00001F10	// .\NumberGuess.mc, EVENT_RESULT, 118 - SAL : 3368
	0x00001A40 : ge	// .\NumberGuess.mc, EVENT_RESULT, 118 - SAL : 3369
	0x00001A42 : fjp		0x00001A58	// .\NumberGuess.mc, EVENT_RESULT, 118 - SAL : 3370
	0x00001A48 : pushc		2	// .\NumberGuess.mc, EVENT_RESULT, 119 - SAL : 3372
	0x00001A4C : call		0x00002076	// .\NumberGuess.mc, EVENT_RESULT, 119 - SAL : 3373
	0x00001A52 : ujp		0x00001A64	// .\NumberGuess.mc, EVENT_RESULT, 119 - SAL : 3374
	0x00001A58 : nop	// .\NumberGuess.mc, EVENT_RESULT, 119 - SAL : 3375
	0x00001A5A : pushc		0	// .\NumberGuess.mc, EVENT_RESULT, 121 - SAL : 3378
	0x00001A5E : call		0x00002076	// .\NumberGuess.mc, EVENT_RESULT, 121 - SAL : 3379
	0x00001A64 : nop	// .\NumberGuess.mc, EVENT_RESULT, 122 - SAL : 3381
	0x00001A66 : nop	// .\NumberGuess.mc, EVENT_RESULT, 122 - SAL : 3382
	0x00001A68 : nop	// .\NumberGuess.mc, EVENT_RESULT, 123 - SAL : 3384
	0x00001A6A : nop	// .\NumberGuess.mc, EVENT_RESULT, 123 - SAL : 3385
	0x00001A6C : nop	// .\NumberGuess.mc, EVENT_RESULT, 123 - SAL : 3386
	0x00001A6E : nop	// .\NumberGuess.mc, EVENT_RESULT, 123 - SAL : 3387
	0x00001A70 : end	// .\NumberGuess.mc, EVENT_RESULT, 128 - SAL : 3392
}


FUNCTION : EVENT_START()
{
	0x00001A72 : nop	// .\NumberGuess.mc, EVENT_START, 61 - SAL : 3178
	0x00001A74 : call		0x00001DC4	// .\NumberGuess.mc, EVENT_START, 62 - SAL : 3180
	0x00001A7A : pushc		50	// .\NumberGuess.mc, EVENT_START, 63 - SAL : 3182
	0x00001A7E : pushc		1	// .\NumberGuess.mc, EVENT_START, 63 - SAL : 3183
	0x00001A82 : calls		SetTimer(149)	// .\NumberGuess.mc, EVENT_START, 63 - SAL : 3184
	0x00001A86 : end	// .\NumberGuess.mc, EVENT_START, 64 - SAL : 3186
}


FUNCTION : EVENT_TIMEOUT()
{
	0x00001A88 : nop	// .\NumberGuess.mc, EVENT_TIMEOUT, 66 - SAL : 3188
	0x00001A8A : ssp	// .\NumberGuess.mc, EVENT_TIMEOUT, 67 - SAL : 3190
	0x00001A8C : pushz		0 ( swData )	// .\NumberGuess.mc, EVENT_TIMEOUT, 67 - SAL : 3191
	0x00001A90 : dup	// .\NumberGuess.mc, EVENT_TIMEOUT, 67 - SAL : 3192
	0x00001A92 : pushc		1	// .\NumberGuess.mc, EVENT_TIMEOUT, 67 - SAL : 3193
	0x00001A96 : eq	// .\NumberGuess.mc, EVENT_TIMEOUT, 67 - SAL : 3194
	0x00001A98 : tjp		0x00001AB4	// .\NumberGuess.mc, EVENT_TIMEOUT, 67 - SAL : 3195
	0x00001A9E : dup	// .\NumberGuess.mc, EVENT_TIMEOUT, 67 - SAL : 3196
	0x00001AA0 : pushc		0	// .\NumberGuess.mc, EVENT_TIMEOUT, 67 - SAL : 3197
	0x00001AA4 : eq	// .\NumberGuess.mc, EVENT_TIMEOUT, 67 - SAL : 3198
	0x00001AA6 : tjp		0x00001AC6	// .\NumberGuess.mc, EVENT_TIMEOUT, 67 - SAL : 3199
	0x00001AAC : rsp	// .\NumberGuess.mc, EVENT_TIMEOUT, 67 - SAL : 3200
	0x00001AAE : ujp		0x00001ADC	// .\NumberGuess.mc, EVENT_TIMEOUT, 67 - SAL : 3201
	0x00001AB4 : nop	// .\NumberGuess.mc, EVENT_TIMEOUT, 67 - SAL : 3202
	0x00001AB6 : rsp	// .\NumberGuess.mc, EVENT_TIMEOUT, 67 - SAL : 3203
	0x00001AB8 : pushz		36 ( timeValue )	// .\NumberGuess.mc, EVENT_TIMEOUT, 69 - SAL : 3206
	0x00001ABC : pushc		1	// .\NumberGuess.mc, EVENT_TIMEOUT, 69 - SAL : 3207
	0x00001AC0 : add	// .\NumberGuess.mc, EVENT_TIMEOUT, 69 - SAL : 3208
	0x00001AC2 : popz		36 ( timeValue )	// .\NumberGuess.mc, EVENT_TIMEOUT, 69 - SAL : 3209
	0x00001AC6 : nop	// .\NumberGuess.mc, EVENT_TIMEOUT, 69 - SAL : 3210
	0x00001AC8 : rsp	// .\NumberGuess.mc, EVENT_TIMEOUT, 69 - SAL : 3211
	0x00001ACA : pushc		0	// .\NumberGuess.mc, EVENT_TIMEOUT, 71 - SAL : 3214
	0x00001ACE : calls		Clear(54)	// .\NumberGuess.mc, EVENT_TIMEOUT, 71 - SAL : 3215
	0x00001AD2 : call		0x00000DAC	// .\NumberGuess.mc, EVENT_TIMEOUT, 72 - SAL : 3217
	0x00001AD8 : calls		Flush(95)	// .\NumberGuess.mc, EVENT_TIMEOUT, 73 - SAL : 3219
	0x00001ADC : nop	// .\NumberGuess.mc, EVENT_TIMEOUT, 73 - SAL : 3220
	0x00001ADE : end	// .\NumberGuess.mc, EVENT_TIMEOUT, 75 - SAL : 3223
}


FUNCTION : GetAidChance()
{
	0x00001AE0 : nop	// .\States.h, GetAidChance, 94 - SAL : 847
	0x00001AE2 : pushz		37 ( numberSize )	// .\States.h, GetAidChance, 95 - SAL : 849
	0x00001AE6 : pushc		2	// .\States.h, GetAidChance, 95 - SAL : 850
	0x00001AEA : sub	// .\States.h, GetAidChance, 95 - SAL : 851
	0x00001AEC : pushc		3	// .\States.h, GetAidChance, 95 - SAL : 852
	0x00001AF0 : mult	// .\States.h, GetAidChance, 95 - SAL : 853
	0x00001AF2 : ret	// .\States.h, GetAidChance, 95 - SAL : 854
}


FUNCTION : GetBonusPoint()
{
	0x00001AF4 : nop	// .\States.h, GetBonusPoint, 85 - SAL : 810
	0x00001AF6 : pushz		37 ( numberSize )	// .\States.h, GetBonusPoint, 87 - SAL : 813
	0x00001AFA : pushc		2	// .\States.h, GetBonusPoint, 87 - SAL : 814
	0x00001AFE : sub	// .\States.h, GetBonusPoint, 87 - SAL : 815
	0x00001B00 : pushc		3	// .\States.h, GetBonusPoint, 87 - SAL : 816
	0x00001B04 : mult	// .\States.h, GetBonusPoint, 87 - SAL : 817
	0x00001B06 : pushz		31 ( gameTurn )	// .\States.h, GetBonusPoint, 87 - SAL : 818
	0x00001B0A : sub	// .\States.h, GetBonusPoint, 87 - SAL : 819
	0x00001B0C : popz		71 ( bonus of Function GetBonusPoint )	// .\States.h, GetBonusPoint, 87 - SAL : 820
	0x00001B10 : pushz		71 ( bonus of Function GetBonusPoint )	// .\States.h, GetBonusPoint, 88 - SAL : 822
	0x00001B14 : pushc		0	// .\States.h, GetBonusPoint, 88 - SAL : 823
	0x00001B18 : lt	// .\States.h, GetBonusPoint, 88 - SAL : 824
	0x00001B1A : fjp		0x00001B28	// .\States.h, GetBonusPoint, 88 - SAL : 825
	0x00001B20 : pushc		0	// .\States.h, GetBonusPoint, 88 - SAL : 826
	0x00001B24 : popz		71 ( bonus of Function GetBonusPoint )	// .\States.h, GetBonusPoint, 88 - SAL : 827
	0x00001B28 : nop	// .\States.h, GetBonusPoint, 88 - SAL : 828
	0x00001B2A : pushz		71 ( bonus of Function GetBonusPoint )	// .\States.h, GetBonusPoint, 89 - SAL : 830
	0x00001B2E : pushc		100	// .\States.h, GetBonusPoint, 89 - SAL : 831
	0x00001B32 : pushz		37 ( numberSize )	// .\States.h, GetBonusPoint, 89 - SAL : 832
	0x00001B36 : pushc		5	// .\States.h, GetBonusPoint, 89 - SAL : 833
	0x00001B3A : mult	// .\States.h, GetBonusPoint, 89 - SAL : 834
	0x00001B3C : add	// .\States.h, GetBonusPoint, 89 - SAL : 835
	0x00001B3E : pushz		36 ( timeValue )	// .\States.h, GetBonusPoint, 89 - SAL : 836
	0x00001B42 : pushz		37 ( numberSize )	// .\States.h, GetBonusPoint, 89 - SAL : 837
	0x00001B46 : div	// .\States.h, GetBonusPoint, 89 - SAL : 838
	0x00001B48 : div	// .\States.h, GetBonusPoint, 89 - SAL : 839
	0x00001B4A : add	// .\States.h, GetBonusPoint, 89 - SAL : 840
	0x00001B4C : popz		71 ( bonus of Function GetBonusPoint )	// .\States.h, GetBonusPoint, 89 - SAL : 841
	0x00001B50 : pushz		71 ( bonus of Function GetBonusPoint )	// .\States.h, GetBonusPoint, 90 - SAL : 843
	0x00001B54 : ret	// .\States.h, GetBonusPoint, 90 - SAL : 844
}


FUNCTION : GetDateToInt()
{
	0x00001B56 : nop	// .\Functions.h, GetDateToInt, 39 - SAL : 460
	0x00001B58 : ldrz		58 ( tempDate of Function GetDateToInt )	// .\Functions.h, GetDateToInt, 42 - SAL : 463
	0x00001B5C : calls		GetDate(4)	// .\Functions.h, GetDateToInt, 42 - SAL : 464
	0x00001B60 : ldrz		58 ( tempDate of Function GetDateToInt )	// .\Functions.h, GetDateToInt, 44 - SAL : 466
	0x00001B64 : call		0x00000C22	// .\Functions.h, GetDateToInt, 44 - SAL : 467
	0x00001B6A : ret	// .\Functions.h, GetDateToInt, 44 - SAL : 468
}


FUNCTION : InitHistory()
{
	0x00001B6C : nop	// .\States.h, InitHistory, 56 - SAL : 774
	0x00001B6E : ldrz		28 ( historyNumber )	// .\States.h, InitHistory, 57 - SAL : 776
	0x00001B72 : pushc		1	// .\States.h, InitHistory, 57 - SAL : 777
	0x00001B76 : neg	// .\States.h, InitHistory, 57 - SAL : 778
	0x00001B78 : pushc		5	// .\States.h, InitHistory, 57 - SAL : 779
	0x00001B7C : pushc		0	// .\States.h, InitHistory, 57 - SAL : 780
	0x00001B80 : calls		ArrayToVar(221)	// .\States.h, InitHistory, 57 - SAL : 781
	0x00001B84 : ret	// .\States.h, InitHistory, 58 - SAL : 783
}


FUNCTION : InitMode()
{
	0x00001B86 : nop	// .\ModeManager.h, InitMode, 25 - SAL : 1238
	0x00001B88 : ssp	// .\ModeManager.h, InitMode, 27 - SAL : 1240
	0x00001B8A : pushz		22 ( currentMode )	// .\ModeManager.h, InitMode, 27 - SAL : 1241
	0x00001B8E : dup	// .\ModeManager.h, InitMode, 27 - SAL : 1242
	0x00001B90 : pushc		1	// .\ModeManager.h, InitMode, 27 - SAL : 1243
	0x00001B94 : eq	// .\ModeManager.h, InitMode, 27 - SAL : 1244
	0x00001B96 : tjp		0x00001BDC	// .\ModeManager.h, InitMode, 27 - SAL : 1245
	0x00001B9C : dup	// .\ModeManager.h, InitMode, 27 - SAL : 1246
	0x00001B9E : pushc		2	// .\ModeManager.h, InitMode, 27 - SAL : 1247
	0x00001BA2 : eq	// .\ModeManager.h, InitMode, 27 - SAL : 1248
	0x00001BA4 : tjp		0x00001BE6	// .\ModeManager.h, InitMode, 27 - SAL : 1249
	0x00001BAA : dup	// .\ModeManager.h, InitMode, 27 - SAL : 1250
	0x00001BAC : pushc		30	// .\ModeManager.h, InitMode, 27 - SAL : 1251
	0x00001BB0 : eq	// .\ModeManager.h, InitMode, 27 - SAL : 1252
	0x00001BB2 : tjp		0x00001BF0	// .\ModeManager.h, InitMode, 27 - SAL : 1253
	0x00001BB8 : dup	// .\ModeManager.h, InitMode, 27 - SAL : 1254
	0x00001BBA : pushc		31	// .\ModeManager.h, InitMode, 27 - SAL : 1255
	0x00001BBE : eq	// .\ModeManager.h, InitMode, 27 - SAL : 1256
	0x00001BC0 : tjp		0x00001C3E	// .\ModeManager.h, InitMode, 27 - SAL : 1257
	0x00001BC6 : dup	// .\ModeManager.h, InitMode, 27 - SAL : 1258
	0x00001BC8 : pushc		32	// .\ModeManager.h, InitMode, 27 - SAL : 1259
	0x00001BCC : eq	// .\ModeManager.h, InitMode, 27 - SAL : 1260
	0x00001BCE : tjp		0x00001C48	// .\ModeManager.h, InitMode, 27 - SAL : 1261
	0x00001BD4 : rsp	// .\ModeManager.h, InitMode, 27 - SAL : 1262
	0x00001BD6 : ujp		0x00001C54	// .\ModeManager.h, InitMode, 27 - SAL : 1263
	0x00001BDC : nop	// .\ModeManager.h, InitMode, 27 - SAL : 1264
	0x00001BDE : rsp	// .\ModeManager.h, InitMode, 27 - SAL : 1265
	0x00001BE0 : ujp		0x00001C54	// .\ModeManager.h, InitMode, 27 - SAL : 1266
	0x00001BE6 : nop	// .\ModeManager.h, InitMode, 27 - SAL : 1267
	0x00001BE8 : rsp	// .\ModeManager.h, InitMode, 27 - SAL : 1268
	0x00001BEA : ujp		0x00001C54	// .\ModeManager.h, InitMode, 27 - SAL : 1269
	0x00001BF0 : nop	// .\ModeManager.h, InitMode, 27 - SAL : 1270
	0x00001BF2 : rsp	// .\ModeManager.h, InitMode, 27 - SAL : 1271
	0x00001BF4 : pushc		0	// .\ModeManager.h, InitMode, 33 - SAL : 1278
	0x00001BF8 : popz		33 ( currentPlayMode )	// .\ModeManager.h, InitMode, 33 - SAL : 1279
	0x00001BFC : call		0x00001D60	// .\ModeManager.h, InitMode, 34 - SAL : 1281
	0x00001C02 : call		0x00001B6C	// .\ModeManager.h, InitMode, 35 - SAL : 1283
	0x00001C08 : pushc		0	// .\ModeManager.h, InitMode, 36 - SAL : 1285
	0x00001C0C : popz		25 ( gamePoint )	// .\ModeManager.h, InitMode, 36 - SAL : 1286
	0x00001C10 : pushc		0	// .\ModeManager.h, InitMode, 37 - SAL : 1288
	0x00001C14 : popz		31 ( gameTurn )	// .\ModeManager.h, InitMode, 37 - SAL : 1289
	0x00001C18 : pushc		0	// .\ModeManager.h, InitMode, 38 - SAL : 1291
	0x00001C1C : popz		27 ( answeredNumber )	// .\ModeManager.h, InitMode, 38 - SAL : 1292
	0x00001C20 : pushc		0	// .\ModeManager.h, InitMode, 39 - SAL : 1294
	0x00001C24 : popz		32 ( playCount )	// .\ModeManager.h, InitMode, 39 - SAL : 1295
	0x00001C28 : pushc		10	// .\ModeManager.h, InitMode, 40 - SAL : 1297
	0x00001C2C : call		0x00001AE0	// .\ModeManager.h, InitMode, 40 - SAL : 1298
	0x00001C32 : add	// .\ModeManager.h, InitMode, 40 - SAL : 1299
	0x00001C34 : popz		24 ( chance )	// .\ModeManager.h, InitMode, 40 - SAL : 1300
	0x00001C38 : ujp		0x00001C54	// .\ModeManager.h, InitMode, 40 - SAL : 1301
	0x00001C3E : nop	// .\ModeManager.h, InitMode, 40 - SAL : 1302
	0x00001C40 : rsp	// .\ModeManager.h, InitMode, 40 - SAL : 1303
	0x00001C42 : ujp		0x00001C54	// .\ModeManager.h, InitMode, 40 - SAL : 1304
	0x00001C48 : nop	// .\ModeManager.h, InitMode, 40 - SAL : 1305
	0x00001C4A : rsp	// .\ModeManager.h, InitMode, 40 - SAL : 1306
	0x00001C4C : pushz		37 ( numberSize )	// .\ModeManager.h, InitMode, 45 - SAL : 1312
	0x00001C50 : popz		38 ( selectedValue )	// .\ModeManager.h, InitMode, 45 - SAL : 1313
	0x00001C54 : nop	// .\ModeManager.h, InitMode, 45 - SAL : 1314
	0x00001C56 : ret	// .\ModeManager.h, InitMode, 47 - SAL : 1317
}


FUNCTION : InitPlayMode()
{
	0x00001C58 : nop	// .\ControlPlay.h, InitPlayMode, 34 - SAL : 1429
	0x00001C5A : ssp	// .\ControlPlay.h, InitPlayMode, 36 - SAL : 1431
	0x00001C5C : pushz		33 ( currentPlayMode )	// .\ControlPlay.h, InitPlayMode, 36 - SAL : 1432
	0x00001C60 : dup	// .\ControlPlay.h, InitPlayMode, 36 - SAL : 1433
	0x00001C62 : pushc		0	// .\ControlPlay.h, InitPlayMode, 36 - SAL : 1434
	0x00001C66 : eq	// .\ControlPlay.h, InitPlayMode, 36 - SAL : 1435
	0x00001C68 : tjp		0x00001CCA	// .\ControlPlay.h, InitPlayMode, 36 - SAL : 1436
	0x00001C6E : dup	// .\ControlPlay.h, InitPlayMode, 36 - SAL : 1437
	0x00001C70 : pushc		1	// .\ControlPlay.h, InitPlayMode, 36 - SAL : 1438
	0x00001C74 : eq	// .\ControlPlay.h, InitPlayMode, 36 - SAL : 1439
	0x00001C76 : tjp		0x00001CE0	// .\ControlPlay.h, InitPlayMode, 36 - SAL : 1440
	0x00001C7C : dup	// .\ControlPlay.h, InitPlayMode, 36 - SAL : 1441
	0x00001C7E : pushc		2	// .\ControlPlay.h, InitPlayMode, 36 - SAL : 1442
	0x00001C82 : eq	// .\ControlPlay.h, InitPlayMode, 36 - SAL : 1443
	0x00001C84 : tjp		0x00001CF8	// .\ControlPlay.h, InitPlayMode, 36 - SAL : 1444
	0x00001C8A : dup	// .\ControlPlay.h, InitPlayMode, 36 - SAL : 1445
	0x00001C8C : pushc		3	// .\ControlPlay.h, InitPlayMode, 36 - SAL : 1446
	0x00001C90 : eq	// .\ControlPlay.h, InitPlayMode, 36 - SAL : 1447
	0x00001C92 : tjp		0x00001D24	// .\ControlPlay.h, InitPlayMode, 36 - SAL : 1448
	0x00001C98 : dup	// .\ControlPlay.h, InitPlayMode, 36 - SAL : 1449
	0x00001C9A : pushc		4	// .\ControlPlay.h, InitPlayMode, 36 - SAL : 1450
	0x00001C9E : eq	// .\ControlPlay.h, InitPlayMode, 36 - SAL : 1451
	0x00001CA0 : tjp		0x00001D2E	// .\ControlPlay.h, InitPlayMode, 36 - SAL : 1452
	0x00001CA6 : dup	// .\ControlPlay.h, InitPlayMode, 36 - SAL : 1453
	0x00001CA8 : pushc		5	// .\ControlPlay.h, InitPlayMode, 36 - SAL : 1454
	0x00001CAC : eq	// .\ControlPlay.h, InitPlayMode, 36 - SAL : 1455
	0x00001CAE : tjp		0x00001D38	// .\ControlPlay.h, InitPlayMode, 36 - SAL : 1456
	0x00001CB4 : dup	// .\ControlPlay.h, InitPlayMode, 36 - SAL : 1457
	0x00001CB6 : pushc		6	// .\ControlPlay.h, InitPlayMode, 36 - SAL : 1458
	0x00001CBA : eq	// .\ControlPlay.h, InitPlayMode, 36 - SAL : 1459
	0x00001CBC : tjp		0x00001D50	// .\ControlPlay.h, InitPlayMode, 36 - SAL : 1460
	0x00001CC2 : rsp	// .\ControlPlay.h, InitPlayMode, 36 - SAL : 1461
	0x00001CC4 : ujp		0x00001D5C	// .\ControlPlay.h, InitPlayMode, 36 - SAL : 1462
	0x00001CCA : nop	// .\ControlPlay.h, InitPlayMode, 36 - SAL : 1463
	0x00001CCC : rsp	// .\ControlPlay.h, InitPlayMode, 36 - SAL : 1464
	0x00001CCE : call		0x00001B6C	// .\ControlPlay.h, InitPlayMode, 38 - SAL : 1467
	0x00001CD4 : call		0x00001D60	// .\ControlPlay.h, InitPlayMode, 39 - SAL : 1469
	0x00001CDA : ujp		0x00001D5C	// .\ControlPlay.h, InitPlayMode, 39 - SAL : 1470
	0x00001CE0 : nop	// .\ControlPlay.h, InitPlayMode, 39 - SAL : 1471
	0x00001CE2 : rsp	// .\ControlPlay.h, InitPlayMode, 39 - SAL : 1472
	0x00001CE4 : pushc		0	// .\ControlPlay.h, InitPlayMode, 43 - SAL : 1476
	0x00001CE8 : popz		38 ( selectedValue )	// .\ControlPlay.h, InitPlayMode, 43 - SAL : 1477
	0x00001CEC : call		0x00001ED8	// .\ControlPlay.h, InitPlayMode, 44 - SAL : 1479
	0x00001CF2 : ujp		0x00001D5C	// .\ControlPlay.h, InitPlayMode, 44 - SAL : 1480
	0x00001CF8 : nop	// .\ControlPlay.h, InitPlayMode, 44 - SAL : 1481
	0x00001CFA : rsp	// .\ControlPlay.h, InitPlayMode, 44 - SAL : 1482
	0x00001CFC : call		0x00001ED0	// .\ControlPlay.h, InitPlayMode, 47 - SAL : 1486
	0x00001D02 : pushz		24 ( chance )	// .\ControlPlay.h, InitPlayMode, 49 - SAL : 1488
	0x00001D06 : pushc		1	// .\ControlPlay.h, InitPlayMode, 49 - SAL : 1489
	0x00001D0A : sub	// .\ControlPlay.h, InitPlayMode, 49 - SAL : 1490
	0x00001D0C : popz		24 ( chance )	// .\ControlPlay.h, InitPlayMode, 49 - SAL : 1491
	0x00001D10 : pushz		31 ( gameTurn )	// .\ControlPlay.h, InitPlayMode, 51 - SAL : 1493
	0x00001D14 : pushc		1	// .\ControlPlay.h, InitPlayMode, 51 - SAL : 1494
	0x00001D18 : add	// .\ControlPlay.h, InitPlayMode, 51 - SAL : 1495
	0x00001D1A : popz		31 ( gameTurn )	// .\ControlPlay.h, InitPlayMode, 51 - SAL : 1496
	0x00001D1E : ujp		0x00001D5C	// .\ControlPlay.h, InitPlayMode, 51 - SAL : 1497
	0x00001D24 : nop	// .\ControlPlay.h, InitPlayMode, 51 - SAL : 1498
	0x00001D26 : rsp	// .\ControlPlay.h, InitPlayMode, 51 - SAL : 1499
	0x00001D28 : ujp		0x00001D5C	// .\ControlPlay.h, InitPlayMode, 51 - SAL : 1500
	0x00001D2E : nop	// .\ControlPlay.h, InitPlayMode, 51 - SAL : 1501
	0x00001D30 : rsp	// .\ControlPlay.h, InitPlayMode, 51 - SAL : 1502
	0x00001D32 : ujp		0x00001D5C	// .\ControlPlay.h, InitPlayMode, 51 - SAL : 1503
	0x00001D38 : nop	// .\ControlPlay.h, InitPlayMode, 51 - SAL : 1504
	0x00001D3A : rsp	// .\ControlPlay.h, InitPlayMode, 51 - SAL : 1505
	0x00001D3C : pushc		0	// .\ControlPlay.h, InitPlayMode, 59 - SAL : 1513
	0x00001D40 : popz		38 ( selectedValue )	// .\ControlPlay.h, InitPlayMode, 59 - SAL : 1514
	0x00001D44 : call		0x00001ED0	// .\ControlPlay.h, InitPlayMode, 60 - SAL : 1516
	0x00001D4A : ujp		0x00001D5C	// .\ControlPlay.h, InitPlayMode, 60 - SAL : 1517
	0x00001D50 : nop	// .\ControlPlay.h, InitPlayMode, 60 - SAL : 1518
	0x00001D52 : rsp	// .\ControlPlay.h, InitPlayMode, 60 - SAL : 1519
	0x00001D54 : pushc		0	// .\ControlPlay.h, InitPlayMode, 63 - SAL : 1523
	0x00001D58 : popz		38 ( selectedValue )	// .\ControlPlay.h, InitPlayMode, 63 - SAL : 1524
	0x00001D5C : nop	// .\ControlPlay.h, InitPlayMode, 63 - SAL : 1525
	0x00001D5E : ret	// .\ControlPlay.h, InitPlayMode, 67 - SAL : 1529
}


FUNCTION : InitTimer()
{
	0x00001D60 : nop	// .\States.h, InitTimer, 24 - SAL : 717
	0x00001D62 : calls		ResetTimer1(153)	// .\States.h, InitTimer, 25 - SAL : 720
	0x00001D66 : pushc		0	// .\States.h, InitTimer, 26 - SAL : 722
	0x00001D6A : popz		36 ( timeValue )	// .\States.h, InitTimer, 26 - SAL : 723
	0x00001D6E : ret	// .\States.h, InitTimer, 27 - SAL : 725
}


FUNCTION : IntToDate()
{
	0x00001D70 : nop	// .\Functions.h, IntToDate, 32 - SAL : 428
	0x00001D72 : popz		57 ( sourceDate of Function IntToDate )	// .\Functions.h, IntToDate, 32 - SAL : 429
	0x00001D76 : popz		56 ( result of Function IntToDate )	// .\Functions.h, IntToDate, 32 - SAL : 430
	0x00001D7A : pushz		56 ( result of Function IntToDate )	// .\Functions.h, IntToDate, 33 - SAL : 432
	0x00001D7E : pushz		57 ( sourceDate of Function IntToDate )	// .\Functions.h, IntToDate, 33 - SAL : 433
	0x00001D82 : pushc		31	// .\Functions.h, IntToDate, 33 - SAL : 434
	0x00001D86 : div	// .\Functions.h, IntToDate, 33 - SAL : 435
	0x00001D88 : pushc		12	// .\Functions.h, IntToDate, 33 - SAL : 436
	0x00001D8C : div	// .\Functions.h, IntToDate, 33 - SAL : 437
	0x00001D8E : sta	// .\Functions.h, IntToDate, 33 - SAL : 438
	0x00001D90 : pushz		56 ( result of Function IntToDate )	// .\Functions.h, IntToDate, 34 - SAL : 440
	0x00001D94 : pushc		1	// .\Functions.h, IntToDate, 34 - SAL : 441
	0x00001D98 : add	// .\Functions.h, IntToDate, 34 - SAL : 442
	0x00001D9A : pushz		57 ( sourceDate of Function IntToDate )	// .\Functions.h, IntToDate, 34 - SAL : 443
	0x00001D9E : pushc		31	// .\Functions.h, IntToDate, 34 - SAL : 444
	0x00001DA2 : div	// .\Functions.h, IntToDate, 34 - SAL : 445
	0x00001DA4 : pushc		12	// .\Functions.h, IntToDate, 34 - SAL : 446
	0x00001DA8 : mod	// .\Functions.h, IntToDate, 34 - SAL : 447
	0x00001DAA : sta	// .\Functions.h, IntToDate, 34 - SAL : 448
	0x00001DAC : pushz		56 ( result of Function IntToDate )	// .\Functions.h, IntToDate, 35 - SAL : 450
	0x00001DB0 : pushc		2	// .\Functions.h, IntToDate, 35 - SAL : 451
	0x00001DB4 : add	// .\Functions.h, IntToDate, 35 - SAL : 452
	0x00001DB6 : pushz		57 ( sourceDate of Function IntToDate )	// .\Functions.h, IntToDate, 35 - SAL : 453
	0x00001DBA : pushc		31	// .\Functions.h, IntToDate, 35 - SAL : 454
	0x00001DBE : mod	// .\Functions.h, IntToDate, 35 - SAL : 455
	0x00001DC0 : sta	// .\Functions.h, IntToDate, 35 - SAL : 456
	0x00001DC2 : ret	// .\Functions.h, IntToDate, 36 - SAL : 458
}


FUNCTION : LoadROM()
{
	0x00001DC4 : nop	// .\States.h, LoadROM, 156 - SAL : 992
	0x00001DC6 : pushc		0	// .\States.h, LoadROM, 157 - SAL : 994
	0x00001DCA : popz		76 ( j of Function LoadROM )	// .\States.h, LoadROM, 157 - SAL : 995
	0x00001DCE : ldrz		13 ( swRsRcvBuf )	// .\States.h, LoadROM, 159 - SAL : 997
	0x00001DD2 : pushc		0	// .\States.h, LoadROM, 159 - SAL : 998
	0x00001DD6 : pushz		42 ( gOutStr )	// .\States.h, LoadROM, 159 - SAL : 999
	0x00001DDA : pushc		12	// .\States.h, LoadROM, 159 - SAL : 1000
	0x00001DDE : calls		GetBytes(172)	// .\States.h, LoadROM, 159 - SAL : 1001
	0x00001DE2 : ldrz		41 ( NVROM )	// .\States.h, LoadROM, 160 - SAL : 1003
	0x00001DE6 : pushc		12	// .\States.h, LoadROM, 160 - SAL : 1004
	0x00001DEA : calls		GetUserNV(147)	// .\States.h, LoadROM, 160 - SAL : 1005
	0x00001DEE : pushc		0	// .\States.h, LoadROM, 163 - SAL : 1007
	0x00001DF2 : ldrz		41 ( NVROM )	// .\States.h, LoadROM, 163 - SAL : 1008
	0x00001DF6 : add	// .\States.h, LoadROM, 163 - SAL : 1009
	0x00001DF8 : ixa	// .\States.h, LoadROM, 163 - SAL : 1010
	0x00001DFA : pushc		4096	// .\States.h, LoadROM, 163 - SAL : 1011
	0x00001DFE : ne	// .\States.h, LoadROM, 163 - SAL : 1012
	0x00001E00 : fjp		0x00001E32	// .\States.h, LoadROM, 163 - SAL : 1013
	0x00001E06 : pushc		0	// .\States.h, LoadROM, 164 - SAL : 1015
	0x00001E0A : ldrz		41 ( NVROM )	// .\States.h, LoadROM, 164 - SAL : 1016
	0x00001E0E : add	// .\States.h, LoadROM, 164 - SAL : 1017
	0x00001E10 : pushc		4096	// .\States.h, LoadROM, 164 - SAL : 1018
	0x00001E14 : sta	// .\States.h, LoadROM, 164 - SAL : 1019
	0x00001E16 : pushc		1	// .\States.h, LoadROM, 165 - SAL : 1021
	0x00001E1A : ldrz		41 ( NVROM )	// .\States.h, LoadROM, 165 - SAL : 1022
	0x00001E1E : add	// .\States.h, LoadROM, 165 - SAL : 1023
	0x00001E20 : pushc		2	// .\States.h, LoadROM, 165 - SAL : 1024
	0x00001E24 : sta	// .\States.h, LoadROM, 165 - SAL : 1025
	0x00001E26 : ldrz		41 ( NVROM )	// .\States.h, LoadROM, 166 - SAL : 1027
	0x00001E2A : pushc		12	// .\States.h, LoadROM, 166 - SAL : 1028
	0x00001E2E : calls		PutUserNV(148)	// .\States.h, LoadROM, 166 - SAL : 1029
	0x00001E32 : nop	// .\States.h, LoadROM, 167 - SAL : 1031
	0x00001E34 : pushc		0	// .\States.h, LoadROM, 169 - SAL : 1033
	0x00001E38 : popz		75 ( i of Function LoadROM )	// .\States.h, LoadROM, 169 - SAL : 1034
	0x00001E3C : nop	// .\States.h, LoadROM, 169 - SAL : 1035
	0x00001E3E : pushz		75 ( i of Function LoadROM )	// .\States.h, LoadROM, 169 - SAL : 1036
	0x00001E42 : pushc		5	// .\States.h, LoadROM, 169 - SAL : 1037
	0x00001E46 : lt	// .\States.h, LoadROM, 169 - SAL : 1038
	0x00001E48 : fjp		0x00001EBC	// .\States.h, LoadROM, 169 - SAL : 1039
	0x00001E4E : pushz		76 ( j of Function LoadROM )	// .\States.h, LoadROM, 170 - SAL : 1041
	0x00001E52 : pushc		2	// .\States.h, LoadROM, 170 - SAL : 1042
	0x00001E56 : add	// .\States.h, LoadROM, 170 - SAL : 1043
	0x00001E58 : popz		76 ( j of Function LoadROM )	// .\States.h, LoadROM, 170 - SAL : 1044
	0x00001E5C : pushz		75 ( i of Function LoadROM )	// .\States.h, LoadROM, 171 - SAL : 1046
	0x00001E60 : pushc		2	// .\States.h, LoadROM, 171 - SAL : 1047
	0x00001E64 : mult	// .\States.h, LoadROM, 171 - SAL : 1048
	0x00001E66 : ldrz		40 ( rank )	// .\States.h, LoadROM, 171 - SAL : 1049
	0x00001E6A : add	// .\States.h, LoadROM, 171 - SAL : 1050
	0x00001E6C : pushc		0	// .\States.h, LoadROM, 171 - SAL : 1051
	0x00001E70 : add	// .\States.h, LoadROM, 171 - SAL : 1052
	0x00001E72 : pushz		76 ( j of Function LoadROM )	// .\States.h, LoadROM, 171 - SAL : 1053
	0x00001E76 : ldrz		41 ( NVROM )	// .\States.h, LoadROM, 171 - SAL : 1054
	0x00001E7A : add	// .\States.h, LoadROM, 171 - SAL : 1055
	0x00001E7C : ixa	// .\States.h, LoadROM, 171 - SAL : 1056
	0x00001E7E : sta	// .\States.h, LoadROM, 171 - SAL : 1057
	0x00001E80 : pushz		75 ( i of Function LoadROM )	// .\States.h, LoadROM, 172 - SAL : 1059
	0x00001E84 : pushc		2	// .\States.h, LoadROM, 172 - SAL : 1060
	0x00001E88 : mult	// .\States.h, LoadROM, 172 - SAL : 1061
	0x00001E8A : ldrz		40 ( rank )	// .\States.h, LoadROM, 172 - SAL : 1062
	0x00001E8E : add	// .\States.h, LoadROM, 172 - SAL : 1063
	0x00001E90 : pushc		1	// .\States.h, LoadROM, 172 - SAL : 1064
	0x00001E94 : add	// .\States.h, LoadROM, 172 - SAL : 1065
	0x00001E96 : pushz		76 ( j of Function LoadROM )	// .\States.h, LoadROM, 172 - SAL : 1066
	0x00001E9A : pushc		1	// .\States.h, LoadROM, 172 - SAL : 1067
	0x00001E9E : add	// .\States.h, LoadROM, 172 - SAL : 1068
	0x00001EA0 : ldrz		41 ( NVROM )	// .\States.h, LoadROM, 172 - SAL : 1069
	0x00001EA4 : add	// .\States.h, LoadROM, 172 - SAL : 1070
	0x00001EA6 : ixa	// .\States.h, LoadROM, 172 - SAL : 1071
	0x00001EA8 : sta	// .\States.h, LoadROM, 172 - SAL : 1072
	0x00001EAA : nop	// .\States.h, LoadROM, 172 - SAL : 1073
	0x00001EAC : pushz		75 ( i of Function LoadROM )	// .\States.h, LoadROM, 172 - SAL : 1074
	0x00001EB0 : inc	// .\States.h, LoadROM, 172 - SAL : 1075
	0x00001EB2 : popz		75 ( i of Function LoadROM )	// .\States.h, LoadROM, 172 - SAL : 1076
	0x00001EB6 : ujp		0x00001E3C	// .\States.h, LoadROM, 172 - SAL : 1077
	0x00001EBC : nop	// .\States.h, LoadROM, 173 - SAL : 1079
	0x00001EBE : pushc		1	// .\States.h, LoadROM, 176 - SAL : 1081
	0x00001EC2 : ldrz		41 ( NVROM )	// .\States.h, LoadROM, 176 - SAL : 1082
	0x00001EC6 : add	// .\States.h, LoadROM, 176 - SAL : 1083
	0x00001EC8 : ixa	// .\States.h, LoadROM, 176 - SAL : 1084
	0x00001ECA : popz		37 ( numberSize )	// .\States.h, LoadROM, 176 - SAL : 1085
	0x00001ECE : ret	// .\States.h, LoadROM, 178 - SAL : 1087
}


FUNCTION : PauseTimer()
{
	0x00001ED0 : nop	// .\States.h, PauseTimer, 29 - SAL : 727
	0x00001ED2 : calls		ResetTimer1(153)	// .\States.h, PauseTimer, 30 - SAL : 729
	0x00001ED6 : ret	// .\States.h, PauseTimer, 31 - SAL : 731
}


FUNCTION : PlayTimer()
{
	0x00001ED8 : nop	// .\States.h, PlayTimer, 33 - SAL : 733
	0x00001EDA : pushc		50	// .\States.h, PlayTimer, 34 - SAL : 735
	0x00001EDE : pushc		1	// .\States.h, PlayTimer, 34 - SAL : 736
	0x00001EE2 : calls		SetTimer1(150)	// .\States.h, PlayTimer, 34 - SAL : 737
	0x00001EE6 : ret	// .\States.h, PlayTimer, 35 - SAL : 739
}


FUNCTION : PointUp()
{
	0x00001EE8 : nop	// .\States.h, PointUp, 77 - SAL : 794
	0x00001EEA : pushz		25 ( gamePoint )	// .\States.h, PointUp, 79 - SAL : 796
	0x00001EEE : pushz		37 ( numberSize )	// .\States.h, PointUp, 79 - SAL : 797
	0x00001EF2 : pushc		8	// .\States.h, PointUp, 79 - SAL : 798
	0x00001EF6 : add	// .\States.h, PointUp, 79 - SAL : 799
	0x00001EF8 : add	// .\States.h, PointUp, 79 - SAL : 800
	0x00001EFA : popz		25 ( gamePoint )	// .\States.h, PointUp, 79 - SAL : 801
	0x00001EFE : pushz		25 ( gamePoint )	// .\States.h, PointUp, 81 - SAL : 803
	0x00001F02 : call		0x00001AF4	// .\States.h, PointUp, 81 - SAL : 804
	0x00001F08 : add	// .\States.h, PointUp, 81 - SAL : 805
	0x00001F0A : popz		25 ( gamePoint )	// .\States.h, PointUp, 81 - SAL : 806
	0x00001F0E : ret	// .\States.h, PointUp, 82 - SAL : 808
}


FUNCTION : Power()
{
	0x00001F10 : nop	// .\Functions.h, Power, 11 - SAL : 358
	0x00001F12 : popz		51 ( exp of Function Power )	// .\Functions.h, Power, 11 - SAL : 359
	0x00001F16 : popz		50 ( n of Function Power )	// .\Functions.h, Power, 11 - SAL : 360
	0x00001F1A : pushz		50 ( n of Function Power )	// .\Functions.h, Power, 13 - SAL : 363
	0x00001F1E : popz		53 ( result of Function Power )	// .\Functions.h, Power, 13 - SAL : 364
	0x00001F22 : pushc		1	// .\Functions.h, Power, 14 - SAL : 366
	0x00001F26 : popz		52 ( i of Function Power )	// .\Functions.h, Power, 14 - SAL : 367
	0x00001F2A : nop	// .\Functions.h, Power, 14 - SAL : 368
	0x00001F2C : pushz		52 ( i of Function Power )	// .\Functions.h, Power, 14 - SAL : 369
	0x00001F30 : pushz		51 ( exp of Function Power )	// .\Functions.h, Power, 14 - SAL : 370
	0x00001F34 : lt	// .\Functions.h, Power, 14 - SAL : 371
	0x00001F36 : fjp		0x00001F5C	// .\Functions.h, Power, 14 - SAL : 372
	0x00001F3C : pushz		53 ( result of Function Power )	// .\Functions.h, Power, 15 - SAL : 374
	0x00001F40 : pushz		50 ( n of Function Power )	// .\Functions.h, Power, 15 - SAL : 375
	0x00001F44 : mult	// .\Functions.h, Power, 15 - SAL : 376
	0x00001F46 : popz		53 ( result of Function Power )	// .\Functions.h, Power, 15 - SAL : 377
	0x00001F4A : nop	// .\Functions.h, Power, 15 - SAL : 378
	0x00001F4C : pushz		52 ( i of Function Power )	// .\Functions.h, Power, 15 - SAL : 379
	0x00001F50 : inc	// .\Functions.h, Power, 15 - SAL : 380
	0x00001F52 : popz		52 ( i of Function Power )	// .\Functions.h, Power, 15 - SAL : 381
	0x00001F56 : ujp		0x00001F2A	// .\Functions.h, Power, 15 - SAL : 382
	0x00001F5C : nop	// .\Functions.h, Power, 16 - SAL : 384
	0x00001F5E : pushz		53 ( result of Function Power )	// .\Functions.h, Power, 17 - SAL : 386
	0x00001F62 : ret	// .\Functions.h, Power, 17 - SAL : 387
}


FUNCTION : SaveOption()
{
	0x00001F64 : nop	// .\States.h, SaveOption, 194 - SAL : 1148
	0x00001F66 : pushc		1	// .\States.h, SaveOption, 195 - SAL : 1150
	0x00001F6A : ldrz		41 ( NVROM )	// .\States.h, SaveOption, 195 - SAL : 1151
	0x00001F6E : add	// .\States.h, SaveOption, 195 - SAL : 1152
	0x00001F70 : pushz		37 ( numberSize )	// .\States.h, SaveOption, 195 - SAL : 1153
	0x00001F74 : sta	// .\States.h, SaveOption, 195 - SAL : 1154
	0x00001F76 : ldrz		41 ( NVROM )	// .\States.h, SaveOption, 196 - SAL : 1156
	0x00001F7A : pushc		12	// .\States.h, SaveOption, 196 - SAL : 1157
	0x00001F7E : calls		PutUserNV(148)	// .\States.h, SaveOption, 196 - SAL : 1158
	0x00001F82 : ret	// .\States.h, SaveOption, 197 - SAL : 1160
}


FUNCTION : SaveRank()
{
	0x00001F84 : nop	// .\States.h, SaveRank, 181 - SAL : 1089
	0x00001F86 : pushc		0	// .\States.h, SaveRank, 182 - SAL : 1091
	0x00001F8A : popz		78 ( j of Function SaveRank )	// .\States.h, SaveRank, 182 - SAL : 1092
	0x00001F8E : pushc		0	// .\States.h, SaveRank, 184 - SAL : 1094
	0x00001F92 : popz		77 ( i of Function SaveRank )	// .\States.h, SaveRank, 184 - SAL : 1095
	0x00001F96 : nop	// .\States.h, SaveRank, 184 - SAL : 1096
	0x00001F98 : pushz		77 ( i of Function SaveRank )	// .\States.h, SaveRank, 184 - SAL : 1097
	0x00001F9C : pushc		5	// .\States.h, SaveRank, 184 - SAL : 1098
	0x00001FA0 : lt	// .\States.h, SaveRank, 184 - SAL : 1099
	0x00001FA2 : fjp		0x00002016	// .\States.h, SaveRank, 184 - SAL : 1100
	0x00001FA8 : pushz		78 ( j of Function SaveRank )	// .\States.h, SaveRank, 185 - SAL : 1102
	0x00001FAC : pushc		2	// .\States.h, SaveRank, 185 - SAL : 1103
	0x00001FB0 : add	// .\States.h, SaveRank, 185 - SAL : 1104
	0x00001FB2 : popz		78 ( j of Function SaveRank )	// .\States.h, SaveRank, 185 - SAL : 1105
	0x00001FB6 : pushz		78 ( j of Function SaveRank )	// .\States.h, SaveRank, 186 - SAL : 1107
	0x00001FBA : ldrz		41 ( NVROM )	// .\States.h, SaveRank, 186 - SAL : 1108
	0x00001FBE : add	// .\States.h, SaveRank, 186 - SAL : 1109
	0x00001FC0 : pushz		77 ( i of Function SaveRank )	// .\States.h, SaveRank, 186 - SAL : 1110
	0x00001FC4 : pushc		2	// .\States.h, SaveRank, 186 - SAL : 1111
	0x00001FC8 : mult	// .\States.h, SaveRank, 186 - SAL : 1112
	0x00001FCA : ldrz		40 ( rank )	// .\States.h, SaveRank, 186 - SAL : 1113
	0x00001FCE : add	// .\States.h, SaveRank, 186 - SAL : 1114
	0x00001FD0 : pushc		0	// .\States.h, SaveRank, 186 - SAL : 1115
	0x00001FD4 : add	// .\States.h, SaveRank, 186 - SAL : 1116
	0x00001FD6 : ixa	// .\States.h, SaveRank, 186 - SAL : 1117
	0x00001FD8 : sta	// .\States.h, SaveRank, 186 - SAL : 1118
	0x00001FDA : pushz		78 ( j of Function SaveRank )	// .\States.h, SaveRank, 187 - SAL : 1120
	0x00001FDE : pushc		1	// .\States.h, SaveRank, 187 - SAL : 1121
	0x00001FE2 : add	// .\States.h, SaveRank, 187 - SAL : 1122
	0x00001FE4 : ldrz		41 ( NVROM )	// .\States.h, SaveRank, 187 - SAL : 1123
	0x00001FE8 : add	// .\States.h, SaveRank, 187 - SAL : 1124
	0x00001FEA : pushz		77 ( i of Function SaveRank )	// .\States.h, SaveRank, 187 - SAL : 1125
	0x00001FEE : pushc		2	// .\States.h, SaveRank, 187 - SAL : 1126
	0x00001FF2 : mult	// .\States.h, SaveRank, 187 - SAL : 1127
	0x00001FF4 : ldrz		40 ( rank )	// .\States.h, SaveRank, 187 - SAL : 1128
	0x00001FF8 : add	// .\States.h, SaveRank, 187 - SAL : 1129
	0x00001FFA : pushc		1	// .\States.h, SaveRank, 187 - SAL : 1130
	0x00001FFE : add	// .\States.h, SaveRank, 187 - SAL : 1131
	0x00002000 : ixa	// .\States.h, SaveRank, 187 - SAL : 1132
	0x00002002 : sta	// .\States.h, SaveRank, 187 - SAL : 1133
	0x00002004 : nop	// .\States.h, SaveRank, 187 - SAL : 1134
	0x00002006 : pushz		77 ( i of Function SaveRank )	// .\States.h, SaveRank, 187 - SAL : 1135
	0x0000200A : inc	// .\States.h, SaveRank, 187 - SAL : 1136
	0x0000200C : popz		77 ( i of Function SaveRank )	// .\States.h, SaveRank, 187 - SAL : 1137
	0x00002010 : ujp		0x00001F96	// .\States.h, SaveRank, 187 - SAL : 1138
	0x00002016 : nop	// .\States.h, SaveRank, 188 - SAL : 1140
	0x00002018 : ldrz		41 ( NVROM )	// .\States.h, SaveRank, 189 - SAL : 1142
	0x0000201C : pushc		12	// .\States.h, SaveRank, 189 - SAL : 1143
	0x00002020 : calls		PutUserNV(148)	// .\States.h, SaveRank, 189 - SAL : 1144
	0x00002024 : ret	// .\States.h, SaveRank, 191 - SAL : 1146
}


FUNCTION : TEST()
{
	0x00002026 : nop	// .\NumberGuess.mc, TEST, 53 - SAL : 3150
	0x00002028 : pushc		0	// .\NumberGuess.mc, TEST, 54 - SAL : 3153
	0x0000202C : calls		SetFontAlign(43)	// .\NumberGuess.mc, TEST, 54 - SAL : 3154
	0x00002030 : pushc		14	// .\NumberGuess.mc, TEST, 55 - SAL : 3156
	0x00002034 : pushc		250	// .\NumberGuess.mc, TEST, 55 - SAL : 3157
	0x00002038 : pushmi		%%38	// .\NumberGuess.mc, TEST, 55 - SAL : 3158
	0x0000203C : calls		DrawStr(85)	// .\NumberGuess.mc, TEST, 55 - SAL : 3159
	0x00002040 : pushc		50	// .\NumberGuess.mc, TEST, 56 - SAL : 3161
	0x00002044 : pushc		250	// .\NumberGuess.mc, TEST, 56 - SAL : 3162
	0x00002048 : pushz		26 ( questNumber )	// .\NumberGuess.mc, TEST, 56 - SAL : 3163
	0x0000204C : call		0x00000F00	// .\NumberGuess.mc, TEST, 56 - SAL : 3164
	0x00002052 : pushc		14	// .\NumberGuess.mc, TEST, 57 - SAL : 3166
	0x00002056 : pushc		270	// .\NumberGuess.mc, TEST, 57 - SAL : 3167
	0x0000205A : pushmi		%%39	// .\NumberGuess.mc, TEST, 57 - SAL : 3168
	0x0000205E : calls		DrawStr(85)	// .\NumberGuess.mc, TEST, 57 - SAL : 3169
	0x00002062 : pushc		50	// .\NumberGuess.mc, TEST, 58 - SAL : 3171
	0x00002066 : pushc		270	// .\NumberGuess.mc, TEST, 58 - SAL : 3172
	0x0000206A : pushz		36 ( timeValue )	// .\NumberGuess.mc, TEST, 58 - SAL : 3173
	0x0000206E : call		0x00000F00	// .\NumberGuess.mc, TEST, 58 - SAL : 3174
	0x00002074 : ret	// .\NumberGuess.mc, TEST, 59 - SAL : 3176
}


FUNCTION : error()
{
	0x00002076 : nop	// .\States.h, error, 72 - SAL : 786
	0x00002078 : popz		70 ( error of Function error )	// .\States.h, error, 72 - SAL : 787
	0x0000207C : pushz		70 ( error of Function error )	// .\States.h, error, 73 - SAL : 789
	0x00002080 : popz		39 ( errorType )	// .\States.h, error, 73 - SAL : 790
	0x00002084 : ret	// .\States.h, error, 74 - SAL : 792
}

====================== SYMBOL TABLE =====================

========================================================
			SYMBOL TABLE

--------------------------------------------------------
	  VALID VAR(STATIC) : 0 - ().swData
	  VALID VAR(STATIC) : 1 - ().swData2
	  VALID VAR(STATIC) : 2 - ().swData3
	  VALID VAR(STATIC) : 3 - ().swData4
	  VALID VAR(STATIC) : 4 - ().swWidth
	  VALID VAR(STATIC) : 5 - ().swHeight
	  VALID VAR(STATIC) : 6 - ().swFrame
	  VALID VAR(STATIC) : 7 - ().swFrame2
	  VALID VAR(STATIC) : 8 - ().swFrame3
	  VALID VAR(STATIC) : 9 - ().swFrame6
	  VALID VAR(STATIC) : 10 - ().swVMver
	  VALID VAR(STATIC) : 11 - ().swModel
	  VALID VAR(STATIC) : 12 - ().swSmsRcvBuf
	  VALID VAR(STATIC) : 13 - ().swRsRcvBuf
	  VALID VAR(STATIC) : 14 - ().swRcvBuf
	  VALID VAR(STATIC) : 15 - ().swReserved1
	  VALID VAR(STATIC) : 16 - ().swReserved2
	  VALID VAR(STATIC) : 17 - ().swReserved3
	  VALID VAR(STATIC) : 18 - ().swReserved4
	  VALID VAR(STATIC) : 19 - ().swSbuf
	  VALID VAR(STATIC) : 20 - ().LABEL_TITLE
	  VALID VAR(STATIC) : 21 - ().LABEL_MENU
	  VALID VAR(STATIC) : 22 - ().currentMode
	  VALID VAR(STATIC) : 23 - ().currentMenu
	  VALID VAR(STATIC) : 24 - ().chance
	  VALID VAR(STATIC) : 25 - ().gamePoint
	  VALID VAR(STATIC) : 26 - ().questNumber
	  VALID VAR(STATIC) : 27 - ().answeredNumber
	  VALID VAR(STATIC) : 28 - ().historyNumber
	  VALID VAR(STATIC) : 29 - ().lastHistoryIndex
	  VALID VAR(STATIC) : 30 - ().gameRank
	  VALID VAR(STATIC) : 31 - ().gameTurn
	  VALID VAR(STATIC) : 32 - ().playCount
	  VALID VAR(STATIC) : 33 - ().currentPlayMode
	  VALID VAR(STATIC) : 34 - ().prevPlayMode
	  VALID VAR(STATIC) : 35 - ().inputedString
	  VALID VAR(STATIC) : 36 - ().timeValue
	  VALID VAR(STATIC) : 37 - ().numberSize
	  VALID VAR(STATIC) : 38 - ().selectedValue
	  VALID VAR(STATIC) : 39 - ().errorType
	  VALID VAR(STATIC) : 40 - ().rank
	  VALID VAR(STATIC) : 41 - ().NVROM
	  VALID VAR(STATIC) : 42 - ().gOutStr
	  VALID VAR(STATIC) : 43 - ().delayTime
	  VALID VAR(STATIC) : 44 - ().delayKey
	  VALID VAR(STATIC) : 45 - ().testString
	  VALID VAR(STATIC) : 46 - DrawInt().x
	  VALID VAR(STATIC) : 47 - DrawInt().y
	  VALID VAR(STATIC) : 48 - DrawInt().value
	  VALID VAR(STATIC) : 49 - DrawInt().str
	  VALID VAR(STATIC) : 50 - Power().n
	  VALID VAR(STATIC) : 51 - Power().exp
	  VALID VAR(STATIC) : 52 - Power().i
	  VALID VAR(STATIC) : 53 - Power().result
	  VALID VAR(STATIC) : 54 - DateToInt().sourceDate
	  VALID VAR(STATIC) : 55 - DateToInt().result
	  VALID VAR(STATIC) : 56 - IntToDate().result
	  VALID VAR(STATIC) : 57 - IntToDate().sourceDate
	  VALID VAR(STATIC) : 58 - GetDateToInt().tempDate
	  VALID VAR(STATIC) : 59 - DrawBlueBox().x1
	  VALID VAR(STATIC) : 60 - DrawBlueBox().y1
	  VALID VAR(STATIC) : 61 - DrawBlueBox().x2
	  VALID VAR(STATIC) : 62 - DrawBlueBox().y2
	  VALID VAR(STATIC) : 63 - DrawPinkBox().x1
	  VALID VAR(STATIC) : 64 - DrawPinkBox().y1
	  VALID VAR(STATIC) : 65 - DrawPinkBox().x2
	  VALID VAR(STATIC) : 66 - DrawPinkBox().y2
	  VALID VAR(STATIC) : 67 - DrawHistory().rowIndex
	  VALID VAR(STATIC) : 68 - DrawHistory().historyNum
	  VALID VAR(STATIC) : 69 - AddHistory().value
	  VALID VAR(STATIC) : 70 - error().error
	  VALID VAR(STATIC) : 71 - GetBonusPoint().bonus
	  VALID VAR(STATIC) : 72 - AddRank().point
	  VALID VAR(STATIC) : 73 - AddRank().rankNumber
	  VALID VAR(STATIC) : 74 - AddRank().i
	  VALID VAR(STATIC) : 75 - LoadROM().i
	  VALID VAR(STATIC) : 76 - LoadROM().j
	  VALID VAR(STATIC) : 77 - SaveRank().i
	  VALID VAR(STATIC) : 78 - SaveRank().j
	  VALID VAR(STATIC) : 79 - ChangeMode().mode
	  VALID VAR(STATIC) : 80 - ChangeMode().prevMode
	  VALID VAR(STATIC) : 81 - ChangePlayMode().mode
	  VALID VAR(STATIC) : 82 - ControlPlayReady().key
	  VALID VAR(STATIC) : 83 - ControlPlayInput().key
	  VALID VAR(STATIC) : 84 - ControlPlayCompared().key
	  VALID VAR(STATIC) : 85 - ControlPlayOver().key
	  VALID VAR(STATIC) : 86 - ControlPlayRecord().key
	  VALID VAR(STATIC) : 87 - ControlPlayGiveup().key
	  VALID VAR(STATIC) : 88 - ControlPlayNextquest().key
	  VALID VAR(STATIC) : 89 - DrawPlayBase().tempString
	  VALID VAR(STATIC) : 90 - DrawPlayBase().rowIndex
	  VALID VAR(STATIC) : 91 - DrawPlayBase().i
	  VALID VAR(STATIC) : 92 - DrawPlayReady().tempString
	  VALID VAR(STATIC) : 93 - ControlIndex().key
	  VALID VAR(STATIC) : 94 - ControlMain().key
	  VALID VAR(STATIC) : 95 - ControlPlay().key
	  VALID VAR(STATIC) : 96 - ControlRank().key
	  VALID VAR(STATIC) : 97 - ControlOption().key
	  VALID VAR(STATIC) : 98 - DrawRank().i
	  VALID VAR(STATIC) : 99 - DrawRank().rankTime
	  VALID VAR(STATIC) : 100 - DrawRank().printFormat
========================================================

============================== SYMBOL POOL ==============================
0  th SYMBOL POOL[0x000023B0] : Real Offset 0x000023B0
1  th SYMBOL POOL[0x000023B4] : Real Offset 0x000023B4
2  th SYMBOL POOL[0x000023B8] : Real Offset 0x000023B8
3  th SYMBOL POOL[0x000023BC] : Real Offset 0x000023BC
4  th SYMBOL POOL[0x000023C0] : Real Offset 0x000023C0
5  th SYMBOL POOL[0x000023C4] : Real Offset 0x000023C4
6  th SYMBOL POOL[0x000023C8] : Real Offset 0x000023C8
7  th SYMBOL POOL[0x000023CC] : Real Offset 0x000023CC
8  th SYMBOL POOL[0x000023D0] : Real Offset 0x000023D0
9  th SYMBOL POOL[0x000023D4] : Real Offset 0x000023D4
10 th SYMBOL POOL[0x000023D8] : Real Offset 0x000023D8
11 th SYMBOL POOL[0x000023E4] : Real Offset 0x000023E4
12 th SYMBOL POOL[0x00002404] : Real Offset 0x00002404
13 th SYMBOL POOL[0x000024A8] : Real Offset 0x000024A8
14 th SYMBOL POOL[0x000026A8] : Real Offset 0x000026A8
15 th SYMBOL POOL[0x00002AA8] : Real Offset 0x00002AA8
16 th SYMBOL POOL[0x00002AAC] : Real Offset 0x00002AAC
17 th SYMBOL POOL[0x00002AB0] : Real Offset 0x00002AB0
18 th SYMBOL POOL[0x00002AB4] : Real Offset 0x00002AB4
19 th SYMBOL POOL[0x00002AB8] : Real Offset 0x00002AB8
20 th SYMBOL POOL[0x00002ABC] : Real Offset 0x00002ABC
21 th SYMBOL POOL[0x00002AC0] : Real Offset 0x00002AC0
22 th SYMBOL POOL[0x00002ACC] : Real Offset 0x00002ACC
23 th SYMBOL POOL[0x00002AD0] : Real Offset 0x00002AD0
24 th SYMBOL POOL[0x00002AD4] : Real Offset 0x00002AD4
25 th SYMBOL POOL[0x00002AD8] : Real Offset 0x00002AD8
26 th SYMBOL POOL[0x00002ADC] : Real Offset 0x00002ADC
27 th SYMBOL POOL[0x00002AE0] : Real Offset 0x00002AE0
28 th SYMBOL POOL[0x00002AE4] : Real Offset 0x00002AE4
29 th SYMBOL POOL[0x00002AF8] : Real Offset 0x00002AF8
30 th SYMBOL POOL[0x00002AFC] : Real Offset 0x00002AFC
31 th SYMBOL POOL[0x00002B00] : Real Offset 0x00002B00
32 th SYMBOL POOL[0x00002B04] : Real Offset 0x00002B04
33 th SYMBOL POOL[0x00002B08] : Real Offset 0x00002B08
34 th SYMBOL POOL[0x00002B0C] : Real Offset 0x00002B0C
35 th SYMBOL POOL[0x00002B10] : Real Offset 0x00002B10
36 th SYMBOL POOL[0x00002B14] : Real Offset 0x00002B14
37 th SYMBOL POOL[0x00002B18] : Real Offset 0x00002B18
38 th SYMBOL POOL[0x00002B1C] : Real Offset 0x00002B1C
39 th SYMBOL POOL[0x00002B20] : Real Offset 0x00002B20
40 th SYMBOL POOL[0x00002B24] : Real Offset 0x00002B24
41 th SYMBOL POOL[0x00002B4C] : Real Offset 0x00002B4C
42 th SYMBOL POOL[0x00002B7C] : Real Offset 0x00002B7C
43 th SYMBOL POOL[0x00002B80] : Real Offset 0x00002B80
44 th SYMBOL POOL[0x00002B84] : Real Offset 0x00002B84
45 th SYMBOL POOL[0x00002B88] : Real Offset 0x00002B88
46 th SYMBOL POOL[0x00002B8C] : Real Offset 0x00002B8C
47 th SYMBOL POOL[0x00002B90] : Real Offset 0x00002B90
48 th SYMBOL POOL[0x00002B94] : Real Offset 0x00002B94
49 th SYMBOL POOL[0x00002B98] : Real Offset 0x00002B98
50 th SYMBOL POOL[0x00002B9C] : Real Offset 0x00002B9C
51 th SYMBOL POOL[0x00002BA0] : Real Offset 0x00002BA0
52 th SYMBOL POOL[0x00002BA4] : Real Offset 0x00002BA4
53 th SYMBOL POOL[0x00002BA8] : Real Offset 0x00002BA8
54 th SYMBOL POOL[0x00002BAC] : Real Offset 0x00002BAC
55 th SYMBOL POOL[0x00002BB0] : Real Offset 0x00002BB0
56 th SYMBOL POOL[0x00002BB4] : Real Offset 0x00002BB4
57 th SYMBOL POOL[0x00002BB8] : Real Offset 0x00002BB8
58 th SYMBOL POOL[0x00002BBC] : Real Offset 0x00002BBC
59 th SYMBOL POOL[0x00002BC8] : Real Offset 0x00002BC8
60 th SYMBOL POOL[0x00002BCC] : Real Offset 0x00002BCC
61 th SYMBOL POOL[0x00002BD0] : Real Offset 0x00002BD0
62 th SYMBOL POOL[0x00002BD4] : Real Offset 0x00002BD4
63 th SYMBOL POOL[0x00002BD8] : Real Offset 0x00002BD8
64 th SYMBOL POOL[0x00002BDC] : Real Offset 0x00002BDC
65 th SYMBOL POOL[0x00002BE0] : Real Offset 0x00002BE0
66 th SYMBOL POOL[0x00002BE4] : Real Offset 0x00002BE4
67 th SYMBOL POOL[0x00002BE8] : Real Offset 0x00002BE8
68 th SYMBOL POOL[0x00002BEC] : Real Offset 0x00002BEC
69 th SYMBOL POOL[0x00002BF0] : Real Offset 0x00002BF0
70 th SYMBOL POOL[0x00002BF4] : Real Offset 0x00002BF4
71 th SYMBOL POOL[0x00002BF8] : Real Offset 0x00002BF8
72 th SYMBOL POOL[0x00002BFC] : Real Offset 0x00002BFC
73 th SYMBOL POOL[0x00002C00] : Real Offset 0x00002C00
74 th SYMBOL POOL[0x00002C04] : Real Offset 0x00002C04
75 th SYMBOL POOL[0x00002C08] : Real Offset 0x00002C08
76 th SYMBOL POOL[0x00002C0C] : Real Offset 0x00002C0C
77 th SYMBOL POOL[0x00002C10] : Real Offset 0x00002C10
78 th SYMBOL POOL[0x00002C14] : Real Offset 0x00002C14
79 th SYMBOL POOL[0x00002C18] : Real Offset 0x00002C18
80 th SYMBOL POOL[0x00002C1C] : Real Offset 0x00002C1C
81 th SYMBOL POOL[0x00002C20] : Real Offset 0x00002C20
82 th SYMBOL POOL[0x00002C24] : Real Offset 0x00002C24
83 th SYMBOL POOL[0x00002C28] : Real Offset 0x00002C28
84 th SYMBOL POOL[0x00002C2C] : Real Offset 0x00002C2C
85 th SYMBOL POOL[0x00002C30] : Real Offset 0x00002C30
86 th SYMBOL POOL[0x00002C34] : Real Offset 0x00002C34
87 th SYMBOL POOL[0x00002C38] : Real Offset 0x00002C38
88 th SYMBOL POOL[0x00002C3C] : Real Offset 0x00002C3C
89 th SYMBOL POOL[0x00002C40] : Real Offset 0x00002C40
90 th SYMBOL POOL[0x00002C44] : Real Offset 0x00002C44
91 th SYMBOL POOL[0x00002C48] : Real Offset 0x00002C48
92 th SYMBOL POOL[0x00002C4C] : Real Offset 0x00002C4C
93 th SYMBOL POOL[0x00002C50] : Real Offset 0x00002C50
94 th SYMBOL POOL[0x00002C54] : Real Offset 0x00002C54
95 th SYMBOL POOL[0x00002C58] : Real Offset 0x00002C58
96 th SYMBOL POOL[0x00002C5C] : Real Offset 0x00002C5C
97 th SYMBOL POOL[0x00002C60] : Real Offset 0x00002C60
98 th SYMBOL POOL[0x00002C64] : Real Offset 0x00002C64
99 th SYMBOL POOL[0x00002C68] : Real Offset 0x00002C68
100th SYMBOL POOL[0x00002C74] : Real Offset 0x00002C74
